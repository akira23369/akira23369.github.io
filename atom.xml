<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-05-14T16:08:26.828Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2.角色状态机</title>
    <link href="http://example.com/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/"/>
    <id>http://example.com/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/</id>
    <published>2025-05-13T08:29:27.000Z</published>
    <updated>2025-05-14T16:08:26.828Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建有限状态机"><a class="markdownIt-Anchor" href="#创建有限状态机"></a> 创建有限状态机</h1><p>玩家状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>玩家状态机脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerStateMachine</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> PlayerState currentState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params">PlayerState _startState</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentState = _startState;</span><br><span class="line">        currentState.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeState</span>(<span class="params">PlayerState _newState</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentState.Exit();</span><br><span class="line">        currentState = _newState;</span><br><span class="line">        currentState.Enter();</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>玩家脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);</span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>玩家移动状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerMoveState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerMoveState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.N))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>玩家闲置状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerIdleState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerIdleState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.N))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.moveState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用状态机设置动画控制器"><a class="markdownIt-Anchor" href="#使用状态机设置动画控制器"></a> 使用状态机设置动画控制器</h1><p><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250513171607179.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();    </span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过下面的函数来进行状态机的状态切换</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用状态机实现移动"><a class="markdownIt-Anchor" href="#使用状态机实现移动"></a> 使用状态机实现移动</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家移动状态类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerMoveState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerMoveState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(xInput * player.moveSpeed, rb.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (xInput == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        xInput = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="使用状态机实现跳跃"><a class="markdownIt-Anchor" href="#使用状态机实现跳跃"></a> 使用状态机实现跳跃</h1><p>创建跳跃动画和下落动画，创建跳跃下落混合树</p><p><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514000941308.png" alt="" /><br /><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514001046281.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = _animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        xInput = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        player.anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建PlayerGroundedState，PlayerMoveState和PlayerIdleState继承PlayerGroundedState</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState  = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建PlayerAirState</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAirState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerAirState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (rb.velocity.y == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新建PlayerJumpState</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerJumpState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerJumpState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, player.jumpForce); <span class="comment">// 重置y轴速度</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (rb.velocity.y &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="碰撞检测"><a class="markdownIt-Anchor" href="#碰撞检测"></a> 碰撞检测</h1><p><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514004007490.png" alt="" /></p><p>给玩家脚本添加相关的碰撞检测参数</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState  = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt; </span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>更改地面切换跳跃时的条件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>同样更改空中条件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAirState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerAirState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="翻转flip"><a class="markdownIt-Anchor" href="#翻转flip"></a> 翻转Flip</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState  = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt; </span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="创建冲刺状态"><a class="markdownIt-Anchor" href="#创建冲刺状态"></a> 创建冲刺状态</h1><p>添加冲刺动画<br /><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514012729343.png" alt="" /></p><p>新增PlayerDashState脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerDashState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerDashState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = player.dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        player.SetVelocity(<span class="number">0f</span>, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.dashSpeed * player.facingDir, rb.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Player里面新增dashState</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PlayerState里面添加状态计时器</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> stateTimer;     <span class="comment">// 状态计时器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = _animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        xInput = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        player.anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">        stateTimer -= Time.deltaTime;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>地面状态添加切换冲刺状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.dashState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="改进冲刺状态"><a class="markdownIt-Anchor" href="#改进冲刺状态"></a> 改进冲刺状态</h1><p>让冲刺能在空中时候用，添加冲刺冷却</p><p>Player添加冲刺方向和冲刺计时器等相关字段，并更新</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>冲刺方向</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerDashState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerDashState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = player.dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        player.SetVelocity(<span class="number">0f</span>, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.dashSpeed * player.dashDir, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>不在地面状态时要切换为空中状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update(); </span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="墙面滑动状态"><a class="markdownIt-Anchor" href="#墙面滑动状态"></a> 墙面滑动状态</h1><p>更改角色轴心点击，不让其在空气墙滑动<br /><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514181427080.png" alt="" /></p><p>PlayerState添加y轴的输入</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> yInput;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> stateTimer;     <span class="comment">// 状态计时器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = _animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="comment">// 进入通过设置Bool值来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在进入 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在更新 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);        <span class="comment">// 注意这里不能用GetAxis，因为GetAxis会平滑处理输入</span></span><br><span class="line">        yInput = Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        player.anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">        stateTimer -= Time.deltaTime;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 退出也是通过设置Bool来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;我正在退出 <span class="subst">&#123;animBoolName&#125;</span>状态&quot;</span>);</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAirState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerAirState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (player.IsWallDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallSlide);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            player.SetVelocity(player.moveSpeed * <span class="number">0.8f</span> * xInput, rb.velocity.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新增墙面滑动状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerWallSlideState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerWallSlideState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，面朝向和输入方向不一致</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span> &amp;&amp; player.facingDir != xInput)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，向下按键调整下滑速度</span></span><br><span class="line">        <span class="keyword">if</span> (yInput &lt; <span class="number">0</span>)</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y * <span class="number">0.7f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>添加墙面滑动状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallSlideState wallSlide &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">        wallSlide = <span class="keyword">new</span> PlayerWallSlideState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;WallSlide&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">        Debug.Log(IsWallDetected());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 墙壁检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsWallDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(wallCheck.position, Vector2.right * facingDir, wallCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="墙面跳跃状态"><a class="markdownIt-Anchor" href="#墙面跳跃状态"></a> 墙面跳跃状态</h1><p>新建墙面跳跃状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerWallJumpState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerWallJumpState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = <span class="number">0.4f</span>;</span><br><span class="line">        <span class="comment">// 进入墙壁跳跃状态时设置玩家速度，使其超反方向跳</span></span><br><span class="line">        player.SetVelocity(<span class="number">5</span> * -player.facingDir, player.jumpForce); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳跃时间到达后，切换到空中状态</span></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果时间没到，并且玩家落到地面照样切状态</span></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Player添加状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallSlideState wallSlide &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallJumpState wallJump &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">        wallSlide = <span class="keyword">new</span> PlayerWallSlideState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;WallSlide&quot;</span>);</span><br><span class="line">        wallJump = <span class="keyword">new</span> PlayerWallJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 墙壁检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsWallDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(wallCheck.position, Vector2.right * facingDir, wallCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查冲刺输入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//if (IsWallDetected()) return;     // 碰到墙壁时不允许冲刺</span></span><br><span class="line"></span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>墙面滑行状态切换到墙面跳跃状态，注意return；</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerWallSlideState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerWallSlideState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 墙面滑动状态下跳跃</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallJump);</span><br><span class="line">            <span class="keyword">return</span>;     <span class="comment">// 跳跃状态下不需要执行下面的代码</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，面朝向和输入方向不一致</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span> &amp;&amp; player.facingDir != xInput)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，向下按键调整下滑速度</span></span><br><span class="line">        <span class="keyword">if</span> (yInput &lt; <span class="number">0</span>)</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y * <span class="number">0.7f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果冲刺到墙上</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerDashState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerDashState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = player.dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        player.SetVelocity(<span class="number">0f</span>, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果冲刺到墙上</span></span><br><span class="line">        <span class="keyword">if</span> (!player.IsGroundDetected() &amp;&amp; player.IsWallDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallSlide);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.dashSpeed * player.dashDir, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="主要攻击状态"><a class="markdownIt-Anchor" href="#主要攻击状态"></a> 主要攻击状态</h1><p>新增动画触发器字段triggerCalled和AnimationFinishTrigger函数</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> yInput;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> stateTimer;     <span class="comment">// 状态计时器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">bool</span> triggerCalled;     <span class="comment">// 动画触发器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = _animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="comment">// 进入通过设置Bool值来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">        triggerCalled = <span class="literal">false</span>;      <span class="comment">// 总为假，除非动画被调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);        <span class="comment">// 注意这里不能用GetAxis，因为GetAxis会平滑处理输入</span></span><br><span class="line">        yInput = Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        player.anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">        stateTimer -= Time.deltaTime;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 退出也是通过设置Bool来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动画结束触发器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">AnimationFinishTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        triggerCalled = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新增攻击状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrimaryAttackState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerPrimaryAttackState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 如果结束触发器被调用，切换到空闲状态</span></span><br><span class="line">        <span class="keyword">if</span> (triggerCalled)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Player新增状态和动画结束触发器</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallSlideState wallSlide &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallJumpState wallJump &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerPrimaryAttackState primaryAttack &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">        wallSlide = <span class="keyword">new</span> PlayerWallSlideState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;WallSlide&quot;</span>);</span><br><span class="line">        wallJump = <span class="keyword">new</span> PlayerWallJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        primaryAttack = <span class="keyword">new</span> PlayerPrimaryAttackState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Attack&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span> =&gt; stateMachine.currentState.AnimationFinishTrigger(); <span class="comment">// 动画结束触发器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 墙壁检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsWallDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(wallCheck.position, Vector2.right * facingDir, wallCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查冲刺输入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//if (IsWallDetected()) return;     // 碰到墙壁时不允许冲刺</span></span><br><span class="line"></span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>地面状态切换攻击状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Mouse0))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.primaryAttack);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新增动画触发器类，主要用于外面动画调用<br /><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514201646535.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家动画触发器，给外部动画调用</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAnimationTriggers</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Player player =&gt; GetComponentInParent&lt;Player&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player.AnimationTrigger();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="连击攻击"><a class="markdownIt-Anchor" href="#连击攻击"></a> 连击攻击</h1><p><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514213407913.png" alt="" /></p><p><img src="/2025/05/13/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/2.%E8%A7%92%E8%89%B2%E7%8A%B6%E6%80%81%E6%9C%BA/file-20250514213430534.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrimaryAttackState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> comboCounter;   <span class="comment">// 连击数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> lastTimeAttacked;     <span class="comment">// 上一次攻击的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> comboWindow = <span class="number">2</span>;     <span class="comment">// 连击窗口（连击重置前的时间）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerPrimaryAttackState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        <span class="keyword">if</span> (comboCounter &gt; <span class="number">2</span> || Time.time &gt;= lastTimeAttacked + comboWindow)</span><br><span class="line">            comboCounter = <span class="number">0</span>;</span><br><span class="line">        player.anim.SetInteger(<span class="string">&quot;ComboCounter&quot;</span>, comboCounter); <span class="comment">// 设置连击数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        comboCounter++;</span><br><span class="line">        lastTimeAttacked = Time.time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果结束触发器被调用，切换到空闲状态</span></span><br><span class="line">        <span class="keyword">if</span> (triggerCalled)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="最终确定的攻击状态"><a class="markdownIt-Anchor" href="#最终确定的攻击状态"></a> 最终确定的攻击状态</h1><p>走路惯性攻击，连击攻击时的移动</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrimaryAttackState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> comboCounter;   <span class="comment">// 连击数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> lastTimeAttacked;     <span class="comment">// 上一次攻击的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> comboWindow = <span class="number">2</span>;     <span class="comment">// 连击窗口（连击重置前的时间）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerPrimaryAttackState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        <span class="keyword">if</span> (comboCounter &gt; <span class="number">2</span> || Time.time &gt;= lastTimeAttacked + comboWindow)</span><br><span class="line">            comboCounter = <span class="number">0</span>;</span><br><span class="line">        player.anim.SetInteger(<span class="string">&quot;ComboCounter&quot;</span>, comboCounter); <span class="comment">// 设置连击数</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">float</span> attackDir = player.facingDir;     <span class="comment">// 使用新的现成的输入来做攻击方向</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span>)</span><br><span class="line">            attackDir = xInput;</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.attackMovement[comboCounter].x * attackDir, player.attackMovement[comboCounter].y);</span><br><span class="line"></span><br><span class="line">        stateTimer = <span class="number">0.1f</span>;      <span class="comment">// 下面攻击停止留一点时间，作为走路惯性</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        <span class="comment">// 攻击结束后，设置5秒的忙碌状态</span></span><br><span class="line">        player.StartCoroutine(<span class="string">&quot;BusyFor&quot;</span>, <span class="number">0.15f</span>);</span><br><span class="line">        comboCounter++;</span><br><span class="line">        lastTimeAttacked = Time.time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            player.ZeroVelocity();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果结束触发器被调用，切换到空闲状态</span></span><br><span class="line">        <span class="keyword">if</span> (triggerCalled)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>新增协程函数BusyFor，增加控制攻击细节的连击移动值，是否忙碌</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;攻击细节&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Vector2[] attackMovement;      <span class="comment">// 连击攻击的移动值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否忙碌（攻击连击会有一瞬间切换到移动状态，这里的变量就是解决这问题）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isBusy &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="literal">false</span>; </span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallSlideState wallSlide &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallJumpState wallJump &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerPrimaryAttackState primaryAttack &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">        wallSlide = <span class="keyword">new</span> PlayerWallSlideState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;WallSlide&quot;</span>);</span><br><span class="line">        wallJump = <span class="keyword">new</span> PlayerWallJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        primaryAttack = <span class="keyword">new</span> PlayerPrimaryAttackState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Attack&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IEnumerator <span class="title">BusyFor</span>(<span class="params"><span class="built_in">float</span> _seconds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        isBusy = <span class="literal">true</span>;</span><br><span class="line">        <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span>(<span class="params">_seconds</span>)</span>;</span><br><span class="line">        isBusy = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span> =&gt; stateMachine.currentState.AnimationFinishTrigger(); <span class="comment">// 动画结束触发器</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 速度</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ZeroVelocity</span>()</span> =&gt; rb.velocity = Vector2.zero; <span class="comment">// 设置速度为0</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 碰撞</span></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 墙壁检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsWallDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(wallCheck.position, Vector2.right * facingDir, wallCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 翻转</span></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    <span class="comment">// 检查冲刺输入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//if (IsWallDetected()) return;     // 碰到墙壁时不允许冲刺</span></span><br><span class="line"></span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Player忙碌时不移动，具体点就是连击的时候用协程控制忙碌，从而不让其切换到移动状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家Idle状态类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerIdleState</span> : <span class="title">PlayerGroundedState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerIdleState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        player.ZeroVelocity(); <span class="comment">// 可以解决从空中掉落到地面时，速度不为0的问题</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//if (xInput == player.facingDir &amp;&amp; player.IsWallDetected())</span></span><br><span class="line">        <span class="comment">//    return;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只有在玩家无输入，并且不忙的时候</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span> &amp;&amp; !player.isBusy)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.moveState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="阶段性代码总结"><a class="markdownIt-Anchor" href="#阶段性代码总结"></a> 阶段性代码总结</h1><h2 id="player"><a class="markdownIt-Anchor" href="#player"></a> Player</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;攻击细节&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> Vector2[] attackMovement;      <span class="comment">// 连击攻击的移动值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 是否忙碌（攻击连击会有一瞬间切换到移动状态，这里的变量就是解决这问题）</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isBusy &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="literal">false</span>; </span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">12f</span>;    <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> jumpForce;          <span class="comment">// 跳跃力度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;     <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashUsageTimer;       <span class="comment">// 冲刺使用计时器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashSpeed;          <span class="comment">// 冲刺速度    </span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDuration;       <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> dashDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> facingDir &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125; = <span class="number">1</span>;     <span class="comment">// 1表示右，-1表示左</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform groundCheck;     <span class="comment">// 地面检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance; <span class="comment">// 地面检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> Transform wallCheck;       <span class="comment">// 墙壁检测点</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> <span class="built_in">float</span> wallCheckDistance;   <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>] <span class="keyword">private</span> LayerMask whatIsGround;    <span class="comment">// 地面层级</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 组件</span></span><br><span class="line">    <span class="keyword">public</span> Animator anim &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> Rigidbody2D rb &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 状态</span></span><br><span class="line">    <span class="keyword">public</span> PlayerStateMachine stateMachine &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerIdleState idleState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerMoveState moveState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerJumpState jumpState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerAirState airState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallSlideState wallSlide &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerWallJumpState wallJump &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerDashState dashState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="keyword">public</span> PlayerPrimaryAttackState primaryAttack &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine = <span class="keyword">new</span> PlayerStateMachine();</span><br><span class="line">        idleState = <span class="keyword">new</span> PlayerIdleState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Idle&quot;</span>);    <span class="comment">// 这里的Idle是动画过渡条件</span></span><br><span class="line">        moveState = <span class="keyword">new</span> PlayerMoveState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Move&quot;</span>);</span><br><span class="line">        jumpState = <span class="keyword">new</span> PlayerJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        airState = <span class="keyword">new</span> PlayerAirState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        dashState = <span class="keyword">new</span> PlayerDashState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Dash&quot;</span>);</span><br><span class="line">        wallSlide = <span class="keyword">new</span> PlayerWallSlideState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;WallSlide&quot;</span>);</span><br><span class="line">        wallJump = <span class="keyword">new</span> PlayerWallJumpState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Jump&quot;</span>);</span><br><span class="line">        primaryAttack = <span class="keyword">new</span> PlayerPrimaryAttackState(<span class="keyword">this</span>, stateMachine, <span class="string">&quot;Attack&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        stateMachine.Initialize(idleState);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        stateMachine.currentState.Update();</span><br><span class="line">        CheckForDashInput();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IEnumerator <span class="title">BusyFor</span>(<span class="params"><span class="built_in">float</span> _seconds</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        isBusy = <span class="literal">true</span>;</span><br><span class="line">        <span class="function"><span class="keyword">yield</span> <span class="keyword">return</span> <span class="keyword">new</span> <span class="title">WaitForSeconds</span>(<span class="params">_seconds</span>)</span>;</span><br><span class="line">        isBusy = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span> =&gt; stateMachine.currentState.AnimationFinishTrigger(); <span class="comment">// 动画结束触发器</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 速度</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ZeroVelocity</span>()</span> =&gt; rb.velocity = Vector2.zero; <span class="comment">// 设置速度为0</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetVelocity</span>(<span class="params"><span class="built_in">float</span> _xVelocity, <span class="built_in">float</span> _yVelocity</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(_xVelocity, _yVelocity);</span><br><span class="line">        FlipController(_xVelocity);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 碰撞</span></span><br><span class="line">    <span class="comment">// 地面检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsGroundDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 墙壁检测</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">IsWallDetected</span>()</span> =&gt;</span><br><span class="line">        Physics2D.Raycast(wallCheck.position, Vector2.right * facingDir, wallCheckDistance, whatIsGround);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画线辅助检测地面和墙面</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, groundCheck.position + Vector3.down * groundCheckDistance);</span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, wallCheck.position + Vector3.right * wallCheckDistance);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="keyword">region</span> 翻转</span></span><br><span class="line">    <span class="comment">// 翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir *= <span class="number">-1</span>;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 根据面朝向和传入的x来确认是否翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FlipController</span>(<span class="params"><span class="built_in">float</span> _x</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (_x &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (_x &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    <span class="comment">// 检查冲刺输入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckForDashInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//if (IsWallDetected()) return;     // 碰到墙壁时不允许冲刺</span></span><br><span class="line"></span><br><span class="line">        dashUsageTimer -= Time.deltaTime; <span class="comment">// 更新冲刺计时器</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift) &amp;&amp; dashUsageTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            dashUsageTimer = dashCooldown; <span class="comment">// 重置冲刺计时器</span></span><br><span class="line">            dashDir = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);   <span class="comment">// 将冲刺方向设置为水平输入</span></span><br><span class="line">            <span class="keyword">if</span> (dashDir == <span class="number">0</span>) dashDir = facingDir; <span class="comment">// 如果没有水平输入，则使用当前面朝方向</span></span><br><span class="line">            stateMachine.ChangeState(dashState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerstate"><a class="markdownIt-Anchor" href="#playerstate"></a> PlayerState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家状态类基类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerState</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> PlayerStateMachine stateMachine;</span><br><span class="line">    <span class="keyword">protected</span> Player player;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;       <span class="comment">// 玩家刚体</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> animBoolName;        <span class="comment">// 动画过渡条件</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> xInput;     <span class="comment">// 水平输入</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> yInput;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> stateTimer;     <span class="comment">// 状态计时器</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">bool</span> triggerCalled;     <span class="comment">// 动画触发器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = _player;</span><br><span class="line">        stateMachine = _stateMachine;</span><br><span class="line">        <span class="keyword">this</span>.animBoolName = _animBoolName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 状态机的状态切换相关函数</span></span><br><span class="line">    <span class="comment">// 进入通过设置Bool值来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = player.rb;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">true</span>);</span><br><span class="line">        triggerCalled = <span class="literal">false</span>;      <span class="comment">// 总为假，除非动画被调用</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);        <span class="comment">// 注意这里不能用GetAxis，因为GetAxis会平滑处理输入</span></span><br><span class="line">        yInput = Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        player.anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">        stateTimer -= Time.deltaTime;   </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 退出也是通过设置Bool来切换动画</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player.anim.SetBool(animBoolName, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动画结束触发器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">AnimationFinishTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        triggerCalled = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerstatemachine"><a class="markdownIt-Anchor" href="#playerstatemachine"></a> PlayerStateMachine</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 状态机类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerStateMachine</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> PlayerState currentState &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Initialize</span>(<span class="params">PlayerState _startState</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentState = _startState;</span><br><span class="line">        currentState.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeState</span>(<span class="params">PlayerState _newState</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        currentState.Exit();</span><br><span class="line">        currentState = _newState;</span><br><span class="line">        currentState.Enter();</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playeridlestate"><a class="markdownIt-Anchor" href="#playeridlestate"></a> PlayerIdleState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家Idle状态类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerIdleState</span> : <span class="title">PlayerGroundedState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerIdleState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        player.ZeroVelocity(); <span class="comment">// 可以解决从空中掉落到地面时，速度不为0的问题</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//if (xInput == player.facingDir &amp;&amp; player.IsWallDetected())</span></span><br><span class="line">        <span class="comment">//    return;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只有在玩家无输入，并且不忙的时候</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span> &amp;&amp; !player.isBusy)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.moveState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playermovestate"><a class="markdownIt-Anchor" href="#playermovestate"></a> PlayerMoveState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家移动状态类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerMoveState</span> : <span class="title">PlayerGroundedState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerMoveState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(xInput * player.moveSpeed, rb.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (xInput == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerjumpstate"><a class="markdownIt-Anchor" href="#playerjumpstate"></a> PlayerJumpState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerJumpState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerJumpState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, player.jumpForce); <span class="comment">// 重置y轴速度</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (rb.velocity.y &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playergroundedstate"><a class="markdownIt-Anchor" href="#playergroundedstate"></a> PlayerGroundedState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerGroundedState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerGroundedState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.Mouse0))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.primaryAttack);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space) &amp;&amp; player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.jumpState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerairstate"><a class="markdownIt-Anchor" href="#playerairstate"></a> PlayerAirState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAirState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerAirState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        <span class="keyword">if</span> (player.IsWallDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallSlide);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            player.SetVelocity(player.moveSpeed * <span class="number">0.8f</span> * xInput, rb.velocity.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerdashstate"><a class="markdownIt-Anchor" href="#playerdashstate"></a> PlayerDashState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerDashState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerDashState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = player.dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        player.SetVelocity(<span class="number">0f</span>, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果冲刺到墙上</span></span><br><span class="line">        <span class="keyword">if</span> (!player.IsGroundDetected() &amp;&amp; player.IsWallDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallSlide);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.dashSpeed * player.dashDir, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerprimaryattackstate"><a class="markdownIt-Anchor" href="#playerprimaryattackstate"></a> PlayerPrimaryAttackState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrimaryAttackState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> comboCounter;   <span class="comment">// 连击数</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> lastTimeAttacked;     <span class="comment">// 上一次攻击的时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> comboWindow = <span class="number">2</span>;     <span class="comment">// 连击窗口（连击重置前的时间）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerPrimaryAttackState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        <span class="keyword">if</span> (comboCounter &gt; <span class="number">2</span> || Time.time &gt;= lastTimeAttacked + comboWindow)</span><br><span class="line">            comboCounter = <span class="number">0</span>;</span><br><span class="line">        player.anim.SetInteger(<span class="string">&quot;ComboCounter&quot;</span>, comboCounter); <span class="comment">// 设置连击数</span></span><br><span class="line"></span><br><span class="line">        <span class="built_in">float</span> attackDir = player.facingDir;     <span class="comment">// 使用新的现成的输入来做攻击方向</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span>)</span><br><span class="line">            attackDir = xInput;</span><br><span class="line"></span><br><span class="line">        player.SetVelocity(player.attackMovement[comboCounter].x * attackDir, player.attackMovement[comboCounter].y);</span><br><span class="line"></span><br><span class="line">        stateTimer = <span class="number">0.1f</span>;      <span class="comment">// 下面攻击停止留一点时间，作为走路惯性</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">        <span class="comment">// 攻击结束后，设置5秒的忙碌状态</span></span><br><span class="line">        player.StartCoroutine(<span class="string">&quot;BusyFor&quot;</span>, <span class="number">0.15f</span>);</span><br><span class="line">        comboCounter++;</span><br><span class="line">        lastTimeAttacked = Time.time;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            player.ZeroVelocity();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果结束触发器被调用，切换到空闲状态</span></span><br><span class="line">        <span class="keyword">if</span> (triggerCalled)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerwalljumpstate"><a class="markdownIt-Anchor" href="#playerwalljumpstate"></a> PlayerWallJumpState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerWallJumpState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerWallJumpState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">        stateTimer = <span class="number">0.4f</span>;</span><br><span class="line">        <span class="comment">// 进入墙壁跳跃状态时设置玩家速度，使其超反方向跳</span></span><br><span class="line">        player.SetVelocity(<span class="number">5</span> * -player.facingDir, player.jumpForce); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 跳跃时间到达后，切换到空中状态</span></span><br><span class="line">        <span class="keyword">if</span> (stateTimer &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.airState);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果时间没到，并且玩家落到地面照样切状态</span></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playerwallslidestate"><a class="markdownIt-Anchor" href="#playerwallslidestate"></a> PlayerWallSlideState</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerWallSlideState</span> : <span class="title">PlayerState</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerWallSlideState</span>(<span class="params">Player _player, PlayerStateMachine _stateMachine, <span class="built_in">string</span> _animBoolName</span>) : <span class="title">base</span>(<span class="params">_player, _stateMachine, _animBoolName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Enter</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Enter();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Exit</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Exit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 墙面滑动状态下跳跃</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.wallJump);</span><br><span class="line">            <span class="keyword">return</span>;     <span class="comment">// 跳跃状态下不需要执行下面的代码</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，面朝向和输入方向不一致</span></span><br><span class="line">        <span class="keyword">if</span> (xInput != <span class="number">0</span> &amp;&amp; player.facingDir != xInput)</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果在墙面滑动状态时，向下按键调整下滑速度</span></span><br><span class="line">        <span class="keyword">if</span> (yInput &lt; <span class="number">0</span>)</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, rb.velocity.y * <span class="number">0.7f</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (player.IsGroundDetected())</span><br><span class="line">        &#123;</span><br><span class="line">            stateMachine.ChangeState(player.idleState);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="playeranimationtriggers"><a class="markdownIt-Anchor" href="#playeranimationtriggers"></a> PlayerAnimationTriggers</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家动画触发器，给外部动画调用</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAnimationTriggers</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Player player =&gt; GetComponentInParent&lt;Player&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player.AnimationTrigger();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建有限状态机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建有限状态机&quot;&gt;&lt;/a&gt; 创建有限状态机&lt;/h1&gt;
&lt;p&gt;玩家状态&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td clas</summary>
      
    
    
    
    <category term="项目" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Unity制作RPG游戏" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Unity制作RPG游戏" scheme="http://example.com/tags/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>租房相关</title>
    <link href="http://example.com/2025/05/07/%E7%94%9F%E6%B4%BB/%E7%A7%9F%E6%88%BF%E7%9B%B8%E5%85%B3/"/>
    <id>http://example.com/2025/05/07/%E7%94%9F%E6%B4%BB/%E7%A7%9F%E6%88%BF%E7%9B%B8%E5%85%B3/</id>
    <published>2025-05-07T03:40:09.000Z</published>
    <updated>2025-05-07T03:42:23.551Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/05/07/%E7%94%9F%E6%B4%BB/%E7%A7%9F%E6%88%BF%E7%9B%B8%E5%85%B3/461a51e783ebf7a18a4e3fe91d3558e6492164612%201.png" alt="" /></p><p><img src="/2025/05/07/%E7%94%9F%E6%B4%BB/%E7%A7%9F%E6%88%BF%E7%9B%B8%E5%85%B3/fb972fcbcad09d76a672463945580147492164612%201.png" alt="" /></p><p>【你租的房子，是谋财害命的串串房吗？】</p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=1505522953&bvid=BV1JD421M7Fd&cid=1578195293&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/05/07/%E7%94%9F%E6%B4%BB/%E7%A7%9F%E6%88%BF%E7%9B%B8%E5%85%B3/461a51e783ebf7a18a4e3fe91d3558e6492164612%201.png&quot; alt=&quot;&quot; /</summary>
      
    
    
    
    <category term="生活" scheme="http://example.com/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="生活" scheme="http://example.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>1.项目所需的知识</title>
    <link href="http://example.com/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/"/>
    <id>http://example.com/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/</id>
    <published>2025-04-27T05:32:38.000Z</published>
    <updated>2025-05-08T10:03:27.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="刚体相关"><a class="markdownIt-Anchor" href="#刚体相关"></a> 刚体相关</h1><a href="/2025/02/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E5%85%A5%E9%97%A8/unity%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/25.%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E4%B9%8B%E5%88%9A%E4%BD%93/#xx" title="25.碰撞检测之刚体">刚体</a><h1 id="输入相关"><a class="markdownIt-Anchor" href="#输入相关"></a> 输入相关</h1><a href="/2025/02/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E5%85%A5%E9%97%A8/unity%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/19.Input%E8%BE%93%E5%85%A5%E7%9B%B8%E5%85%B3/#xx" title="19.Input输入相关">Input输入相关</a><h1 id="序列化字段"><a class="markdownIt-Anchor" href="#序列化字段"></a> 序列化字段</h1><a href="/2025/02/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E5%85%A5%E9%97%A8/unity%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.inspector%E7%AA%97%E5%8F%A3%E5%8F%AF%E7%BC%96%E8%BE%91%E5%8F%98%E9%87%8F/#xx" title="10.inspector窗口可编辑变量">xx</a><h1 id="精灵图集"><a class="markdownIt-Anchor" href="#精灵图集"></a> 精灵图集</h1><a href="/2025/03/13/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/9.SpriteEditor%E4%B9%8BSingle/#xx" title="9.SpriteEditor之Single">SpriteEditor相关</a><p>导入图集，直接将png图片拖入到资源文件夹<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/007%20Warrior-Sheet-Effect.png" alt="" /></p><p>并切割<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427134043947.png" alt="" /></p><p>让图中人物更加锐利<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427134209453.png" alt="" /></p><p>为Player创建一个子物体添加Sprite Renderer</p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427135516052.png" alt="" /></p><p>更改中心点<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E6%9B%B4%E6%94%B9%E4%B8%AD%E5%BF%83%E7%82%B9%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427140616259.png" alt="" /></p><h1 id="动画控制器"><a class="markdownIt-Anchor" href="#动画控制器"></a> 动画控制器</h1><a href="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/#xx" title="30.创建和编辑Animation动画文件">创建和编辑Animation动画文件相关</a><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>为其添加动画<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E6%B7%BB%E5%8A%A0%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>同理添加玩家移动动画<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E6%B7%BB%E5%8A%A0%E7%8E%A9%E5%AE%B6%E7%A7%BB%E5%8A%A8%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>使用动画控制器来进行状态机切换</p><a href="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/#xx" title="33.AnimatorController动画控制器">动画控制器相关</a><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427144213395.png" alt="" /></p><p>无痛动画切换<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250427145159335.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> xInput;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rb;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> jumpForce;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Animator anim;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> isMoving = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        <span class="comment">// 获取子物体的Animator组件</span></span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpForce);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="清理代码"><a class="markdownIt-Anchor" href="#清理代码"></a> 清理代码</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> xInput;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rb;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> jumpForce;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Animator anim;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        <span class="comment">// 获取子物体的Animator组件</span></span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Movement();</span><br><span class="line">        CheckInput();</span><br><span class="line">        AnimatorController();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            Jump();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角色移动</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳跃操作</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Jump</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpForce);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动画控制器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置动画参数</span></span><br><span class="line">        <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>整理项目结构<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507150344408.png" alt="" /></p><h1 id="翻转角色"><a class="markdownIt-Anchor" href="#翻转角色"></a> 翻转角色</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> xInput;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rb;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> jumpForce;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Animator anim;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> facingDir = <span class="number">1</span>; <span class="comment">// 1表示面向右侧，-1表示面向左侧</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>; <span class="comment">// 初始面向右侧</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        <span class="comment">// 获取子物体的Animator组件</span></span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Movement();</span><br><span class="line">        CheckInput();</span><br><span class="line">        FlipController();</span><br><span class="line">        AnimatorController();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            Jump();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角色移动</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳跃操作</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Jump</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpForce);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动画控制器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置动画参数</span></span><br><span class="line">        <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角色翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir = <span class="number">-1</span> * facingDir;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        <span class="comment">// 绕Y轴旋转180度</span></span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转控制器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FlipController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (xInput &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">        &#123;</span><br><span class="line">            Flip();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (xInput &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">        &#123;</span><br><span class="line">            Flip();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2d地面检测"><a class="markdownIt-Anchor" href="#2d地面检测"></a> 2d地面检测</h1><p>通过这个红线来检测地面<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507160832808.png" alt="" /><br />设置地面层级<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507160930462.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> isGrounded;</span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> groundCheckDistance;</span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> LayerMask whatIsGround;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="comment">// 是否检测到地面</span></span><br><span class="line">        isGrounded = Physics2D.Raycast(transform.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(transform.position, <span class="keyword">new</span> Vector3(transform.position.x, transform.position.y - groundCheckDistance));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h1 id="跳跃动画"><a class="markdownIt-Anchor" href="#跳跃动画"></a> 跳跃动画</h1><p>先在Animator那添加跳跃和下落动画剪辑<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507164119778.png" alt="" /></p><p>创建跳跃和下落的混合树，并通过设置条件是否在地面上来进行状态切换</p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507164039564.png" alt="" /></p><p>对混合树如下设置<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507164352259.png" alt="" /></p><p>代码设置<br />Player.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动画控制器</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置动画参数</span></span><br><span class="line">    <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">    anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isGrounded&quot;</span>, isGrounded);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="粘墙问题"><a class="markdownIt-Anchor" href="#粘墙问题"></a> 粘墙问题</h1><p>创建2d物理材质，将摩擦改为0<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507164708378.png" alt="" /></p><p>然后关联<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507164742742.png" alt="" /></p><h1 id="冲刺与计时器"><a class="markdownIt-Anchor" href="#冲刺与计时器"></a> 冲刺与计时器</h1><p>实现的框架</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashDuration;     <span class="comment">// 冲刺持续时间</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashTime;         <span class="comment">// 冲刺时间</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    dashTime -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift))</span><br><span class="line">    &#123;</span><br><span class="line">        dashTime = dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dashTime &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;冲刺中...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E5%86%B2%E5%88%BA%E6%97%B6%E9%97%B4%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>实际实现</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashDuration;     <span class="comment">// 冲刺持续时间</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashTime;         <span class="comment">// 冲刺时间</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (dashTime &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(xInput * dashSpeed, rb.velocity.y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>创建冲刺动画，并进行相关状态机的设置</p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507171630679.png" alt="" /></p><p>通过dashTime设置状态转换的参数</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 动画控制器</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置动画参数</span></span><br><span class="line">    <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">    anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isGrounded&quot;</span>, isGrounded);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isDashing&quot;</span>, dashTime &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里有个问题</p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E5%86%B2%E5%88%BA%E9%97%AE%E9%A2%98%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>可以下面设置就行</p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507172037235.png" alt="" /></p><p><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/%E8%A7%92%E8%89%B2%E5%86%B2%E5%88%BA%E7%A4%BA%E4%BE%8B%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>相关代码Player.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Header~(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashDuration;     <span class="comment">// 冲刺持续时间</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashTime;         <span class="comment">// 冲刺时间</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashSpeed;        <span class="comment">// 冲刺速度~</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 角色移动</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (dashTime &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(xInput * dashSpeed, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 动画控制器</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 设置动画参数</span></span><br><span class="line">    <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">    anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isGrounded&quot;</span>, isGrounded);</span><br><span class="line">    anim.SetBool(<span class="string">&quot;isDashing&quot;</span>, dashTime &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    dashTime -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift))</span><br><span class="line">    &#123;</span><br><span class="line">        dashTime = dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="冲刺冷却"><a class="markdownIt-Anchor" href="#冲刺冷却"></a> 冲刺冷却</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;      <span class="comment">// 冲刺冷却时间</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> dashCooldownTimer;  <span class="comment">// 冲刺冷却计时器 &gt; 0 表示正在冷却</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 冲刺技能</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DashAblity</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 如果冲刺计时器大于0，表示正在冲刺，不能再次冲刺</span></span><br><span class="line">    <span class="keyword">if</span> (dashCooldownTimer &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        dashCooldownTimer = dashCooldown;</span><br><span class="line">        dashTime = dashDuration;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckInput</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">    &#123;</span><br><span class="line">        Jump();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift))</span><br><span class="line">    &#123;</span><br><span class="line">        DashAblity();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    Movement();</span><br><span class="line">    CheckInput();</span><br><span class="line">    CollisionChecks();</span><br><span class="line"></span><br><span class="line">    dashTime -= Time.deltaTime;</span><br><span class="line">    dashCooldownTimer -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    FlipController();</span><br><span class="line">    AnimatorController();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="攻击动画"><a class="markdownIt-Anchor" href="#攻击动画"></a> 攻击动画</h1><p>添加各个新动画<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507212926639.png" alt="" /></p><p>动画过渡条件如下<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507213015797.png" alt="" /></p><p>动画退出条件<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250507213047388.png" alt="" /></p><p>Player.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">Header(<span class="string">&quot;攻击信息&quot;</span>)</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">bool</span> isAttacking;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">int</span> comboCounter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackOver</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    isAttacking = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PlayerAnimEvents.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAnimEvents</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Player player;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GetComponentInParent&lt;Player&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 结束攻击</span></span><br><span class="line">        player.AttackOver();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="攻击连击"><a class="markdownIt-Anchor" href="#攻击连击"></a> 攻击连击</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SerializeField</span>]</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> comboTime = <span class="number">0.3f</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> comboTimeWindow;     <span class="comment">// 连击计时器</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    comboTimeWindow -= Time.deltaTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackOver</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    isAttacking = <span class="literal">false</span>;</span><br><span class="line">    comboCounter = (comboCounter + <span class="number">1</span>) % <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查输入</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckInput</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Mouse0))</span><br><span class="line">    &#123;</span><br><span class="line">        StartAttack();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StartAttack</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (!isGrounded)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果连击计时器小于0，表示不在连击, 要写在前面</span></span><br><span class="line">    <span class="keyword">if</span> (comboTimeWindow &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        comboCounter = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    isAttacking = <span class="literal">true</span>;</span><br><span class="line">    comboTimeWindow = comboTime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="通过继承制作敌人"><a class="markdownIt-Anchor" href="#通过继承制作敌人"></a> 通过继承制作敌人</h1><p>分离Player中的通用内容，并新建一个类Entity以供怪物类继承<br />新增墙壁检测</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Entity</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">protected</span> Rigidbody2D rb;</span><br><span class="line">    <span class="keyword">protected</span> Animator anim;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;碰撞信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> groundCheckDistance;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> Transform groundCheck;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Space</span>]</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">float</span> wallCheckDistance;  <span class="comment">// 墙壁检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> Transform wallCheck;</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> LayerMask whatIsGround;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">int</span> facingDir = <span class="number">1</span>; <span class="comment">// 1表示面向右侧，-1表示面向左侧</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">bool</span> facingRight = <span class="literal">true</span>; <span class="comment">// 初始面向右侧</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">bool</span> isGrounded;</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">bool</span> isWallDetected;  <span class="comment">// 是否检测到墙壁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        anim = GetComponentInChildren&lt;Animator&gt;();</span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (wallCheck == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            wallCheck = transform;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        CollisionChecks();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">CollisionChecks</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 是否检测到地面</span></span><br><span class="line">        isGrounded = Physics2D.Raycast(groundCheck.position, Vector2.down, groundCheckDistance, whatIsGround);</span><br><span class="line">        <span class="comment">// 是否检测到墙壁</span></span><br><span class="line">        isWallDetected = Physics2D.Raycast(wallCheck.position, facingDir * Vector2.right, wallCheckDistance, whatIsGround);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角色翻转</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Flip</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        facingDir = <span class="number">-1</span> * facingDir;</span><br><span class="line">        facingRight = !facingRight;</span><br><span class="line">        <span class="comment">// 绕Y轴旋转180度</span></span><br><span class="line">        transform.Rotate(<span class="number">0</span>, <span class="number">180</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Gizmos.color = Color.red;</span><br><span class="line">        Gizmos.DrawLine(groundCheck.position, <span class="keyword">new</span> Vector3(groundCheck.position.x, groundCheck.position.y - groundCheckDistance));</span><br><span class="line">        <span class="comment">// 同理墙壁检测的一条线</span></span><br><span class="line">        Gizmos.DrawLine(wallCheck.position, <span class="keyword">new</span> Vector3(wallCheck.position.x + wallCheckDistance * facingDir, wallCheck.position.y));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>导入怪物资源，并进行如下设置<br /><img src="/2025/04/27/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/1.%E9%A1%B9%E7%9B%AE%E6%89%80%E9%9C%80%E7%9A%84%E7%9F%A5%E8%AF%86/file-20250508172806417.png" alt="" /></p><p>怪物类脚本Enemy_Skeleton.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy_Skeleton</span> : <span class="title">Entity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">bool</span> isAttacking;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;玩家检测&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> playerCheckDistance; <span class="comment">// 玩家检测距离</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> LayerMask whatIsPlayer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RaycastHit2D isPlayerDetected;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isPlayerDetected)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isPlayerDetected.distance &gt; <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 如果玩家在范围内，向玩家移动到1以内再攻击</span></span><br><span class="line">                rb.velocity = <span class="keyword">new</span> Vector2(moveSpeed * <span class="number">1.5f</span> * facingDir, rb.velocity.y);</span><br><span class="line">                Debug.Log(<span class="string">&quot;我看到玩家了！我会追上去的！&quot;</span>);</span><br><span class="line">                isAttacking = <span class="literal">false</span>;    <span class="comment">// 停止攻击</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                isAttacking = <span class="literal">true</span>;    <span class="comment">// 开始攻击</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isGrounded || isWallDetected)</span><br><span class="line">            Flip();</span><br><span class="line"></span><br><span class="line">        Movement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isAttacking)</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(moveSpeed * facingDir, rb.velocity.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">CollisionChecks</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.CollisionChecks();</span><br><span class="line"></span><br><span class="line">        isPlayerDetected = Physics2D.Raycast(transform.position, Vector2.right * facingDir, playerCheckDistance, whatIsPlayer);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnDrawGizmos</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.OnDrawGizmos();</span><br><span class="line">        <span class="comment">// 绘制玩家检测范围</span></span><br><span class="line">        Gizmos.color = Color.blue;</span><br><span class="line">        Gizmos.DrawLine(transform.position, <span class="keyword">new</span> Vector3(transform.position.x + playerCheckDistance * facingDir, transform.position.y));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Player</span> : <span class="title">Entity</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> xInput;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;移动信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> jumpForce;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;冲刺信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashDuration;     <span class="comment">// 冲刺持续时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashTime;         <span class="comment">// 冲刺计时器 &gt; 0 表示正在冲刺</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashSpeed;        <span class="comment">// 冲刺速度</span></span><br><span class="line"></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashCooldown;      <span class="comment">// 冲刺冷却时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> dashCooldownTimer;  <span class="comment">// 冲刺冷却计时器 &gt; 0 表示正在冷却</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    [<span class="meta">Header(<span class="string">&quot;攻击信息&quot;</span>)</span>]</span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> comboTime = <span class="number">0.3f</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isAttacking;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> comboCounter;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> comboTimeWindow;     <span class="comment">// 连击计时器</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.Update();</span><br><span class="line">        Movement();</span><br><span class="line">        CheckInput();</span><br><span class="line"></span><br><span class="line">        dashTime -= Time.deltaTime;</span><br><span class="line">        dashCooldownTimer -= Time.deltaTime;</span><br><span class="line">        comboTimeWindow -= Time.deltaTime;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        FlipController();</span><br><span class="line">        AnimatorController();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AttackOver</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isAttacking = <span class="literal">false</span>;</span><br><span class="line">        comboCounter = (comboCounter + <span class="number">1</span>) % <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 检查输入</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckInput</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        xInput = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Mouse0))</span><br><span class="line">        &#123;</span><br><span class="line">            StartAttack();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            Jump();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.LeftShift))</span><br><span class="line">        &#123;</span><br><span class="line">            DashAblity();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StartAttack</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isGrounded)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果连击计时器小于0，表示不在连击, 要写在前面</span></span><br><span class="line">        <span class="keyword">if</span> (comboTimeWindow &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            comboCounter = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        isAttacking = <span class="literal">true</span>;</span><br><span class="line">        comboTimeWindow = comboTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 冲刺技能</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DashAblity</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 如果冲刺计时器大于0，表示正在冲刺，不能再次冲刺</span></span><br><span class="line">        <span class="keyword">if</span> (dashCooldownTimer &lt; <span class="number">0</span> &amp;&amp; !isAttacking)</span><br><span class="line">        &#123;</span><br><span class="line">            dashCooldownTimer = dashCooldown;</span><br><span class="line">            dashTime = dashDuration;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 角色移动</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Movement</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isAttacking)</span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (dashTime &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(facingDir * dashSpeed, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(xInput * moveSpeed, rb.velocity.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 跳跃操作</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Jump</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 只有在地面的时候才能跳，只跳一次</span></span><br><span class="line">        <span class="keyword">if</span> (isGrounded)</span><br><span class="line">            rb.velocity = <span class="keyword">new</span> Vector2(rb.velocity.x, jumpForce);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 动画控制器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimatorController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置动画参数</span></span><br><span class="line">        <span class="built_in">bool</span> isMoving = rb.velocity.x != <span class="number">0</span>;</span><br><span class="line">        anim.SetFloat(<span class="string">&quot;yVelocity&quot;</span>, rb.velocity.y);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isMoving&quot;</span>, isMoving);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isGrounded&quot;</span>, isGrounded);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isDashing&quot;</span>, dashTime &gt; <span class="number">0</span>);</span><br><span class="line">        anim.SetBool(<span class="string">&quot;isAttacking&quot;</span>, isAttacking);</span><br><span class="line">        anim.SetInteger(<span class="string">&quot;comboCounter&quot;</span>, comboCounter);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 翻转控制器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FlipController</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (xInput &gt; <span class="number">0</span> &amp;&amp; !facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (xInput &lt; <span class="number">0</span> &amp;&amp; facingRight)</span><br><span class="line">            Flip();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAnimEvents</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Player player;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GetComponentInParent&lt;Player&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">AnimationTrigger</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 结束攻击</span></span><br><span class="line">        player.AttackOver();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;刚体相关&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#刚体相关&quot;&gt;&lt;/a&gt; 刚体相关&lt;/h1&gt;
&lt;a href=&quot;/2025/02/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity</summary>
      
    
    
    
    <category term="项目" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Unity制作RPG游戏" scheme="http://example.com/categories/%E9%A1%B9%E7%9B%AE/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/"/>
    
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Unity制作RPG游戏" scheme="http://example.com/tags/Unity%E5%88%B6%E4%BD%9CRPG%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>4.hexo常用Front-Matter</title>
    <link href="http://example.com/2025/04/09/hexo/4.hexo%E5%B8%B8%E7%94%A8Front-Matter/"/>
    <id>http://example.com/2025/04/09/hexo/4.hexo%E5%B8%B8%E7%94%A8Front-Matter/</id>
    <published>2025-04-09T02:14:58.000Z</published>
    <updated>2025-04-09T02:36:41.796Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本字段"><a class="markdownIt-Anchor" href="#基本字段"></a> <strong>基本字段</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>title</code></td><td>文章的标题。</td></tr><tr><td><code>date</code></td><td>文章的创建日期，格式为 <code>YYYY-MM-DD HH:mm:ss</code>。</td></tr><tr><td><code>updated</code></td><td>文章的更新日期，格式为 <code>YYYY-MM-DD HH:mm:ss</code>。</td></tr><tr><td><code>permalink</code></td><td>自定义文章的永久链接。</td></tr><tr><td><code>toc</code></td><td>是否生成目录，默认值为 <code>false</code>。</td></tr><tr><td><code>comments</code></td><td>是否启用评论，默认值为 <code>true</code>。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">我的文章</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-10-01 12:00:00</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2023-10-02 15:00:00</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">my-custom-url</span></span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-分类与标签"><a class="markdownIt-Anchor" href="#2-分类与标签"></a> <strong>2. 分类与标签</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>categories</code></td><td>文章的分类，可以是一个字符串或数组。</td></tr><tr><td><code>tags</code></td><td>文章的标签，可以是一个字符串或数组。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">技术</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">编程</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">博客</span></span><br></pre></td></tr></table></figure><h1 id="3-布局与页面类型"><a class="markdownIt-Anchor" href="#3-布局与页面类型"></a> <strong>3. 布局与页面类型</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>layout</code></td><td>文章的布局类型，默认为 <code>post</code>。</td></tr><tr><td><code>type</code></td><td>页面的类型，例如 <code>page</code>、<code>draft</code> 等。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: post</span><br><span class="line">type: page</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="4-草稿与发布"><a class="markdownIt-Anchor" href="#4-草稿与发布"></a> <strong>4. 草稿与发布</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>published</code></td><td>是否发布文章，默认值为 <code>true</code>，设置为 <code>false</code> 时文章不会被发布。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">published:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><h1 id="5-封面与摘要"><a class="markdownIt-Anchor" href="#5-封面与摘要"></a> <strong>5. 封面与摘要</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>cover</code></td><td>文章的封面图片 URL。</td></tr><tr><td><code>excerpt</code></td><td>文章的摘要内容。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">cover:</span> <span class="string">/images/my-cover.jpg</span></span><br><span class="line"><span class="attr">excerpt:</span> <span class="string">这是文章的摘要内容。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="6-其他字段"><a class="markdownIt-Anchor" href="#6-其他字段"></a> <strong>6. 其他字段</strong></h1><table><thead><tr><th>字段名</th><th>说明</th></tr></thead><tbody><tr><td><code>sticky</code></td><td>是否置顶文章，值越大优先级越高。</td></tr><tr><td><code>password</code></td><td>设置文章访问密码。</td></tr><tr><td><code>mathjax</code></td><td>是否启用 MathJax 渲染数学公式，默认值为 <code>false</code>。</td></tr></tbody></table><p><strong>示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sticky:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mypassword</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="完整的-front-matter-示例"><a class="markdownIt-Anchor" href="#完整的-front-matter-示例"></a> <strong>完整的 Front Matter 示例</strong></h1><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">title:</span> <span class="string">我的文章</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2023-10-01 12:00:00</span></span><br><span class="line"><span class="attr">updated:</span> <span class="number">2023-10-02 15:00:00</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">my-custom-url</span>  </span><br><span class="line"><span class="attr">toc:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">comments:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">技术</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">编程</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">Hexo</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">博客</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">page</span></span><br><span class="line"><span class="attr">published:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">cover:</span> <span class="string">/images/my-cover.jpg</span>  <span class="comment"># / 根目录source</span></span><br><span class="line"><span class="attr">excerpt:</span> <span class="string">这是文章的摘要内容。</span></span><br><span class="line"><span class="attr">sticky:</span> <span class="number">100</span>            <span class="comment"># 是否置顶文章，值越大优先级越高。 </span></span><br><span class="line"><span class="attr">password:</span> <span class="string">mypassword</span>   <span class="comment"># 设置文章访问密码。</span></span><br><span class="line"><span class="attr">mathjax:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">张三</span></span><br><span class="line"><span class="attr">rating:</span> <span class="number">5</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;基本字段&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#基本字段&quot;&gt;&lt;/a&gt; &lt;strong&gt;基本字段&lt;/strong&gt;&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;字段名&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
</summary>
      
    
    
    
    <category term="hexo" scheme="http://example.com/categories/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E9%A2%91%E9%A2%98%20%E4%B8%8B/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E9%A2%91%E9%A2%98%20%E4%B8%8B/</id>
    <published>2025-04-09T00:36:41.843Z</published>
    <updated>2025-04-09T01:08:23.664Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    <category term="数据结构" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E9%A2%91%E9%A2%98%20%E4%B8%8A/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%BA%8C%E5%8F%89%E6%A0%91%E9%AB%98%E9%A2%91%E9%A2%98%20%E4%B8%8A/</id>
    <published>2025-04-09T00:36:41.840Z</published>
    <updated>2025-04-09T01:08:23.660Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    <category term="数据结构" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/%E5%BF%AB%E6%8E%92/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/%E5%BF%AB%E6%8E%92/</id>
    <published>2025-04-09T00:36:41.836Z</published>
    <updated>2025-04-09T01:08:48.363Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    <category term="排序" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/%E5%BD%92%E5%B9%B6%E4%B8%8E%E5%BD%92%E5%B9%B6%E5%88%86%E6%B2%BB/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/%E5%BD%92%E5%B9%B6%E4%B8%8E%E5%BD%92%E5%B9%B6%E5%88%86%E6%B2%BB/</id>
    <published>2025-04-09T00:36:41.834Z</published>
    <updated>2025-04-09T01:08:48.362Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    <category term="排序" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%8E%92%E5%BA%8F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E9%93%BE%E8%A1%A8%E9%AB%98%E9%A2%91%E9%A2%98/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E9%93%BE%E8%A1%A8%E9%AB%98%E9%A2%91%E9%A2%98/</id>
    <published>2025-04-09T00:36:41.826Z</published>
    <updated>2025-04-09T01:08:58.747Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E9%80%92%E5%BD%92%E5%92%8Cmaster%E5%85%AC%E5%BC%8F/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E9%80%92%E5%BD%92%E5%92%8Cmaster%E5%85%AC%E5%BC%8F/</id>
    <published>2025-04-09T00:36:41.824Z</published>
    <updated>2025-04-09T01:08:58.746Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%AB%98%E9%A2%91%E9%A2%98/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E9%AB%98%E9%A2%91%E9%A2%98/</id>
    <published>2025-04-09T00:36:41.822Z</published>
    <updated>2025-04-09T01:08:58.746Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E5%BC%82%E6%88%96%E8%BF%90%E7%AE%97%E7%9A%84%E9%AA%9A%E6%93%8D%E4%BD%9C/</id>
    <published>2025-04-09T00:36:41.820Z</published>
    <updated>2025-04-09T01:08:58.746Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E5%B8%B8%E8%A7%81%E9%80%92%E5%BD%92%E8%BF%87%E7%A8%8B/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E5%B8%B8%E8%A7%81%E9%80%92%E5%BD%92%E8%BF%87%E7%A8%8B/</id>
    <published>2025-04-09T00:36:41.817Z</published>
    <updated>2025-04-09T01:08:58.745Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E4%BD%8D%E8%BF%90%E7%AE%97%E9%AA%9A%E6%93%8D%E4%BD%9C/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E4%BD%8D%E8%BF%90%E7%AE%97%E9%AA%9A%E6%93%8D%E4%BD%9C/</id>
    <published>2025-04-09T00:36:41.815Z</published>
    <updated>2025-04-09T01:08:58.745Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E4%BD%8D%E5%9B%BE/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/%E4%BD%8D%E5%9B%BE/</id>
    <published>2025-04-09T00:36:41.812Z</published>
    <updated>2025-04-09T01:08:58.742Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="左神" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/%E5%B7%A6%E7%A5%9E/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6/111%E6%95%B0%E5%AD%A6List/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6/111%E6%95%B0%E5%AD%A6List/</id>
    <published>2025-04-09T00:36:41.688Z</published>
    <updated>2025-04-09T01:05:48.395Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Acwing" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/"/>
    
    <category term="基础" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="数学" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E6%95%B0%E5%AD%A6/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/111%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92List/"/>
    <id>http://example.com/2025/04/09/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/111%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92List/</id>
    <published>2025-04-09T00:36:41.525Z</published>
    <updated>2025-04-09T01:07:16.859Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="算法" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Acwing" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/"/>
    
    <category term="基础" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/"/>
    
    <category term="动态规划" scheme="http://example.com/categories/%E7%AE%97%E6%B3%95/Acwing/%E5%9F%BA%E7%A1%80/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
    
  </entry>
  
  <entry>
    <title>7.注册面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T11:50:34.000Z</published>
    <updated>2025-04-07T06:32:25.206Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/file-20250406200658788.png" alt="" /></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF%E6%B5%8B%E8%AF%95%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>登录面板和注册面板之间的交互</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnRe;    <span class="comment">// 注册按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnSure;  <span class="comment">// 确定登录按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;      <span class="comment">// 输入的账号</span></span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;     <span class="comment">// 输入的密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记住密码和自动登录</span></span><br><span class="line">    <span class="keyword">public</span> Toggle togPw;</span><br><span class="line">    <span class="keyword">public</span> Toggle togAuto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnRe.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 显示注册面板，隐藏自己</span></span><br><span class="line">            UIManager.Instance.ShowPanel&lt;RegisterPanel&gt;();</span><br><span class="line">            UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 验证用户名</span></span><br><span class="line">            <span class="comment">// 判断用户密码是否合理</span></span><br><span class="line">            <span class="keyword">if</span> (inputPwd.text.Length &lt;= <span class="number">6</span> || inputUN.text.Length &lt;= <span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;用户名和mima不合法&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过LoginMgr来向持久化数据验证</span></span><br><span class="line">            <span class="keyword">if</span> (LoginMgr.Instance.CheckUser(inputUN.text, inputPwd.text))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 记录数据</span></span><br><span class="line">                LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">                loginData.autoLogin = togAuto.isOn;</span><br><span class="line">                loginData.rememberPw = togPw.isOn;</span><br><span class="line">                loginData.userName = inputUN.text;</span><br><span class="line">                loginData.passWord = inputPwd.text;</span><br><span class="line">                LoginMgr.Instance.SaveLoginData();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 根据服务器信息来判断显示哪个面板， 如果之前选过某服务器就自动选那个</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 登陆成功后隐藏自己</span></span><br><span class="line">                UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                UIManager.Instance.ShowPanel&lt;TipPanel&gt;().ChangeTextTip(<span class="string">&quot;账号密码错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togPw.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果没有选记住密码，就把自动登录取消</span></span><br><span class="line">            <span class="keyword">if</span> (!isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togAuto.isOn = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togAuto.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击自动登录，如果记住密码没被选中，就要将记住密码给选中</span></span><br><span class="line">            <span class="keyword">if</span> (isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togPw.isOn = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示面板前，根据上次数据更新面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.ShowMe();</span><br><span class="line">        <span class="comment">// 得到数据</span></span><br><span class="line">        LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">        togPw.isOn = loginData.rememberPw;</span><br><span class="line">        togAuto.isOn = loginData.autoLogin;</span><br><span class="line"></span><br><span class="line">        inputUN.text = loginData.userName;</span><br><span class="line">        <span class="comment">// 密码看上一次是否勾选了记住密码</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.rememberPw)</span><br><span class="line">            inputPwd.text = loginData.passWord;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果上次勾选了自动登录</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.autoLogin)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 自动验证账号密码相关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给外部设置用户名和密码的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetInfo</span>(<span class="params"><span class="built_in">string</span> username, <span class="built_in">string</span> password</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        inputUN.text = username;</span><br><span class="line">        inputPwd.text = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注册的账号密码数据</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RegisterData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; registerInfo = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RegisterPanel</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RegisterPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnSure;</span><br><span class="line">    <span class="keyword">public</span> Button btnCancel;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;</span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnCancel.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 隐藏自己，显示登录面板</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;RegisterPanel&gt;();</span><br><span class="line">            UIManager.Instance.ShowPanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 判断用户密码是否合理</span></span><br><span class="line">            <span class="keyword">if</span> (inputPwd.text.Length &lt;= <span class="number">6</span> || inputUN.text.Length &lt;= <span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;用户名和mima不合法&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果合法，用LoginMgr去和数据做持久化</span></span><br><span class="line">            <span class="built_in">bool</span> isRegisterOK = LoginMgr.Instance.RegisterUser(inputUN.text, inputPwd.text);</span><br><span class="line">            <span class="keyword">if</span> (isRegisterOK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 隐藏自己，显示登录面板，还要更新登录面板内容</span></span><br><span class="line">                UIManager.Instance.HidePanel&lt;RegisterPanel&gt;();</span><br><span class="line">                LoginPanel loginPanel = UIManager.Instance.ShowPanel&lt;LoginPanel&gt;();</span><br><span class="line">                loginPanel.SetInfo(inputUN.text, inputPwd.text);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 提示别人用户名已存在</span></span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;该用户已经注册过了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>6.登录面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T10:20:17.000Z</published>
    <updated>2025-04-06T11:49:01.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194600403.png" alt="" /></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194755704.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 登录界面需要记住的玩家操作</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> userName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> passWord;</span><br><span class="line">    <span class="comment">// 是否记住密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> rememberPw;</span><br><span class="line">    <span class="comment">// 是否自动登录</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> autoLogin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194740362.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LoginMgr instance = <span class="keyword">new</span> LoginMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LoginMgr Instance =&gt; instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LoginMgr</span>()</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 加载持久化数据，第一次没有就是其默认</span></span><br><span class="line">        loginData = JsonMgr.Instance.LoadData&lt;LoginData&gt;(<span class="string">&quot;LoginData&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LoginData loginData;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoginData LoginData =&gt; loginData;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveLoginData</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        JsonMgr.Instance.SaveData(loginData, <span class="string">&quot;LoginData&quot;</span>, JsonType.LitJson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194640226.png" alt="" /></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/%E8%AE%B0%E4%BD%8F%E5%AF%86%E7%A0%81%E5%92%8C%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E6%B5%8B%E8%AF%95%E5%8A%A8%E7%94%BB.gif" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnRe;    <span class="comment">// 注册按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnSure;  <span class="comment">// 确定登录按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;      <span class="comment">// 输入的账号</span></span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;     <span class="comment">// 输入的密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记住密码和自动登录</span></span><br><span class="line">    <span class="keyword">public</span> Toggle togPw;</span><br><span class="line">    <span class="keyword">public</span> Toggle togAuto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnRe.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 显示注册面板，隐藏自己</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 验证用户名</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togPw.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果没有选记住密码，就把自动登录取消</span></span><br><span class="line">            <span class="keyword">if</span> (!isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togAuto.isOn = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togAuto.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击自动登录，如果记住密码没被选中，就要将记住密码给选中</span></span><br><span class="line">            <span class="keyword">if</span> (isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togPw.isOn = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示面板前，根据数据更新面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.ShowMe();</span><br><span class="line">        <span class="comment">// 得到数据</span></span><br><span class="line">        LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">        togPw.isOn = loginData.rememberPw;</span><br><span class="line">        togAuto.isOn = loginData.autoLogin;</span><br><span class="line"></span><br><span class="line">        inputUN.text = loginData.userName;</span><br><span class="line">        <span class="comment">// 密码看上一次是否勾选了记住密码</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.rememberPw)</span><br><span class="line">            inputPwd.text = loginData.passWord;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果上次勾选了自动登录</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.autoLogin)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 自动验证账号密码相关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>5.提示面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T09:05:32.000Z</published>
    <updated>2025-04-06T11:49:36.374Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/file-20250406172656558.png" alt="" /></p><p>注意这里的Resources/UI文件夹，还有TipPanel预设体名字和TipPanel脚本的名字要一样</p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/TipPanel%E6%B5%8B%E8%AF%95%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/file-20250406194934348.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TipPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnSure;</span><br><span class="line">    <span class="comment">// 提示文字</span></span><br><span class="line">    <span class="keyword">public</span> Text txtTip;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 统一通过UI管理器</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;TipPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更改提示内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeTextTip</span>(<span class="params"><span class="built_in">string</span> tip</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        txtTip.text = tip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试脚本Main</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Main</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">        tipPanel.ChangeTextTip(<span class="string">&quot;这是一个测试&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
</feed>
