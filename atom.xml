<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-03-29T14:59:25.068Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>11.Button按钮控件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-03-29T13:41:57.000Z</published>
    <updated>2025-03-29T14:59:25.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Button是什么"><a href="#Button是什么" class="headerlink" title="Button是什么"></a>Button是什么</h1><p>Button是按钮组件，是UGUI中用于处理玩家按钮相关交互的关键组件。</p><p>默认创建的Button由2个对象组成：<br>父对象——Button组件依附对象，同时挂载了一个Image组件，作为按钮背景图。<br>子对象——按钮文本（可选）。</p><h1 id="Button-按钮参数"><a href="#Button-按钮参数" class="headerlink" title="Button 按钮参数"></a>Button 按钮参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/Button%20按钮参数.png" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329214724324.png" alt=""></p><h2 id="Interactable：是否接受输入"><a href="#Interactable：是否接受输入" class="headerlink" title="Interactable：是否接受输入"></a>Interactable：是否接受输入</h2><p>按钮是否能被我们点击和响应</p><h2 id="Transition：响应用户输入的过渡效果"><a href="#Transition：响应用户输入的过渡效果" class="headerlink" title="Transition：响应用户输入的过渡效果"></a>Transition：响应用户输入的过渡效果</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221039265.png" alt=""></p><h3 id="None-：没有状态变化效果"><a href="#None-：没有状态变化效果" class="headerlink" title="None*：没有状态变化效果"></a>None*：没有状态变化效果</h3><h3 id="ColorTint：用颜色表示不同状态的变化"><a href="#ColorTint：用颜色表示不同状态的变化" class="headerlink" title="ColorTint：用颜色表示不同状态的变化"></a>ColorTint：用颜色表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221103875.png" alt=""><br>TargetGraphic：控制的目标图形<br>Normal Color：正常状态颜色<br>Highlighted Color：鼠标进入时显示高亮颜色<br>Pressed Color：按下颜色<br>Selected Color：选中的颜色<br>Disabled Color：禁用时的颜色 （就是上面 Interactable为false时的颜色）<br>Color Multiplier：颜色倍增器，过渡颜色乘以该值<br>FadeDuration：衰减持续时间，从一个状态进入另一个状态时需要的时间</p><h3 id="Sprite-Swap：用图片表示不同状态的变化"><a href="#Sprite-Swap：用图片表示不同状态的变化" class="headerlink" title="Sprite Swap：用图片表示不同状态的变化"></a>Sprite Swap：用图片表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221109387.png" alt=""><br>Highlighted Sprite：鼠标进入时图片<br>Pressed Sprite：按下时图片<br>Selected Color：选中时的颜色<br>Disabled Sprite：禁用时显示的图片</p><h3 id="Animation：用动画表示不同状态的变化"><a href="#Animation：用动画表示不同状态的变化" class="headerlink" title="Animation：用动画表示不同状态的变化"></a>Animation：用动画表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221114093.png" alt=""><br>Normal Trigger：正常动画触发器<br>Highlighted Trigger：鼠标进入状态时触发器<br>Pressed Trigger：按下时触发器<br>Selected Trigger：选中时触发器<br>Disabled Trigger：禁用时触发器</p><p>可以自动生成动画状态控制器<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329220133453.png" alt=""></p><h2 id="Navigation：导航模式"><a href="#Navigation：导航模式" class="headerlink" title="Navigation：导航模式"></a>Navigation：导航模式</h2><a href="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/#Send-Navigation-Events%EF%BC%9A%E6%98%AF%E5%90%A6%E5%85%81%E8%AE%B8%E5%AF%BC%E8%88%AA%E4%BA%8B%E4%BB%B6" title="6.EventSystem和StandaloneInputModule组件">EventSystem</a><p>可以设置UI元素如何在播放模式中控制导航<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/导航模式动画.gif" alt=""><br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221133396.png" alt=""><br>None：无键盘导航<br>Horizontal：水平导航<br>Verticval：垂直导航<br>Automatic：自动导航<br>Explicit：指定周边控件进行导航</p><h3 id="可以在场景窗口看到导航连线"><a href="#可以在场景窗口看到导航连线" class="headerlink" title="可以在场景窗口看到导航连线"></a>可以在场景窗口看到导航连线</h3><h2 id="OnClick：单击（按下再抬起）执行的函数列表"><a href="#OnClick：单击（按下再抬起）执行的函数列表" class="headerlink" title="OnClick：单击（按下再抬起）执行的函数列表"></a>OnClick：单击（按下再抬起）执行的函数列表</h2><h1 id="代码相关"><a href="#代码相关" class="headerlink" title="代码相关"></a>代码相关</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Button button = <span class="keyword">this</span>.GetComponent&lt;Button&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可交互</span></span><br><span class="line">button.interactable = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置过渡效果</span></span><br><span class="line">button.transition = Selectable.Transition.None;</span><br><span class="line"></span><br><span class="line">Image image = <span class="keyword">this</span>.GetComponent&lt;Image&gt;();</span><br></pre></td></tr></table></figure><h1 id="监听点击事件的两种方式"><a href="#监听点击事件的两种方式" class="headerlink" title="监听点击事件的两种方式"></a>监听点击事件的两种方式</h1><p>一、拖脚本<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221841271.png" alt=""></p><p>二、代码添加<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Button button = GetComponent&lt;Button&gt;(); </span><br><span class="line">button.onClick.AddListener(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;按钮被点击了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 移除指定的监听</span></span><br><span class="line">button.onClick.RemoveListener(MyOnclick);</span><br><span class="line"><span class="comment">// 移除所有的监听</span></span><br><span class="line">button.onClick.RemoveAllListeners();</span><br></pre></td></tr></table></figure></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>场景上有一个对象，点击UGUI的发射按钮，可以让对象发射一颗子弹</p><p>先设置<a href="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/#eg" title="3.Canvas画布组件">相机和Canvas</a><br>创建玩家，子弹预设体，拼好面板<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329225601579.png" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329225718790.png" alt=""></p><p>各自关联的脚本<br>PlayerObj.cs<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Fire();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Bullet.cs<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bullet</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> speed = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Destroy(<span class="keyword">this</span>.gameObject, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.transform.Translate(Vector3.forward * speed * Time.deltaTime); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>GamePanel.cs<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnAtk;</span><br><span class="line">    <span class="keyword">public</span> PlayerObj player;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnAtk.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            player.Fire();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Button是什么&quot;&gt;&lt;a href=&quot;#Button是什么&quot; class=&quot;headerlink&quot; title=&quot;Button是什么&quot;&gt;&lt;/a&gt;Button是什么&lt;/h1&gt;&lt;p&gt;Button是按钮组件，是UGUI中用于处理玩家按钮相关交互的关键组件。&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>10.RawImage原始图像</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/</id>
    <published>2025-03-29T13:36:23.000Z</published>
    <updated>2025-03-29T13:41:29.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RawImage是什么"><a href="#RawImage是什么" class="headerlink" title="RawImage是什么"></a>RawImage是什么</h1><p>RawImage是原始图像组件，是UGUI中用于显示任何纹理图片的关键组件。<br>它和Image的区别是 一般RawImage用于显示大图(<strong>背景图，不需要打入图集的图片，网络下载的图</strong>等等)</p><h1 id="RawImage原始图像组件参数"><a href="#RawImage原始图像组件参数" class="headerlink" title="RawImage原始图像组件参数"></a>RawImage原始图像组件参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/file-20250329213836093.png" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/file-20250329213853286.png" alt=""></p><p>注意这里的纹理可以填任何类型的图<br>无关Sprite UI什么的</p><p>UV Rect UV矩形<br>图像在UI矩形内的偏移和大小<br>一般不会改变</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RawImage rawImage = <span class="keyword">this</span>.GetComponent&lt;RawImage&gt;();</span><br><span class="line"></span><br><span class="line">rawImage.texture = Resources.Load&lt;Texture&gt;(<span class="string">&quot;ui_TY_lvseshuzi_08&quot;</span>);</span><br><span class="line"></span><br><span class="line">rawImage.uvRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RawImage是什么&quot;&gt;&lt;a href=&quot;#RawImage是什么&quot; class=&quot;headerlink&quot; title=&quot;RawImage是什么&quot;&gt;&lt;/a&gt;RawImage是什么&lt;/h1&gt;&lt;p&gt;RawImage是原始图像组件，是UGUI中用于显示任何纹理图片的关</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>9.Text文本控件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-03-29T13:14:38.000Z</published>
    <updated>2025-03-29T13:35:59.229Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Text是什么"><a href="#Text是什么" class="headerlink" title="Text是什么"></a>Text是什么</h1><p>Text是文本组件，是UGUI中用于显示文本的关键组件。</p><h1 id="Text文本组件参数"><a href="#Text文本组件参数" class="headerlink" title="Text文本组件参数"></a>Text文本组件参数</h1><p><strong>注意：Text很有可能挡住射线，可以把射线检测取消勾选</strong><br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/Text参数.png" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329212127366.png" alt=""></p><h2 id="Text：文本显示内容"><a href="#Text：文本显示内容" class="headerlink" title="Text：文本显示内容"></a>Text：文本显示内容</h2><h2 id="Font：字体"><a href="#Font：字体" class="headerlink" title="Font：字体"></a>Font：字体</h2><h2 id="FontStyle：字体样式"><a href="#FontStyle：字体样式" class="headerlink" title="FontStyle：字体样式"></a>FontStyle：字体样式</h2><p>Normal：普通<br>Bold：加粗<br>Italic：斜体<br>Bold And Italic：加粗 + 斜体</p><h2 id="Font-Size：字体大小"><a href="#Font-Size：字体大小" class="headerlink" title="Font Size：字体大小"></a>Font Size：字体大小</h2><h2 id="Line-Spacing：行之间的垂直间距"><a href="#Line-Spacing：行之间的垂直间距" class="headerlink" title="Line Spacing：行之间的垂直间距"></a>Line Spacing：行之间的垂直间距</h2><h2 id="Rich-Text：是否开启富文本"><a href="#Rich-Text：是否开启富文本" class="headerlink" title="Rich Text：是否开启富文本"></a>Rich Text：是否开启富文本</h2><p>要开启富文本选项才能起作用。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">加粗: &lt;b&gt;文本内容&lt;/b&gt;</span><br><span class="line">斜体: &lt;i&gt;文本内容&lt;/i&gt;</span><br><span class="line">大小: &lt;size=50&gt;文本内容&lt;/size&gt;</span><br><span class="line">颜色:</span><br><span class="line">&lt;color=#ff0000ff&gt;文本内容&lt;/color&gt;</span><br><span class="line">&lt;color=red&gt;文本内容&lt;/color&gt;</span><br></pre></td></tr></table></figure><h2 id="Alignment：对其方式"><a href="#Alignment：对其方式" class="headerlink" title="Alignment：对其方式"></a>Alignment：对其方式</h2><h2 id="Align-By-Geometry-：几何对齐"><a href="#Align-By-Geometry-：几何对齐" class="headerlink" title="Align By Geometry*：几何对齐"></a>Align By Geometry*：几何对齐</h2><p>使用字形集合形状范围进行水平对其，而不是字形指标</p><h2 id="Horizontal-Overflow：水平溢出"><a href="#Horizontal-Overflow：水平溢出" class="headerlink" title="Horizontal Overflow：水平溢出"></a>Horizontal Overflow：水平溢出</h2><p>处理文本太宽无法放入矩形范围内时的处理方式</p><p>Wrap：包裹模式-字体始终在矩形范围内，会自动换行<br>Overflow：溢出模式-字体可以溢出矩形框</p><h2 id="Vertical-Overflow：垂直溢出"><a href="#Vertical-Overflow：垂直溢出" class="headerlink" title="Vertical Overflow：垂直溢出"></a>Vertical Overflow：垂直溢出</h2><p>处理文本太高无法放入矩形范围内时的处理方式</p><p>Truncate：截断模式-字体始终在矩形范围内，超出部分裁剪<br>Overflow：溢出模式-字体可以溢出矩形框</p><h2 id="Best-Fit：最佳适应"><a href="#Best-Fit：最佳适应" class="headerlink" title="Best Fit：最佳适应"></a>Best Fit：最佳适应</h2><p>忽略字体大小，始终把内容完全显示在矩形框中，会自动调整字体大小</p><p>MinSize：最小多小<br>MaxSize：最大多大</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/最佳适应动画.gif" alt=""></p><h1 id="边缘线和阴影"><a href="#边缘线和阴影" class="headerlink" title="边缘线和阴影"></a>边缘线和阴影</h1><h2 id="Outline边缘线组件"><a href="#Outline边缘线组件" class="headerlink" title="Outline边缘线组件"></a>Outline边缘线组件</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329213441851.png" alt=""></p><h2 id="Shadow阴影组件"><a href="#Shadow阴影组件" class="headerlink" title="Shadow阴影组件"></a>Shadow阴影组件</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329213448324.png" alt=""></p><h1 id="代码控制"><a href="#代码控制" class="headerlink" title="代码控制"></a>代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Text text = <span class="keyword">this</span>.GetComponent&lt;Text&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置文本显示内容</span></span><br><span class="line">text.text = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Text是什么&quot;&gt;&lt;a href=&quot;#Text是什么&quot; class=&quot;headerlink&quot; title=&quot;Text是什么&quot;&gt;&lt;/a&gt;Text是什么&lt;/h1&gt;&lt;p&gt;Text是文本组件，是UGUI中用于显示文本的关键组件。&lt;/p&gt;
&lt;h1 id=&quot;Text文本组件参</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>8.Image图片</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/</id>
    <published>2025-03-29T07:51:56.000Z</published>
    <updated>2025-03-29T13:12:34.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Image图片控件是什么"><a href="#Image图片控件是什么" class="headerlink" title="Image图片控件是什么"></a>Image图片控件是什么</h1><p>Image是图像组件，是UGUI中用于显示精灵图片的关键组件。<br>除了背景图等大图，一般都使用Image来显示UI中的图片元素。</p><h1 id="Image参数"><a href="#Image参数" class="headerlink" title="Image参数"></a>Image参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/Image%20图片参数.png" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329201941776.png" alt=""></p><h2 id="Source-Image：图片来源（图片类型必须是”精灵“类型）"><a href="#Source-Image：图片来源（图片类型必须是”精灵“类型）" class="headerlink" title="Source Image：图片来源（图片类型必须是”精灵“类型）"></a>Source Image：图片来源（图片类型必须是”精灵“类型）</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329201414831.png" alt=""></p><h2 id="Color：图像的颜色"><a href="#Color：图像的颜色" class="headerlink" title="Color：图像的颜色"></a>Color：图像的颜色</h2><h2 id="Material：图像的材质（一般不修改，会使用UI的默认材质）"><a href="#Material：图像的材质（一般不修改，会使用UI的默认材质）" class="headerlink" title="Material：图像的材质（一般不修改，会使用UI的默认材质）"></a>Material：图像的材质（一般不修改，会使用UI的默认材质）</h2><h2 id="Raycast-Target：是否作为射线检测的目标"><a href="#Raycast-Target：是否作为射线检测的目标" class="headerlink" title="Raycast Target：是否作为射线检测的目标"></a>Raycast Target：是否作为射线检测的目标</h2><p>如果不勾选将不会响应射线检测</p><p>这里嘴一句：UGUI可以通过更改Canvas下面的顺序来调整渲染顺序的</p><h2 id="Maskable：是否能被遮罩"><a href="#Maskable：是否能被遮罩" class="headerlink" title="Maskable：是否能被遮罩"></a>Maskable：是否能被遮罩</h2><p>之后结合遮罩相关知识点进行讲解</p><h2 id="Image-Type：图片类型"><a href="#Image-Type：图片类型" class="headerlink" title="Image Type：图片类型"></a>Image Type：图片类型</h2><h3 id="Simple-普通模式，均匀缩放整个图片"><a href="#Simple-普通模式，均匀缩放整个图片" class="headerlink" title="Simple-普通模式，均匀缩放整个图片"></a>Simple-普通模式，均匀缩放整个图片</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/简单图像类型动画.gif" alt=""></p><h3 id="Sliced-切片模式，9宫格拉伸，只拉伸中央十字区域"><a href="#Sliced-切片模式，9宫格拉伸，只拉伸中央十字区域" class="headerlink" title="Sliced-切片模式，9宫格拉伸，只拉伸中央十字区域"></a>Sliced-切片模式，9宫格拉伸，只拉伸中央十字区域</h3><p>记得要导入2d的sprite包<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/test动画.gif" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/编辑图片九宫格动画.gif" alt=""><br>Pixels Per UnitMultiplier：每单位像素乘数（越大越细节）<br>Fill Center：中心填充<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329205526591.png" alt=""></p><h3 id="Tiled-平铺模式"><a href="#Tiled-平铺模式" class="headerlink" title="Tiled-平铺模式"></a>Tiled-平铺模式</h3><p>重复平铺，九宫格中央部分<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329205806646.png" alt=""></p><h3 id="Filled-填充模式"><a href="#Filled-填充模式" class="headerlink" title="Filled-填充模式"></a>Filled-填充模式</h3><p>Fill Method：填充方式<br>Fill Origin：填充原点<br>Fill Amount：填充量<br>Clockwise：顺时针方向<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/填充模式动画.gif" alt=""></p><h2 id="Use-Sprite-Mesh-：使用精灵网格，勾选的话Unity会帮我们生成图片网格"><a href="#Use-Sprite-Mesh-：使用精灵网格，勾选的话Unity会帮我们生成图片网格" class="headerlink" title="Use Sprite Mesh*：使用精灵网格，勾选的话Unity会帮我们生成图片网格"></a>Use Sprite Mesh*：使用精灵网格，勾选的话Unity会帮我们生成图片网格</h2><h2 id="Preserve-Aspect-：确保图像保持其现有尺寸"><a href="#Preserve-Aspect-：确保图像保持其现有尺寸" class="headerlink" title="Preserve Aspect*：确保图像保持其现有尺寸"></a>Preserve Aspect*：确保图像保持其现有尺寸</h2><h2 id="Set-Native-Size：设置为图片资源的原始大小"><a href="#Set-Native-Size：设置为图片资源的原始大小" class="headerlink" title="Set Native Size：设置为图片资源的原始大小"></a>Set Native Size：设置为图片资源的原始大小</h2><p>会根据你<a href="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/" title="4.CanvasScaler画布缩放控制组件">Canvas Scaler</a>里面的恒定像素模式或者恒定物理模式计算</p><h1 id="代码控制"><a href="#代码控制" class="headerlink" title="代码控制"></a>代码控制</h1><p>需 <code>using UnityEngine.UI;</code><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Image image = <span class="keyword">this</span>.GetComponent&lt;Image&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从资源文件夹中加载名为 &quot;ui_TY_fanhui_01&quot; 的 Sprite，并将其设置为 Image 的显示图像</span></span><br><span class="line">image.sprite = Resources.Load&lt;Sprite&gt;(<span class="string">&quot;ui_TY_fanhui_01&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// (transform as RectTransform).sizeDelta 设置为 Image 的宽高， 修改其尺寸为宽度 200、高度 200 的 Vector2 </span></span><br><span class="line">(transform <span class="keyword">as</span> RectTransform).sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用该 Image 组件的射线检测，使其不响应用户的点击事件</span></span><br><span class="line">image.raycastTarget = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将该 Image 组件的颜色设置为红色</span></span><br><span class="line">image.color = Color.red;</span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Image图片控件是什么&quot;&gt;&lt;a href=&quot;#Image图片控件是什么&quot; class=&quot;headerlink&quot; title=&quot;Image图片控件是什么&quot;&gt;&lt;/a&gt;Image图片控件是什么&lt;/h1&gt;&lt;p&gt;Image是图像组件，是UGUI中用于显示精灵图片的关键组件</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>7.RectTransform矩形变换组件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-29T04:47:47.000Z</published>
    <updated>2025-03-29T07:29:54.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RectTransform组件用来干啥"><a href="#RectTransform组件用来干啥" class="headerlink" title="RectTransform组件用来干啥"></a>RectTransform组件用来干啥</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329124750057.png" alt=""></p><h1 id="RectTransform参数"><a href="#RectTransform参数" class="headerlink" title="RectTransform参数"></a>RectTransform参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329125300810.png" alt=""></p><h2 id="Pivot-轴心点"><a href="#Pivot-轴心点" class="headerlink" title="Pivot 轴心点"></a>Pivot 轴心点</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329125613385.png" alt=""><br>轴心点是旋转的中心点<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/Pivot动画.gif" alt=""><br>轴心点会和锚点一起用于位置的计算<br>轴心点会影响当宽高扩大缩小时是已轴的哪个方向进行伸缩的</p><h2 id="Anchors-相对父矩形锚点"><a href="#Anchors-相对父矩形锚点" class="headerlink" title="Anchors 相对父矩形锚点"></a>Anchors 相对父矩形锚点</h2><p><strong>锚点为点</strong><br>当锚点是一个点的时候<br><strong>轴心到锚点的距离（位置X 和 位置Y）都不变</strong><br><strong>UI 元素的大小不会随父对象的尺寸改变而改变。</strong><br>一般用来设置<br>固定位置的 UI 元素：例如游戏中的固定提示框、固定按钮等。无论父对象的大小如何变化，这些元素都会保持在相对父对象的固定位置。<br>不依赖布局变化的元素：一些独立的 UI 元素，如单独的图标、小窗口等，它们的大小和位置不需要根据父对象的布局进行调整。<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/单个点动画.gif" alt=""></p><p><strong>锚点为矩形</strong><br>参考NGUI中的 <a href="/2025/03/12/UI%E7%B3%BB%E7%BB%9F/NGUI/NGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/17.Anchor%E9%94%9A%E7%82%B9/#%E6%96%B0%E7%89%88%E6%9C%AC%E9%94%9A%E7%82%B9%E7%BB%84%E4%BB%B6" title="17.Anchor锚点">锚点组件</a><br>注意观察图片周围生成的白色虚线和矩形锚点各个边<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/矩形边缘对齐动画.gif" alt=""></p><p>会对图片进行拉升变形，<br>注意红框位置的竖直都没有变，即图片的各个边到锚点矩形各边的位置没变</p><p>一般用于自适应布局的 UI 元素：例如游戏中的背景图片、全屏的菜单界面等</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/矩形边缘对齐拉升变形动画.gif" alt=""></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329144911515.png" alt=""></p><p>可以通过代码直接获取Rect Transform<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.<span class="function">transform <span class="keyword">as</span> RectTransform</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="params">(<span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform</span>).sizeDelta)</span>;</span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RectTransform组件用来干啥&quot;&gt;&lt;a href=&quot;#RectTransform组件用来干啥&quot; class=&quot;headerlink&quot; title=&quot;RectTransform组件用来干啥&quot;&gt;&lt;/a&gt;RectTransform组件用来干啥&lt;/h1&gt;&lt;p&gt;&lt;i</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>6.EventSystem和StandaloneInputModule组件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-29T04:27:27.000Z</published>
    <updated>2025-03-29T04:46:16.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EventSystem组件用来干啥"><a href="#EventSystem组件用来干啥" class="headerlink" title="EventSystem组件用来干啥"></a>EventSystem组件用来干啥</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329122745205.png" alt=""></p><h1 id="EventSystem组件参数"><a href="#EventSystem组件参数" class="headerlink" title="EventSystem组件参数"></a>EventSystem组件参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329122905341.png" alt=""></p><h2 id="First-Selected：首选游戏对象"><a href="#First-Selected：首选游戏对象" class="headerlink" title="First Selected：首选游戏对象"></a>First Selected：首选游戏对象</h2><p>首先选择的游戏对象，可以设置游戏一开始的默认选择</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123224801.png" alt=""></p><h2 id="Send-Navigation-Events：是否允许导航事件"><a href="#Send-Navigation-Events：是否允许导航事件" class="headerlink" title="Send Navigation Events：是否允许导航事件"></a>Send Navigation Events：是否允许导航事件</h2><p>（移动/按下/取消）<br>勾选后，可以按wasd或上下左右切换选择的对象<br><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/screenshots.gif" alt=""></p><h2 id="Drag-Threshold：拖拽阈值"><a href="#Drag-Threshold：拖拽阈值" class="headerlink" title="Drag Threshold：拖拽阈值"></a>Drag Threshold：拖拽阈值</h2><p>拖拽操作的阈值（移动多少像素算拖拽）<br>鼠标移动多少像素进入拖拽状态</p><h1 id="Standalone-Input-Module组件用来干啥的"><a href="#Standalone-Input-Module组件用来干啥的" class="headerlink" title="Standalone Input Module组件用来干啥的"></a>Standalone Input Module组件用来干啥的</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123847494.png" alt=""></p><h1 id="Standalone-Input-Module参数"><a href="#Standalone-Input-Module参数" class="headerlink" title="Standalone Input Module参数"></a>Standalone Input Module参数</h1><p><strong>一般不需要修改</strong></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123935145.png" alt=""></p><p>Horizontal Axis：水平轴按钮对应的热键名（该名字对应Input管理器）<br>Vertical Axis：垂直轴按钮对应的热键名（该名字对应Input管理器）<br>Submit Button：提交（确定）按钮对应的热键名（该名字对应Input管理器）<br>Cancel Button：取消按钮对应的热键名（该名字对应Input管理器）<br>Input Actions Per Second：每秒允许键盘/控制器输入的数量<br>Repeat Delay：每秒输入操作重复率生效前的延迟时间<br>ForceModule Active：是否强制模块处于激活状态<br>一般其实不会修改Standalone Input Module组件的</p><p>EventSystem对象提供了调试信息相关</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329124615448.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;EventSystem组件用来干啥&quot;&gt;&lt;a href=&quot;#EventSystem组件用来干啥&quot; class=&quot;headerlink&quot; title=&quot;EventSystem组件用来干啥&quot;&gt;&lt;/a&gt;EventSystem组件用来干啥&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>5.GraphicRaycaster图形射线投射器组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T12:45:27.000Z</published>
    <updated>2025-03-29T04:26:33.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Graphic-Raycaster用来干啥"><a href="#Graphic-Raycaster用来干啥" class="headerlink" title="Graphic Raycaster用来干啥"></a>Graphic Raycaster用来干啥</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250328204543152.png" alt=""></p><h1 id="Graphic-Raycaster参数"><a href="#Graphic-Raycaster参数" class="headerlink" title="Graphic Raycaster参数"></a>Graphic Raycaster参数</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329121018924.png" alt=""></p><h2 id="Ignore-Reversed-Graphics：忽略反转图形"><a href="#Ignore-Reversed-Graphics：忽略反转图形" class="headerlink" title="Ignore Reversed Graphics：忽略反转图形"></a>Ignore Reversed Graphics：忽略反转图形</h2><p>勾选后，假如对象旋转了x轴或y轴，点击失效<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329121811345.png" alt=""></p><h2 id="Blocking-Objects："><a href="#Blocking-Objects：" class="headerlink" title="Blocking Objects："></a>Blocking Objects：</h2><p>射线被哪些类型的碰撞器阻挡（在覆盖渲染模式下无效）</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329122016404.png" alt=""></p><h2 id="Blocking-Mask："><a href="#Blocking-Mask：" class="headerlink" title="Blocking Mask："></a>Blocking Mask：</h2><p>射线被哪些层级的碰撞器阻挡（在覆盖渲染模式下无效）<br>要配合Blocking Objects使用<br><strong>Blocking Object 和 Blocking Mask两个都要满足才能阻挡射线</strong></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Graphic-Raycaster用来干啥&quot;&gt;&lt;a href=&quot;#Graphic-Raycaster用来干啥&quot; class=&quot;headerlink&quot; title=&quot;Graphic Raycaster用来干啥&quot;&gt;&lt;/a&gt;Graphic Raycaster用来干啥&lt;/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>4.CanvasScaler画布缩放控制组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T09:15:26.000Z</published>
    <updated>2025-03-28T12:43:43.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CanvasScaler必备知识"><a href="#CanvasScaler必备知识" class="headerlink" title="CanvasScaler必备知识"></a>CanvasScaler必备知识</h1><h2 id="CanvasScaler是什么"><a href="#CanvasScaler是什么" class="headerlink" title="CanvasScaler是什么"></a>CanvasScaler是什么</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171556049.png" alt=""></p><h2 id="CanvasScaler学前知识准备"><a href="#CanvasScaler学前知识准备" class="headerlink" title="CanvasScaler学前知识准备"></a>CanvasScaler学前知识准备</h2><h3 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171906516.png" alt=""></p><h3 id="画布大小和缩放系数"><a href="#画布大小和缩放系数" class="headerlink" title="画布大小和缩放系数"></a>画布大小和缩放系数</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172015426.png" alt=""></p><h3 id="参考分辨率"><a href="#参考分辨率" class="headerlink" title="参考分辨率"></a>参考分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172330645.png" alt=""></p><h3 id="汇总"><a href="#汇总" class="headerlink" title="汇总"></a>汇总</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172431278.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172501024.png" alt=""></p><h2 id="CanvasScaler的三种适配模式概览"><a href="#CanvasScaler的三种适配模式概览" class="headerlink" title="CanvasScaler的三种适配模式概览"></a>CanvasScaler的三种适配模式概览</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172630980.png" alt=""></p><h2 id="必备知识总结"><a href="#必备知识总结" class="headerlink" title="必备知识总结"></a>必备知识总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172741902.png" alt=""></p><h1 id="Constant-Pixel-Size-恒定像素模式"><a href="#Constant-Pixel-Size-恒定像素模式" class="headerlink" title="Constant Pixel Size 恒定像素模式"></a>Constant Pixel Size 恒定像素模式</h1><p><strong>游戏UI中极少使用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172907263.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172929490.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328173002156.png" alt=""></p><h2 id="Scale-Factor：缩放系数"><a href="#Scale-Factor：缩放系数" class="headerlink" title="Scale Factor：缩放系数"></a>Scale Factor：缩放系数</h2><p>这是一个缩放系数，用于指定Canvas中所有UI元素的全局缩放比例</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328185911443.png" alt=""></p><h2 id="Reference-Pixels-Per-Unit：单位参考像素"><a href="#Reference-Pixels-Per-Unit：单位参考像素" class="headerlink" title="Reference Pixels Per Unit：单位参考像素"></a>Reference Pixels Per Unit：单位参考像素</h2><p>定义了在Unity中一个单位对应多少个屏幕像素，默认情况下，<strong>一个单位通常被设定为100像素</strong>。<br>这一参数与图片本身的Pixels Per Unit设置共同作用于UI元素的最终显示尺寸计算。</p><h2 id="恒定像素模式计算公式"><a href="#恒定像素模式计算公式" class="headerlink" title="恒定像素模式计算公式"></a>恒定像素模式计算公式</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328190823208.png" alt=""></p><p>尝试把单位参考像素从100改成50，点击图片上设置原生大小，会发现图片缩小了一半，这是符合恒定像素模式计算公式<br>即 <strong>49 UI尺寸</strong> = <strong>98 图片文件大小</strong> / (<strong>100 图片文件中每单位像素数</strong> / <strong>50 CanvasScaler每单位参考像素</strong>)<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191153328.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191254850.png" alt=""></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192003400.png" alt=""></p><h1 id="Scale-With-Screen-Size-缩放模式"><a href="#Scale-With-Screen-Size-缩放模式" class="headerlink" title="Scale With Screen Size 缩放模式"></a>Scale With Screen Size 缩放模式</h1><p><strong>最常用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192228749.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192252266.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192413019.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192334340.png" alt=""></p><h2 id="Reference-Resolution：参考分辨率"><a href="#Reference-Resolution：参考分辨率" class="headerlink" title="Reference Resolution：参考分辨率"></a>Reference Resolution：参考分辨率</h2><p><strong>美术同学出图的标准分辨率。</strong><br>缩放模式下的所有匹配模式都会基于参考分辨率进行自适应计算，可以填写常用的分辨率大小1920x1080</p><h2 id="Screen-Match-Mode：屏幕匹配模式"><a href="#Screen-Match-Mode：屏幕匹配模式" class="headerlink" title="Screen Match Mode：屏幕匹配模式"></a>Screen Match Mode：屏幕匹配模式</h2><p>当前屏幕分辨率宽高比不适应参考分辨率时，用于分辨率大小自适应的匹配模式</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193246356.png" alt=""></p><h3 id="Expand-拓展匹配"><a href="#Expand-拓展匹配" class="headerlink" title="Expand 拓展匹配"></a>Expand 拓展匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193337727.png" alt=""></p><p><strong>Canvas Size 画布的尺寸</strong><br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193754365.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328194242932.png" alt=""></p><p>白色底图就是1920 <em> 1080 的图<br>可以看到完全显示了图，即 <em>*保留所有细节，但是上下有黑边（这里是天空盒）</em></em><br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200501369.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200839542.png" alt=""></p><h3 id="Shrink-收缩匹配"><a href="#Shrink-收缩匹配" class="headerlink" title="Shrink 收缩匹配"></a>Shrink 收缩匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201002994.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201046815.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201232021.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201352973.png" alt=""></p><h3 id="Match-Width-Or-Height-宽高匹配"><a href="#Match-Width-Or-Height-宽高匹配" class="headerlink" title="Match Width Or Height 宽高匹配"></a>Match Width Or Height 宽高匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201452029.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201600609.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201703322.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201716631.png" alt=""></p><p>要么裁剪，要么黑边<br>中间的UI一直不变<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202359219.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202317945.png" alt=""></p><h2 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202555392.png" alt=""></p><h1 id="Constant-Physical-Size-恒定物理模式"><a href="#Constant-Physical-Size-恒定物理模式" class="headerlink" title="Constant Physical Size 恒定物理模式"></a>Constant Physical Size 恒定物理模式</h1><p>了解一下就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202818644.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202954906.png" alt=""></p><p>DPI：（Dots Per Inch，每英寸点数）图像每英寸长度内的像素点数</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203400735.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203539874.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203722292.png" alt=""></p><h1 id="3D模式"><a href="#3D模式" class="headerlink" title="3D模式"></a>3D模式</h1><p>了解就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203853233.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204010773.png" alt=""></p><p>新建一个Text，可以看到有点模糊<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204131539.png" alt=""></p><p>把 Dynamic Pixels Per Unit 改大就越清晰<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204240450.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;CanvasScaler必备知识&quot;&gt;&lt;a href=&quot;#CanvasScaler必备知识&quot; class=&quot;headerlink&quot; title=&quot;CanvasScaler必备知识&quot;&gt;&lt;/a&gt;CanvasScaler必备知识&lt;/h1&gt;&lt;h2 id=&quot;CanvasSca</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>3.Canvas画布组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T08:12:04.000Z</published>
    <updated>2025-03-28T09:12:24.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Canvas组件用来干啥"><a href="#Canvas组件用来干啥" class="headerlink" title="Canvas组件用来干啥"></a>Canvas组件用来干啥</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161331979.png" alt=""></p><p>场景上可以有多个Canvas对象<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161451808.png" alt=""></p><h1 id="Canvas的三种渲染方式"><a href="#Canvas的三种渲染方式" class="headerlink" title="Canvas的三种渲染方式"></a>Canvas的三种渲染方式</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161651369.png" alt=""></p><h2 id="Screen-Space-Overlay"><a href="#Screen-Space-Overlay" class="headerlink" title="Screen Space - Overlay"></a>Screen Space - Overlay</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161814899.png" alt=""></p><p>UI始终显示在3d物体前面<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162820350.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162153133.png" alt=""></p><h3 id="Pixel-Perfect-："><a href="#Pixel-Perfect-：" class="headerlink" title="Pixel Perfect ："></a>Pixel Perfect ：</h3><p>是否开启无锯齿精确渲染（性能换效果）</p><h3 id="SortOrder："><a href="#SortOrder：" class="headerlink" title="SortOrder："></a>SortOrder：</h3><p>排序层编号<br>用于控制多个Canvas时的渲染先后顺序<br>次序越大，越后渲染，然后显示在前面</p><h3 id="TargetDisplay-："><a href="#TargetDisplay-：" class="headerlink" title="TargetDisplay*："></a>TargetDisplay*：</h3><p>目标设备（在哪个显示设备上显示）<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162306884.png" alt=""></p><h3 id="Additional-Shader-Channels-："><a href="#Additional-Shader-Channels-：" class="headerlink" title="Additional Shader Channels*："></a>Additional Shader Channels*：</h3><p>其他着色器通道，决定着色器可以读取哪些数据</p><h1 id="Screen-Space-Camera"><a href="#Screen-Space-Camera" class="headerlink" title="Screen Space - Camera"></a>Screen Space - Camera</h1><p>手游用这个用的多<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162905643.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163107754.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163856193.png" alt=""></p><h3 id="RenderCamera："><a href="#RenderCamera：" class="headerlink" title="RenderCamera："></a>RenderCamera：</h3><p>用于渲染UI的摄像机（如果不设置将类似于覆盖模式）</p><p>不推荐设置成主摄像机<br>设置成主摄像机可能会不好控制哪些场景模型要在UI前面，哪些要在后面<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163919503.png" alt=""></p><p>建议多创建一个只渲染UI层的摄像机并关联，设置模式为仅深度。调整深度比主摄像机高。这样UI就能一直在模型前面了。假如想创建显示在UI层前面的模型，直接创建在UI下的子物体即可。</p><h3 id="Plane-Distance："><a href="#Plane-Distance：" class="headerlink" title="Plane Distance："></a>Plane Distance：</h3><p>UI平面在摄像机前方的距离，类似整体Z轴的感觉<br>可以通过这个来让3d物体显示之前或者之后 <strong>（一般不用）</strong><br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/screenshots.gif" alt=""></p><p>下面两参数用来决定多个Canvas之间的顺序</p><h3 id="Sorting-Layer：所在排序层"><a href="#Sorting-Layer：所在排序层" class="headerlink" title="Sorting Layer：所在排序层"></a>Sorting Layer：所在排序层</h3><h3 id="Order-in-Layer：排序层的序号"><a href="#Order-in-Layer：排序层的序号" class="headerlink" title="Order in Layer：排序层的序号"></a>Order in Layer：排序层的序号</h3><h3 id="eg："><a href="#eg：" class="headerlink" title="eg："></a>eg：</h3><p>主摄像机不渲染UI层<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165558858.png" alt=""></p><p>新建一个摄像机，只渲染UI层，清楚标志选择仅深度<br>注意：<br>因为<strong>新创建的摄像机的深度（仅深度） &gt; 主摄像机的深度（天空盒）</strong><br>所以UI元素只会显示在屏幕前面<br>想要在UI前面显示3d物体可以在UI的Canvas下面创建3d物体<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165956835.png" alt=""></p><p>UI的渲染选择新创建的摄像机<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165835181.png" alt=""></p><h1 id="World-Space"><a href="#World-Space" class="headerlink" title="World Space"></a>World Space</h1><p>3D模式，可以把UI对象像3D物体一样处理，常用于VR或者AR<br>一般把关联的摄像机设置成主摄像机，重置UI的比例和长宽后，标准单位的UI图片大小是和立方体一样的。可以把UI当成3D物体处理。<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328170925145.png" alt=""></p><p><strong>Event Camera：</strong><br>用于处理UI事件的摄像机（如果不设置，不能正常注册UI事件）<br>这里关联的摄像机一般就是我们的主摄像机</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328171222382.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Canvas组件用来干啥&quot;&gt;&lt;a href=&quot;#Canvas组件用来干啥&quot; class=&quot;headerlink&quot; title=&quot;Canvas组件用来干啥&quot;&gt;&lt;/a&gt;Canvas组件用来干啥&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>2.六大基础组件概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:51:43.000Z</published>
    <updated>2025-03-28T08:13:07.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在Unity中使用UGUI"><a href="#如何在Unity中使用UGUI" class="headerlink" title="如何在Unity中使用UGUI"></a>如何在Unity中使用UGUI</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155525253.png" alt=""></p><p>白框是玩家能看到的内容<br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155655276.png" alt=""></p><h1 id="六打基础组件在哪里"><a href="#六打基础组件在哪里" class="headerlink" title="六打基础组件在哪里"></a>六打基础组件在哪里</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155801398.png" alt=""></p><h1 id="六打基础组件概述"><a href="#六打基础组件概述" class="headerlink" title="六打基础组件概述"></a>六打基础组件概述</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328160041734.png" alt=""><br><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155942558.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155957314.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在Unity中使用UGUI&quot;&gt;&lt;a href=&quot;#如何在Unity中使用UGUI&quot; class=&quot;headerlink&quot; title=&quot;如何在Unity中使用UGUI&quot;&gt;&lt;/a&gt;如何在Unity中使用UGUI&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2025/03</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>1.UGUI基础知识概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:40:28.000Z</published>
    <updated>2025-03-28T07:49:54.604Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154107061.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154154553.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154338223.png" alt=""></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/Unity中的UI系统%20之%20UGUI.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png&quot; </summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>8.Json实践小项目</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/</id>
    <published>2025-03-27T12:44:21.000Z</published>
    <updated>2025-03-27T13:06:08.747Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210352852.png" alt=""></p><h1 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h1><p>写一个Json数据管理类<br>需要有一键存储和读取对应对象的方法<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327205230653.png" alt=""></p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json; <span class="comment">// 需先安装 Newtonsoft.Json</span></span><br><span class="line"><span class="keyword">using</span> LitJson; <span class="comment">// 需先安装 LitJson</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> JsonType</span><br><span class="line">&#123;</span><br><span class="line">    JsonUtility,</span><br><span class="line">    LitJson,</span><br><span class="line">    NewtonsoftJson <span class="comment">// 新增 Newtonsoft 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JsonMgr instance = <span class="keyword">new</span> JsonMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JsonMgr Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">JsonMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params"><span class="built_in">object</span> data, <span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line">        <span class="built_in">string</span> json = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                json = JsonUtility.ToJson(data, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                json = JsonMapper.ToJson(data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: <span class="comment">// Newtonsoft 分支</span></span><br><span class="line">                json = JsonConvert.SerializeObject(data, Formatting.Indented);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(path, json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">LoadData</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$&quot;File not found: <span class="subst">&#123;path&#125;</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> json = File.ReadAllText(path);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                <span class="keyword">return</span> JsonUtility.FromJson&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                <span class="keyword">return</span> JsonMapper.ToObject&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: </span><br><span class="line">                <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;T&gt;(json);</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="具体使用"><a href="#具体使用" class="headerlink" title="具体使用"></a>具体使用</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义测试数据类</span></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> playerName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> level;</span><br><span class="line">    <span class="keyword">public</span> Vector3 position; <span class="comment">// Unity 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData data = <span class="keyword">new</span> PlayerData </span><br><span class="line">&#123; </span><br><span class="line">    playerName = <span class="string">&quot;Arthur&quot;</span>, </span><br><span class="line">    level = <span class="number">10</span>, </span><br><span class="line">    position = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) </span><br><span class="line">&#125;;</span><br><span class="line">JsonMgr.Instance.SaveData(data, <span class="string">&quot;player.json&quot;</span>, JsonType.NewtonsoftJson);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData loadedData = JsonMgr.Instance.LoadData&lt;PlayerData&gt;(</span><br><span class="line">    <span class="string">&quot;player.json&quot;</span>, </span><br><span class="line">    JsonType.NewtonsoftJson</span><br><span class="line">);</span><br><span class="line">Debug.Log(loadedData.position); <span class="comment">// 输出 (1.0, 2.0, 3.0)</span></span><br></pre></td></tr></table></figure><h1 id="总结与挖坑"><a href="#总结与挖坑" class="headerlink" title="总结与挖坑"></a>总结与挖坑</h1><p>这要搞是不是有点复杂？<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210414641.png" alt=""></p><p>以后编辑器开发可以来解决<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210454462.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>7.各Json库对比</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/</id>
    <published>2025-03-27T12:10:06.000Z</published>
    <updated>2025-03-27T12:38:15.827Z</updated>
    
    <content type="html"><![CDATA[<p>在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。</p><h1 id="核心对比表"><a href="#核心对比表" class="headerlink" title="核心对比表"></a><strong>核心对比表</strong></h1><div class="table-container"><table><thead><tr><th><strong>特性</strong></th><th><strong>Newtonsoft.Json</strong></th><th><strong>LitJson</strong></th><th><strong>Unity JsonUtility</strong></th></tr></thead><tbody><tr><td><strong>类型支持</strong></td><td>✔️ 支持复杂类型（字典、多态、接口、私有字段等）</td><td>✔️ 基础类型、简单对象，有限支持多态（字典）</td><td>❌ 仅支持标记为 <code>[Serializable]</code> 的公共字段</td></tr><tr><td><strong>性能</strong></td><td>❌ 最慢（反射开销大）</td><td>✔️ 较快（轻量级实现）</td><td>✔️ 最快（底层 C++ 实现）</td></tr><tr><td><strong>Unity 类型支持</strong></td><td>❌ 需自定义转换器（如 <code>Vector3</code>）</td><td>❌ 需自定义转换器</td><td>✔️ 原生支持 <code>Vector3</code>、<code>Color</code> 等</td></tr><tr><td><strong>多态/继承支持</strong></td><td>✔️ 完整支持（通过 <code>TypeNameHandling</code>）</td><td>✔️ 有限支持（需额外配置）</td><td>❌ 不支持</td></tr><tr><td><strong>自定义序列化</strong></td><td>✔️ 支持（<code>JsonConverter</code>、属性标记）</td><td>✔️ 有限支持（通过 <code>JsonMapper</code>）</td><td>❌ 不支持</td></tr><tr><td><strong>空值和默认值处理</strong></td><td>✔️ 灵活配置（<code>NullValueHandling</code>）</td><td>✔️ 基础支持</td><td>❌ 仅忽略 <code>null</code></td></tr><tr><td><strong>文档和社区</strong></td><td>✔️ 完善（官方文档 + Stack Overflow）</td><td>❌ 文档较少，社区支持一般</td><td>✔️ 官方文档（但功能有限）</td></tr><tr><td><strong>安装方式</strong></td><td>✔️ NuGet 包或手动导入</td><td>✔️ 手动导入 DLL 或源码</td><td>✔️ Unity 内置</td></tr><tr><td><strong>AOT/IL2CPP 兼容性</strong></td><td>❌ 需要额外处理（<code>link.xml</code>）</td><td>✔️ 较好</td><td>✔️ 完美兼容</td></tr><tr><td><strong>体积</strong></td><td>❌ 较大（DLL 约 500KB）</td><td>✔️ 较小（DLL 约 100KB）</td><td>✔️ 零额外体积</td></tr><tr><td><strong>数据反序列化为数据集合</strong></td><td>✔️</td><td>✔️</td><td>❌不能直接将数据反序列化为数据集合(数组字典),要包裹一层</td></tr></tbody></table></div><h1 id="详细对比分析"><a href="#详细对比分析" class="headerlink" title="详细对比分析"></a>详细对比分析</h1><h2 id="功能丰富性"><a href="#功能丰富性" class="headerlink" title="功能丰富性"></a><strong>功能丰富性</strong></h2><p><strong>Newtonsoft.Json</strong>：<br>    <strong>最强功能</strong>：支持多态类型、字典、私有字段、接口、循环引用处理、自定义转换器等。<br>    适合复杂数据结构（如 RPG 游戏的存档、网络协议数据）。<br><strong>LitJson</strong>：<br>    <strong>中等功能</strong>：支持基础类型和简单对象，多态需要手动注册类型。<br>    适合轻量级需求（如配置表解析）。<br><strong>JsonUtility</strong>：<br>    <strong>功能最弱</strong>：仅支持标记为 <code>[Serializable]</code> 的公共字段，不支持字典、多态、私有字段。<br>    适合简单数据（如玩家位置、基础配置）。</p><h2 id="性能"><a href="#性能" class="headerlink" title="性能"></a><strong>性能</strong></h2><p><strong>JsonUtility</strong>：<br>    <strong>最快</strong>：底层是 C++ 实现，无反射开销，适合高频调用（如每帧序列化）。<br>    测试数据：序列化 10,000 个简单对象约 <strong>5ms</strong>。<br><strong>LitJson</strong>：<br>    <strong>次快</strong>：基于轻量级代码生成，反射开销较小。<br>    测试数据：序列化 10,000 个简单对象约 <strong>20ms</strong>。<br><strong>Newtonsoft.Json</strong>：<br>    <strong>最慢</strong>：依赖反射和动态类型，性能较差。<br>    测试数据：序列化 10,000 个简单对象约 <strong>100ms</strong>。</p><h2 id="Unity-类型支持"><a href="#Unity-类型支持" class="headerlink" title="Unity 类型支持"></a><strong>Unity 类型支持</strong></h2><p><strong>JsonUtility</strong>：原生支持 <code>Vector3</code>、<code>Color</code>、<code>Quaternion</code> 等 Unity 特有类型。<br><strong>Newtonsoft.Json</strong> 和 <strong>LitJson</strong>：需要自定义转换器才能序列化 Unity 类型（如 <code>Vector3</code>）。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Newtonsoft.Json 自定义 Vector3 转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Vector3Converter</span> : <span class="title">JsonConverter</span>&lt;<span class="title">Vector3</span>&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, Vector3 <span class="keyword">value</span>, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        writer.WriteValue(<span class="string">$&quot;<span class="subst">&#123;<span class="keyword">value</span>.x&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.y&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.z&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Vector3 <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, Vector3 existingValue, <span class="built_in">bool</span> hasExistingValue, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">string</span>[] parts = ((<span class="built_in">string</span>)reader.Value).Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Vector3(<span class="built_in">float</span>.Parse(parts[<span class="number">0</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">1</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="多态支持（继承类-接口）"><a href="#多态支持（继承类-接口）" class="headerlink" title="多态支持（继承类/接口）"></a><strong>多态支持（继承类/接口）</strong></h2><p><strong>Newtonsoft.Json</strong>：通过 <code>TypeNameHandling.Auto</code> 自动添加类型信息。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>]</span><br><span class="line"><span class="keyword">public</span> List&lt;Character&gt; Characters; <span class="comment">// 支持 Enemy/NPC 派生类</span></span><br></pre></td></tr></table></figure><br><strong>LitJson</strong>：需手动注册子类型<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JsonMapper.RegisterExporter&lt;Enemy&gt;((obj, writer) =&gt; &#123; <span class="comment">/* 自定义导出逻辑 */</span> &#125;);</span><br></pre></td></tr></table></figure><br><strong>JsonUtility</strong>：不支持多态，反序列化时无法还原派生类。</p><h2 id="移动端兼容性"><a href="#移动端兼容性" class="headerlink" title="移动端兼容性"></a><strong>移动端兼容性</strong></h2><p><strong>JsonUtility</strong>：完美支持 IL2CPP，无 AOT 问题。<br><strong>LitJson</strong>：兼容性较好，但部分复杂类型可能需额外处理。<br><strong>Newtonsoft.Json</strong>：在 IL2CPP 下可能因反射导致 AOT 错误，需通过 <code>link.xml</code> 保留类型：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- link.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">linker</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">assembly</span> <span class="attr">fullname</span>=<span class="string">&quot;Newtonsoft.Json&quot;</span> <span class="attr">preserve</span>=<span class="string">&quot;all&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">linker</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h1 id="场景推荐"><a href="#场景推荐" class="headerlink" title="场景推荐"></a><strong>场景推荐</strong></h1><p><strong>Newtonsoft.Json：</strong><br>需要处理复杂数据结构（如包含字典、多态类型的存档）。<br>需要高度定制序列化行为（如忽略空值、自定义字段名）。</p><p>典型场景：<strong>网络协议、复杂游戏存档、编辑器工具</strong>。</p><p><strong>LitJson：</strong><br>对性能有一定要求，但数据结构简单。<br>不想依赖 Unity 以外的库。</p><p>典型场景：<strong>配置表解析、轻量级网络通信。</strong></p><p><strong>JsonUtility：</strong><br>数据结构简单，且需要极致性能（如频繁序列化）。<br>项目要求零额外依赖。</p><p>典型场景：<strong>玩家位置同步、简单配置存储。</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson06_JsonUtility</span>和<span class="title">LitJson</span>对比 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点一 JsonUtlity和LitJson相同点</span></span><br><span class="line">        <span class="comment">//1.他们都是用于Json的序列化反序列化</span></span><br><span class="line">        <span class="comment">//2.Json文档编码格式必须是UTF-8</span></span><br><span class="line">        <span class="comment">//3.都是通过静态类进行方法调用</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点二 JsonUtlity和LitJson不同点</span></span><br><span class="line">        <span class="comment">//1.JsonUtlity是Unity自带，LitJson是第三方需要引用命名空间</span></span><br><span class="line">        <span class="comment">//2.JsonUtlity使用时自定义类需要加特性,LitJson不需要</span></span><br><span class="line">        <span class="comment">//3.JsonUtlity支持私有变量(加特性),LitJson不支持</span></span><br><span class="line">        <span class="comment">//4.JsonUtlity不支持字典,LitJson支持(但是键只能是字符串)</span></span><br><span class="line">        <span class="comment">//5.JsonUtlity不能直接将数据反序列化为数据集合(数组字典),要包裹一层,LitJson可以</span></span><br><span class="line">        <span class="comment">//6.JsonUtlity对自定义类不要求有无参构造，LitJson需要</span></span><br><span class="line">        <span class="comment">//7.JsonUtlity存储空对象时会存储默认值而不是null，LitJson会存null</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点三 如何选择两者</span></span><br><span class="line">        <span class="comment">//根据实际需求</span></span><br><span class="line">        <span class="comment">//建议使用LitJson</span></span><br><span class="line">        <span class="comment">//原因：LitJson不用加特性，支持字典，支持直接反序列化为数据集合，存储null更准确</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。&lt;/p&gt;
&lt;h1 id=&quot;核心对比表&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>6.Newtonsoft.Json</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/</id>
    <published>2025-03-27T11:27:51.000Z</published>
    <updated>2025-03-27T12:39:58.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-Newtonsoft-Json"><a href="#什么是-Newtonsoft-Json" class="headerlink" title="什么是 Newtonsoft Json"></a>什么是 Newtonsoft Json</h1><p>Json.NET（官方名称 Newtonsoft.Json）是 .NET 生态中最流行的 JSON 处理库，支持复杂对象的序列化（对象转 JSON）和反序列化（JSON 转对象）。<br>Unity 内置的 JsonUtility 功能有限（如不支持字典、私有字段、多态类型等），而 Newtonsoft Json 提供了更灵活、更强大的功能。</p><h1 id="Unity-中安装-Newtonsoft-Json"><a href="#Unity-中安装-Newtonsoft-Json" class="headerlink" title="Unity 中安装 Newtonsoft.Json"></a>Unity 中安装 Newtonsoft.Json</h1><p>通过 Unity Package Manager (UPM) 安装</p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/file-20250327192905593.png" alt=""></p><h1 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h1><p><strong>序列化与反序列化</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据类定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">JsonProperty(<span class="string">&quot;player_name&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;  <span class="comment">// 自定义名称</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Level;</span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">string</span>&gt; Inventory;</span><br><span class="line">    </span><br><span class="line">    [<span class="meta">JsonIgnore</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> SecretCode; <span class="comment">// 不会被序列化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerData player = <span class="keyword">new</span> PlayerData</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;Alice&quot;</span>,</span><br><span class="line">            Level = <span class="number">10</span>,</span><br><span class="line">            Inventory = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Sword&quot;</span>, <span class="string">&quot;Potion&quot;</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">string</span> json = JsonConvert.SerializeObject(player, Formatting.Indented);</span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/player.json&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        json = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/player.json&quot;</span>);</span><br><span class="line">        PlayerData player2 = JsonConvert.DeserializeObject&lt;PlayerData&gt;(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>序列化后的json文件<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;player_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Level&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Inventory&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;Sword&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Potion&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br><strong>数据反序列化为数据集合</strong><br>1.解析 JSON 数组到 <code>List&lt;T&gt;</code> 集合。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Slime&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;HP&quot;</span><span class="punctuation">:</span> <span class="number">50</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dragon&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;HP&quot;</span><span class="punctuation">:</span> <span class="number">1000</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> HP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// JSON 数据</span></span><br><span class="line"><span class="built_in">string</span> json = <span class="string">@&quot;[</span></span><br><span class="line"><span class="string">  &#123; &#x27;Name&#x27;: &#x27;Slime&#x27;, &#x27;HP&#x27;: 50 &#125;,</span></span><br><span class="line"><span class="string">  &#123; &#x27;Name&#x27;: &#x27;Dragon&#x27;, &#x27;HP&#x27;: 1000 &#125;</span></span><br><span class="line"><span class="string">]&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接反序列化为 List&lt;Enemy&gt;</span></span><br><span class="line">List&lt;Enemy&gt; enemies = JsonConvert.DeserializeObject&lt;List&lt;Enemy&gt;&gt;(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="keyword">foreach</span> (Enemy enemy <span class="keyword">in</span> enemies) &#123;</span><br><span class="line">    Debug.Log(<span class="string">$&quot;Name: <span class="subst">&#123;enemy.Name&#125;</span>, HP: <span class="subst">&#123;enemy.HP&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.解析 JSON 对象到 <code>Dictionary&lt;string, int&gt;</code>。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> json = <span class="string">@&quot;&#123; &#x27;Sword&#x27;: 10, &#x27;Potion&#x27;: 5, &#x27;Arrow&#x27;: 20 &#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化为 Dictionary&lt;string, int&gt;</span></span><br><span class="line">Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; inventory = JsonConvert.DeserializeObject&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;&gt;(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> inventory) &#123;</span><br><span class="line">    Debug.Log(<span class="string">$&quot;<span class="subst">&#123;item.Key&#125;</span>: <span class="subst">&#123;item.Value&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.解析包含不同派生类对象的集合。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Characters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enemy, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Orc&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Damage&quot;</span><span class="punctuation">:</span> <span class="number">20</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NPC, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Merchant&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Dialogue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Welcome!&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Character&gt; Characters; <span class="comment">// 基类集合</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Damage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NPC</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Dialogue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = <span class="string">&quot;...&quot;</span>; <span class="comment">// 上述 JSON 数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化时自动识别派生类</span></span><br><span class="line">GameData data = JsonConvert.DeserializeObject&lt;GameData&gt;(json, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto <span class="comment">// 关键设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查类型</span></span><br><span class="line">Debug.Log(data.Characters[<span class="number">0</span>].GetType()); <span class="comment">// 输出 Enemy</span></span><br><span class="line">Debug.Log(data.Characters[<span class="number">1</span>].GetType()); <span class="comment">// 输出 NPC</span></span><br></pre></td></tr></table></figure><h1 id="高级用法"><a href="#高级用法" class="headerlink" title="高级用法"></a>高级用法</h1><h2 id="处理默认值和空值"><a href="#处理默认值和空值" class="headerlink" title="处理默认值和空值"></a><strong>处理默认值和空值</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerStats</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Health = <span class="number">100</span>;    <span class="comment">// 默认值 100</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Mana = <span class="number">0</span>;        <span class="comment">// 默认值 0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title = <span class="literal">null</span>; <span class="comment">// 默认值 null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置序列化设置：忽略默认值和 null</span></span><br><span class="line"><span class="keyword">var</span> settings = <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    DefaultValueHandling = DefaultValueHandling.Ignore, <span class="comment">// 忽略类型的默认值（如 int 的 0）</span></span><br><span class="line">    NullValueHandling = NullValueHandling.Ignore         <span class="comment">// 忽略 null</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">PlayerStats stats = <span class="keyword">new</span> PlayerStats(); </span><br><span class="line">stats.Health = <span class="number">100</span>; <span class="comment">// 使用默认值</span></span><br><span class="line">stats.Mana = <span class="number">0</span>;     <span class="comment">// 使用默认值</span></span><br><span class="line">stats.Title = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(stats, Formatting.Indented, settings);</span><br><span class="line">Console.WriteLine(json);</span><br></pre></td></tr></table></figure><p>输出结果：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span> <span class="comment">// 因为所有字段都是默认值或 null，全部被忽略</span></span><br></pre></td></tr></table></figure></p><p>修改数据后的输出：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stats.Health = <span class="number">80</span>;</span><br><span class="line">stats.Mana = <span class="number">50</span>;</span><br><span class="line">stats.Title = <span class="string">&quot;Hero&quot;</span>;</span><br></pre></td></tr></table></figure></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Health&quot;</span><span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Mana&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hero&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="多态类型支持"><a href="#多态类型支持" class="headerlink" title="多态类型支持"></a>多态类型支持</h2><p><strong>场景：序列化一个包含派生类对象的集合时，确保反序列化时能还原为正确的类型。</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>] <span class="comment">// 关键：为集合中的元素添加类型信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Character&gt; Characters;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Damage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NPC</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Dialogue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建包含派生类对象的集合</span></span><br><span class="line"><span class="keyword">var</span> gameData = <span class="keyword">new</span> GameData &#123;</span><br><span class="line">    Characters = <span class="keyword">new</span> List&lt;Character&gt; &#123;</span><br><span class="line">        <span class="keyword">new</span> Enemy &#123; Name = <span class="string">&quot;Orc&quot;</span>, Damage = <span class="number">20</span> &#125;,</span><br><span class="line">        <span class="keyword">new</span> NPC &#123; Name = <span class="string">&quot;Merchant&quot;</span>, Dialogue = <span class="string">&quot;Welcome!&quot;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 序列化时保留类型信息</span></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(gameData, Formatting.Indented, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto <span class="comment">// 自动添加类型信息</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化时自动识别类型</span></span><br><span class="line">GameData loadedData = JsonConvert.DeserializeObject&lt;GameData&gt;(json, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(loadedData.Characters[<span class="number">0</span>].GetType().Name); <span class="comment">// 输出 &quot;Enemy&quot;</span></span><br><span class="line">Console.WriteLine(loadedData.Characters[<span class="number">1</span>].GetType().Name); <span class="comment">// 输出 &quot;NPC&quot;</span></span><br></pre></td></tr></table></figure><br>生成的 JSON：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Characters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enemy, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="comment">// 类型信息</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Orc&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Damage&quot;</span><span class="punctuation">:</span> <span class="number">20</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NPC, Assembly-CSharp&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Merchant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Dialogue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Welcome!&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><h2 id="自定义转换器"><a href="#自定义转换器" class="headerlink" title="自定义转换器"></a>自定义转换器</h2><p> 以 Unity 的 Vector3 为例<br><strong>场景：Json.NET 默认无法序列化 Unity 的 Vector3，需要自定义转换逻辑。</strong><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json.Linq;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 编写自定义转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Vector3Converter</span> : <span class="title">JsonConverter</span>&lt;<span class="title">Vector3</span>&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, Vector3 <span class="keyword">value</span>, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 将 Vector3 序列化为字符串 &quot;x,y,z&quot;</span></span><br><span class="line">        writer.WriteValue(<span class="string">$&quot;<span class="subst">&#123;<span class="keyword">value</span>.x&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.y&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.z&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Vector3 <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, Vector3 existingValue, <span class="built_in">bool</span> hasExistingValue, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 从字符串解析回 Vector3</span></span><br><span class="line">        <span class="built_in">string</span> str = (<span class="built_in">string</span>)reader.Value;</span><br><span class="line">        <span class="built_in">string</span>[] parts = str.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Vector3(</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">0</span>]),</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">1</span>]),</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">2</span>])</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransformData</span> &#123;</span><br><span class="line">    [<span class="meta">JsonConverter(typeof(Vector3Converter))</span>] <span class="comment">// 标记使用自定义转换器</span></span><br><span class="line">    <span class="keyword">public</span> Vector3 Position;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Vector3 Rotation; <span class="comment">// 未标记，会尝试默认序列化（可能失败）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line">TransformData data = <span class="keyword">new</span> TransformData &#123;</span><br><span class="line">    Position = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line">    Rotation = <span class="keyword">new</span> Vector3(<span class="number">90</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局注册转换器（避免每个字段标记）</span></span><br><span class="line">JsonConvert.DefaultSettings = () =&gt; <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    Converters = &#123; <span class="keyword">new</span> Vector3Converter() &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(data, Formatting.Indented);</span><br><span class="line">Console.WriteLine(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化</span></span><br><span class="line">TransformData loadedData = JsonConvert.DeserializeObject&lt;TransformData&gt;(json);</span><br></pre></td></tr></table></figure></p><p>输出结果：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,2,3&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义转换器生效</span></span><br><span class="line">  <span class="attr">&quot;Rotation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>         <span class="comment">// 未使用转换器，Json.NET 尝试默认序列化（可能抛出错误！）</span></span><br><span class="line">    <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">90.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;z&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><h1 id="在-Unity-中的注意事项"><a href="#在-Unity-中的注意事项" class="headerlink" title="在 Unity 中的注意事项"></a>在 Unity 中的注意事项</h1><p><strong>性能问题</strong><br>Newtonsoft Json 比 JsonUtility 慢，尤其在移动设备上。<br>优化建议：<br>避免频繁序列化大型对象（如每帧调用）。<br>使用 StringBuilder 或缓存减少 GC 压力。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是-Newtonsoft-Json&quot;&gt;&lt;a href=&quot;#什么是-Newtonsoft-Json&quot; class=&quot;headerlink&quot; title=&quot;什么是 Newtonsoft Json&quot;&gt;&lt;/a&gt;什么是 Newtonsoft Json&lt;/h1&gt;&lt;p&gt;Js</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>5.LitJson</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/</id>
    <published>2025-03-27T08:53:20.000Z</published>
    <updated>2025-03-27T11:19:35.144Z</updated>
    
    <content type="html"><![CDATA[<div class="table-container"><table><thead><tr><th>特性</th><th>JsonUtility</th><th>Newtonsoft</th><th>LitJSON</th></tr></thead><tbody><tr><td>安装方式</td><td>内置</td><td>Package</td><td>手动DLL</td></tr><tr><td>序列化速度</td><td>中等</td><td>较慢</td><td>最快</td></tr><tr><td>复杂类型支持</td><td>有限</td><td>完善</td><td>中等</td></tr><tr><td>移动端适用性</td><td>优秀</td><td>较重</td><td>最佳</td></tr><tr><td>自定义格式化</td><td>基础</td><td>强大</td><td>中等</td></tr><tr><td>Unity类型原生支持</td><td>优秀</td><td>需扩展</td><td>需转换</td></tr></tbody></table></div><h1 id="LitJson是什么"><a href="#LitJson是什么" class="headerlink" title="LitJson是什么"></a>LitJson是什么</h1><p>LitJson 是一个第三方库，用于处理Json的序列化和反序列化。它是C#编写的，体积小、速度快、易于使用。可以很容易地嵌入到我们的代码中，只需要将LitJson代码拷贝到工程中即可。</p><h1 id="获取LitJson"><a href="#获取LitJson" class="headerlink" title="获取LitJson"></a>获取LitJson</h1><p>导入方式<br>前往LitJson官网 <a href="https://litjson.net/">LitJSON - Home</a>下载LitJSON源码<br>将LitJSON文件夹放入Assets/Plugins<br>添加命名空间：<code>using LitJson;</code></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327165804148.png" alt=""><br>只要代码 其他图片什么的都可以删掉<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327165906956.png" alt=""></p><h1 id="使用LitJson"><a href="#使用LitJson" class="headerlink" title="使用LitJson"></a>使用LitJson</h1><p>相对JsonUtlity不需要加特性。<br>不能序列化私有变量。<br>支持字典类型，字典的键 建议都是字符串，因为Json的特点 Json中的键会加上双引号。<br>需要引用LitJson命名空间。<br>LitJson可以准确的保存null类型。<br>类结构需要无参构造函数，否则反序列化时报错。<br>字典虽然支持，但是键在使用为数值时会有问题，需要使用字符串类型。<br>LitJson可以直接读取数据集合<br>文本编码格式需要是UTF-8，否则无法加载</p><p>序列化<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据类定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Weapon</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为JSON</span></span><br><span class="line">Weapon sword = <span class="keyword">new</span> Weapon &#123; name = <span class="string">&quot;龙焰剑&quot;</span>, attack = <span class="number">150</span> &#125;;</span><br><span class="line"><span class="built_in">string</span> jsonStr = JsonMapper.ToJson(sword);     <span class="comment">// 这里也可以用JsonData来接受</span></span><br><span class="line">Debug.Log(jsonStr); <span class="comment">// 输出：&#123;&quot;name&quot;:&quot;龙焰剑&quot;,&quot;attack&quot;:150&#125;</span></span><br><span class="line"></span><br><span class="line">File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>, jsonStr);</span><br></pre></td></tr></table></figure></p><p>反序列化<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonStr = <span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;治疗药剂\&quot;,\&quot;count\&quot;:3&#125;&quot;</span>;</span><br><span class="line"><span class="comment">// string jsonStr = File.ReadAllText(Application.persistentDataPath + &quot;/Test.json&quot;);</span></span><br><span class="line">JsonData data = JsonMapper.ToObject(jsonStr); </span><br><span class="line"><span class="comment">//通过泛型转换 更加的方便 建议使用这种方式 </span></span><br><span class="line">Weapon w = JsonMapper.ToObject&lt;Weapon&gt;(jsonStr);</span><br><span class="line"></span><br><span class="line">Item potion = <span class="keyword">new</span> Item &#123;</span><br><span class="line">    itemName = (<span class="built_in">string</span>)data[<span class="string">&quot;name&quot;</span>],</span><br><span class="line">    quantity = (<span class="built_in">int</span>)data[<span class="string">&quot;count&quot;</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>LitJson可以直接读取数据集合</strong><br>文本编码格式需要是UTF-8，否则无法加载<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> jsonStr = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">RoleInfo[] arr = JsonMapper.ToObject&lt;RoleInfo[]&gt;(jsonStr);</span><br><span class="line">List&lt;RoleInfo&gt; list = JsonMapper.ToObject&lt;List&lt;RoleInfo&gt;&gt;(jsonStr);</span><br></pre></td></tr></table></figure></p><p>可以直接读字典对象<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dic.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name2&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name3&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name4&quot;</span><span class="punctuation">:</span><span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonStr = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/Dic.json&quot;</span>);</span><br><span class="line">Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; dic = JsonMapper.ToObject&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;&gt;(jsonStr);</span><br></pre></td></tr></table></figure></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>有一个玩家数据类,请为该类写一个方法结合LitJson知识点,完成对象的序列化和反序列化<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327191538288.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id;   <span class="comment">// 物品ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> num;  <span class="comment">// 物品数量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item2</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item2</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInfo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;                  <span class="comment">// 玩家姓名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> atk;                      <span class="comment">// 攻击力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> def;                      <span class="comment">// 防御力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;              <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> roundSpeed;            <span class="comment">// 回合速度</span></span><br><span class="line">    <span class="keyword">public</span> Item weapon;                   <span class="comment">// 武器</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; listInt;            <span class="comment">// 整型列表</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Item2&gt; itemList;         <span class="comment">// 物品列表</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, Item2&gt; itemDic2;  <span class="comment">// 字典</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerInfo2</span>()</span> &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson05_</span>练习题 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建玩家信息对象</span></span><br><span class="line">        PlayerInfo2 player = <span class="keyword">new</span> PlayerInfo2();</span><br><span class="line">        player.name = <span class="string">&quot;唐老狮&quot;</span>;</span><br><span class="line">        player.atk = <span class="number">11</span>;</span><br><span class="line">        player.def = <span class="number">5</span>;</span><br><span class="line">        player.moveSpeed = <span class="number">20.5f</span>;</span><br><span class="line">        player.roundSpeed = <span class="number">21.4</span>;</span><br><span class="line">        player.weapon = <span class="literal">null</span>;</span><br><span class="line">        player.listInt = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        player.itemList = <span class="keyword">new</span> List&lt;Item2&gt;() &#123; <span class="keyword">new</span> Item2(<span class="number">1</span>, <span class="number">99</span>), <span class="keyword">new</span> Item2(<span class="number">2</span>, <span class="number">44</span>) &#125;;</span><br><span class="line">        player.itemDic2 = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, Item2&gt;() &#123; &#123; <span class="string">&quot;1&quot;</span>, <span class="keyword">new</span> Item2(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="string">&quot;2&quot;</span>, <span class="keyword">new</span> Item2(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        SaveData(player, <span class="string">&quot;PlayerInfo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        PlayerInfo2 p = LoadData(<span class="string">&quot;PlayerInfo2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params">PlayerInfo2 data, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = JsonMapper.ToJson(data);</span><br><span class="line"></span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将JSON字符串写入指定路径的文件中</span></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>, jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlayerInfo2 <span class="title">LoadData</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 读取JSON文件内容</span></span><br><span class="line">        <span class="built_in">string</span> jsonStr = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将JSON字符串反序列化为对象</span></span><br><span class="line">        <span class="keyword">return</span> JsonMapper.ToObject&lt;PlayerInfo2&gt;(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;JsonUtility&lt;/th&gt;
&lt;th&gt;Newtonsoft&lt;/th&gt;
&lt;th&gt;LitJSON&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbo</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>4.JsonUtility</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/</id>
    <published>2025-03-27T07:44:07.000Z</published>
    <updated>2025-03-27T11:02:18.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JsonUtlity是什么"><a href="#JsonUtlity是什么" class="headerlink" title="JsonUtlity是什么"></a>JsonUtlity是什么</h1><p>JsonUtlity 是Unity自带的用于解析Json的公共类。<br>Unity内置了<code>JsonUtility</code>，虽然功能相对简单，但对于大多数基本需求已经足够。如果需要更强大的功能，可以使用第三方库如<code>Newtonsoft.Json</code>。</p><p>JsonUtlity可以:<br>将内存中对象序列化为Json格式的字符串。<br>将Json字符串反序列化为类对象。</p><h1 id="在文件中存读字符串"><a href="#在文件中存读字符串" class="headerlink" title="在文件中存读字符串"></a>在文件中存读字符串</h1><p>File.WriteAllText方法 存储字符串到指定路径文件中<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//File类中的WriteAllText方法 存储字符串到指定路径文件中</span></span><br><span class="line"><span class="comment">//第一个参数 填写的是 存储的路径</span></span><br><span class="line"><span class="comment">//第二个参数 填写的是 存储的字符串内容</span></span><br><span class="line"><span class="comment">//注意：第一个参数 必须是存在的文件路径 如果没有对应文件夹 会报错</span></span><br><span class="line">File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>, <span class="string">&quot;存储的json文件&quot;</span>);</span><br><span class="line">print(Application.persistentDataPath);</span><br></pre></td></tr></table></figure></p><p>File.ReadAllText方法 在指定路径文件中读取字符串<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//File类中的ReadAllText方法 在指定路径文件中读取字符串</span></span><br><span class="line"><span class="built_in">string</span> str = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>);</span><br><span class="line">print(str);</span><br></pre></td></tr></table></figure></p><h1 id="使用JsonUtility序列化"><a href="#使用JsonUtility序列化" class="headerlink" title="使用JsonUtility序列化"></a>使用JsonUtility序列化</h1><p><strong>注意</strong><br>float序列化时看起来会有一些误差。<br>自定义类需要加上序列化特性<code>[System.Serializable]</code>。<br>想要序列化私有变量，需要加上特性<code>[SerializeField]</code>。<br>JsonUtility不支持字典。<br>JsonUtlity存储null对象不会是null，而是默认值的数据。<br>如果Json中数据少了，读取到内存中类对象中时不会报错。<br>JsonUtlity不能直接将数据反序列化为数据集合。<br>Json文档编码格式必须是UTF-8。</p><p>File存读字符串的方法ReadAllText和WriteAllText。<br>JsonUtlity提供的序列化反序列化方法ToJson和FromJson。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> playerName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> level;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> health;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        GameData data = <span class="keyword">new</span> GameData();</span><br><span class="line">        data.playerName = <span class="string">&quot;Player1&quot;</span>;</span><br><span class="line">        data.level = <span class="number">5</span>;</span><br><span class="line">        data.health = <span class="number">100.0f</span>;</span><br><span class="line">        <span class="built_in">string</span> json = JsonUtility.ToJson(data);</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/savefile.json&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="built_in">string</span> path = Application.persistentDataPath + <span class="string">&quot;/savefile.json&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            json = File.ReadAllText(path);</span><br><span class="line">            GameData loadedData = JsonUtility.FromJson&lt;GameData&gt;(json);</span><br><span class="line">            Debug.Log(loadedData.playerName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>JsonUtlity无法直接读取数据集合，比如直接读取List或数组会报错。</strong><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JsonUtlity无法直接读取数据集合 比如直接读取List或数组 会报错</span></span><br><span class="line"><span class="built_in">string</span> jsonStr1 = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">List&lt;RoleInfo&gt; roleInfoList = JsonUtility.FromJson&lt;List&lt;RoleInfo&gt;&gt;(jsonStr1);<span class="comment">//报错</span></span><br></pre></td></tr></table></figure><p>可以外层套<code>&#123;&#125;</code>来做就不会报错<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// RoleInfo2.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;RoleInfo&gt; list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> jsonStr2 = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo2.json&quot;</span>);</span><br><span class="line">print(jsonStr2);</span><br><span class="line">RoleData data = JsonUtility.FromJson&lt;RoleData&gt;(jsonStr2);</span><br></pre></td></tr></table></figure></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>有一个玩家数据类,为该类写一个方法结合JsonUtility知识点,完成对象的序列化和反序列化<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/file-20250327164829008.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 物品类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id;       <span class="comment">// 物品ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> num;      <span class="comment">// 物品数量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家信息类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;                      <span class="comment">// 玩家姓名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> atk;                          <span class="comment">// 玩家攻击力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> def;                          <span class="comment">// 玩家防御力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;                  <span class="comment">// 玩家移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> roundSpeed;                <span class="comment">// 玩家旋转速度</span></span><br><span class="line">    <span class="keyword">public</span> Item weapon;                      <span class="comment">// 玩家武器信息</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; listInt;                <span class="comment">// 整型列表</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Item&gt; itemList;              <span class="comment">// 物品列表</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">int</span>, Item&gt; itemDic;    <span class="comment">// 物品字典，以物品ID作为键</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, Item&gt; itemDic2;<span class="comment">// 物品字典，以字符串型的物品ID作为键</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> privateI = <span class="number">1</span>;                <span class="comment">// 私有整数字段</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">int</span> protectedI = <span class="number">2</span>;            <span class="comment">// 受保护整数字段</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson04_</span>练习题 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerInfo player = <span class="keyword">new</span> PlayerInfo();</span><br><span class="line">        player.name = <span class="string">&quot;老狮&quot;</span>;</span><br><span class="line">        player.atk = <span class="number">11</span>;</span><br><span class="line">        player.def = <span class="number">5</span>;</span><br><span class="line">        player.moveSpeed = <span class="number">20.5f</span>;</span><br><span class="line">        player.roundSpeed = <span class="number">21.4f</span>;</span><br><span class="line"></span><br><span class="line">        player.weapon = <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        player.listInt = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemList = <span class="keyword">new</span> List&lt;Item&gt;() &#123; <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">99</span>), <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">44</span>) &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemDic = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">int</span>, Item&gt;() &#123; &#123; <span class="number">1</span>, <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="number">2</span>, <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemDic2 = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, Item&gt;() &#123; &#123; <span class="string">&quot;1&quot;</span>, <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="string">&quot;2&quot;</span>, <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        SaveData(player, <span class="string">&quot;PlayerInfo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        PlayerInfo player2 = LoadData(<span class="string">&quot;PlayerInfo&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params">PlayerInfo player, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = JsonUtility.ToJson(player);</span><br><span class="line"></span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>, jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlayerInfo <span class="title">LoadData</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> JsonUtility.FromJson&lt;PlayerInfo&gt;(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JsonUtlity是什么&quot;&gt;&lt;a href=&quot;#JsonUtlity是什么&quot; class=&quot;headerlink&quot; title=&quot;JsonUtlity是什么&quot;&gt;&lt;/a&gt;JsonUtlity是什么&lt;/h1&gt;&lt;p&gt;JsonUtlity 是Unity自带的用于解析Js</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>3.Excel转Json</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/</id>
    <published>2025-03-27T07:25:57.000Z</published>
    <updated>2025-03-27T07:35:09.697Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152651887.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152704790.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152918741.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152943694.png" alt=""><br><a href="https://www.bejson.com/json/col2json/">在线Excel、CSV转JSON格式-BeJSON.com</a></p><p>直接复制excel表到网页上，点击转换<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153426394.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153306000.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153506162.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152651887.p</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>2.Json基本语法</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2025-03-27T07:06:35.000Z</published>
    <updated>2025-03-27T07:24:13.969Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数据类型</strong><br>JSON支持以下几种数据类型：</p><ul><li><strong>字符串</strong>：<code>&quot;name&quot;: &quot;Unity&quot;</code></li><li><strong>数字</strong>：<code>&quot;version&quot;: 2021.3</code></li><li><strong>布尔值</strong>：<code>&quot;isActive&quot;: true</code></li><li><strong>数组</strong>：<code>&quot;features&quot;: [&quot;2D&quot;, &quot;3D&quot;, &quot;VR&quot;]</code></li><li><strong>对象</strong>：<code>&quot;settings&quot;: &#123;&quot;resolution&quot;: &quot;1920x1080&quot;, &quot;fullscreen&quot;: true&#125;</code></li><li><strong>null</strong>：<code>&quot;error&quot;: null</code><br><strong>JSON对象</strong><br>JSON对象由大括号 <code>&#123;&#125;</code> 包裹，键值对用逗号分隔。键名必须用双引号括起来，值可以是任意JSON数据类型。<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unity&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">2021.3</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></li></ul><p><strong>JSON数组</strong><br>JSON数组由中括号 <code>[]</code> 包裹，元素用逗号分隔。数组中的元素可以是任意JSON数据类型。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="string">&quot;2D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;3D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VR&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure></p><p><strong>嵌套结构</strong><br>JSON支持对象和数组的嵌套，可以在对象中嵌套数组，数组中也可以嵌套对象。<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unity&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;2D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;3D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VR&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;resolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1920x1080&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fullscreen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure></p><p>Json格式是一种键值对结构<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151901992.png" alt=""></p><p>语法规则<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151846824.png" alt=""></p><p>Json数据和类对象的对应关系<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151830820.png" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//大括号包裹的代表一个对象</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//冒号 代表的是 键值对的对应关系</span></span><br><span class="line">    <span class="comment">//逗号 就是分割成员变量的间隔符</span></span><br><span class="line">    <span class="comment">//Json当中的键一定要用 双引号包裹</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;nihao&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//用于测试的 浮点类型 是支持浮点数的</span></span><br><span class="line">    <span class="attr">&quot;testF&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//中括号代表数组</span></span><br><span class="line">    <span class="attr">&quot;ids&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;students&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小红&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小明&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小强&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;home&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;成都&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;street&quot;</span><span class="punctuation">:</span><span class="string">&quot;春熙路&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;son&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//字典的话 键会变成双引号 以后转换时要注意！！！</span></span><br><span class="line">    <span class="attr">&quot;dic&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;1&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="string">&quot;234&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327152009320.png" alt=""></p><p>请用Json语法描述一个玩家对象类，结构如下图<br><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327152350050.png" alt=""></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;黄先生&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;atk&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;def&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moveSpeed&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;roundSpeed&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;weapon&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//如果没有武器 可以直接值为null</span></span><br><span class="line">    <span class="attr">&quot;listInt&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemList&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">99</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">55</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemDic&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span> <span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;3&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemDic2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;privateI&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;protectedI&quot;</span><span class="punctuation">:</span><span class="number">99</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;br&gt;JSON支持以下几种数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符串&lt;/strong&gt;：&lt;code&gt;&amp;quot;name&amp;quot;: &amp;quot;Unity&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;str</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>1.Json基础知识概述</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-27T06:50:35.000Z</published>
    <updated>2025-03-27T12:41:50.441Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>什么是JSON？</strong><ul><li>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。</li><li>易于人阅读和编写，同时也易于机器解析和生成。</li></ul></li><li><strong>JSON的用途</strong><ul><li>数据交换、配置文件、API通信等。</li></ul></li><li><strong>JSON的基本结构</strong><ul><li>键值对、数组、嵌套对象。</li></ul></li></ul><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145109995.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145121243.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145136272.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145149573.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145203555.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145241866.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145257070.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145303913.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204106017.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204113552.png" alt=""></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204140111.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;什么是JSON？&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。&lt;/li&gt;
&lt;li&gt;易于人阅读和编写，同时也易于机器解析和生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>68.unity核心总结</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/</id>
    <published>2025-03-23T15:26:43.000Z</published>
    <updated>2025-03-24T13:17:09.471Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232646095.png" alt=""></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232759993.png" alt=""></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232818871.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/fil</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
  </entry>
  
</feed>
