<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-03-20T06:08:12.186Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>46.Model模型页签</title>
    <link href="http://example.com/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/"/>
    <id>http://example.com/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/</id>
    <published>2025-03-20T05:43:26.000Z</published>
    <updated>2025-03-20T06:08:12.186Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/file-20250320134456662.png" alt="" /></p><h1 id="model模型页签是设置什么的"><a class="markdownIt-Anchor" href="#model模型页签是设置什么的"></a> Model模型页签是设置什么的</h1><p>该页签主要是用于设置模型的各种属性，例如模型比例、是否导入模型中的摄像机和光源、网格压缩方式等等相关信息。<br />修改模型中存储的各种元素和属性最终会影响在Unity中使用模型时的一些表现。<br /><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/file-20250320134528986.png" alt="" /></p><h1 id="model-模型页签"><a class="markdownIt-Anchor" href="#model-模型页签"></a> Model 模型页签</h1><p>点击查看下图svg<br /><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/Model%20%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE.png" alt="" /></p><h2 id="scene-场景相关设置"><a class="markdownIt-Anchor" href="#scene-场景相关设置"></a> Scene 场景相关设置</h2><p><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/file-20250320140014815.png" alt="" /></p><h3 id="scale-factor-缩放系数"><a class="markdownIt-Anchor" href="#scale-factor-缩放系数"></a> Scale Factor 缩放系数</h3><p>当模型中的比例不符合项目中的预期比例时<br />可以修改此值来改变该模型的全局比例<br />Unity的物理系统希望游戏世界中的1米在导入模型文件中为1个单位</p><h3 id="convert-units-转换单位"><a class="markdownIt-Anchor" href="#convert-units-转换单位"></a> Convert Units 转换单位</h3><p>启用可将模型文件中定义的模型比例转换为Unity的比例<br />不同的格式的比例如下<br />.fbx .max .jas = 0.01<br />.3ds = 0.1<br />.mb .ma .lxo .dxf .blend .dae = 1</p><h3 id="import-blendshapes-导入blendshapes"><a class="markdownIt-Anchor" href="#import-blendshapes-导入blendshapes"></a> Import BlendShapes* 导入BlendShapes</h3><p>是否允许Unity随网格一起导入混合形状<br />当导入包含混合形状的网格时，将使用Skinned MeshRenderer组件<br />注意：<br />1.导入混合形状发现需要在FBX文件中具有平滑组<br />2.如果想要导入具有法线的混合形状<br />把下方的Blend Shape Normals属性设置为Import，将使用FBX文件的发现<br />或者<br />把下方的Blend Shape Normals属性设置为Calculate，Unity使用相同的逻辑来计算网格和混合形状上的法线</p><h3 id="import-visibility-导入可见性"><a class="markdownIt-Anchor" href="#import-visibility-导入可见性"></a> Import Visibility* 导入可见性</h3><p>是否导入可见性<br />开启后可以从FBX文件中读取可见性属性。<br />比如模型动作里 有些动作是要隐藏模型形象的，开启后才会生效</p><p>一些3D建模软件对可见性属性不支持或者有限制<br />比如Maya和Blender就对可见性有限制<br />所以一般这个选项要根据你使用的建模软件决定<br />一般可以不勾选</p><h3 id="import-cameras-导入相机"><a class="markdownIt-Anchor" href="#import-cameras-导入相机"></a> Import Cameras* 导入相机</h3><p>是否导入摄像机<br />是否把FBX文件中的摄像机也导入，但是Unity支持FBX中摄像机的部分属性，比如正交或透视，是否支持动画，物理属性，远近裁剪面等等<br />一般不勾选</p><h3 id="import-lights-导入灯光"><a class="markdownIt-Anchor" href="#import-lights-导入灯光"></a> Import Lights* 导入灯光</h3><p>是否导入光源<br />支持的光源类型<br />全局光、聚光灯、方向光、面光源<br />支持的光源属性<br />范围、颜色、强度、角度<br />一般不使用</p><h3 id="preserve-hierarchy-保持层次结构"><a class="markdownIt-Anchor" href="#preserve-hierarchy-保持层次结构"></a> Preserve Hierarchy 保持层次结构</h3><p>始终创建一个显示预制体根<br />通常在导入的时候，FBX会将模型中的空根节点进行优化去掉它<br />但是如果多个FBX文件中包含同一层级的空跟对象，可以勾选它来保留他们</p><p>主要作用是：<br />比如有两个fbx文件，1包含骨骼和网格，2只包含骨骼动画。<br />如果不启用它导入2，那么Unity将剥离根节点，会让层级不匹配让动画不能正常播放</p><h3 id="sort-hierarchy-by-name-按名称对层级视图排序"><a class="markdownIt-Anchor" href="#sort-hierarchy-by-name-按名称对层级视图排序"></a> Sort Hierarchy By Name* 按名称对层级视图排序</h3><p>在层级窗口中根据名字排序子物体<br />如果不启用，会保留FBX文件中定义的层级顺序</p><h2 id="meshes-网格相关设置"><a class="markdownIt-Anchor" href="#meshes-网格相关设置"></a> Meshes 网格相关设置</h2><p><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/file-20250320140218506.png" alt="" /></p><h3 id="mesh-compression-网格压缩"><a class="markdownIt-Anchor" href="#mesh-compression-网格压缩"></a> Mesh Compression 网格压缩</h3><p>设置压缩比级减小网格的文件大小<br />提高压缩比会降低网格的精度</p><p>调整该参数可以优化游戏包的大小</p><ul><li>Off：不使用压缩</li><li>Low：低压缩比</li><li>Medium：中等压缩比</li><li>High：高压缩比</li></ul><h3 id="readwrite-enabled-是否开启读写网格信息"><a class="markdownIt-Anchor" href="#readwrite-enabled-是否开启读写网格信息"></a> Read/Write Enabled 是否开启读写网格信息</h3><p>如果开启，Unity将网格数据传给GPU后，在CPU中还会保留可寻址内存，意味着我们可以通过代码访问网格数据进行处理<br />如果不开启，Unity将网格数据传个GPU后，会将CPU中的可寻址内存中网格数据删除，我们无法再得到网格数据</p><p>开启时，会增加内存占用，关闭时，可以节约运行时内存使用量<br />何时开启？<br />1.需要在代码中读取或写入网格数据<br />2.需要运行时合并网格<br />3.需要使用网格碰撞器时<br />4.需要运行时使用NavMesh构建组件来烘焙NavMesh时<br />等等</p><h3 id="optimize-mesh-优化网格"><a class="markdownIt-Anchor" href="#optimize-mesh-优化网格"></a> Optimize Mesh* 优化网格</h3><p>确定三角形在网格中列出的顺序以提高GPU性能</p><ul><li>Nothing：无优化</li><li>Everything：对顶点以及多边形顶点索引进行重新排序</li><li>Polygon Order：仅对多边形重新排序</li><li>Vertex Order：仅对顶点重新排序</li></ul><h3 id="generate-colliders-生成碰撞器"><a class="markdownIt-Anchor" href="#generate-colliders-生成碰撞器"></a> Generate Colliders* 生成碰撞器</h3><p>启用后会自动附加网格碰撞器的情况下导入你的网格<br />建议不移动的环境几何体可以开启它，但是需要移动的几何体建议不要开启它</p><h2 id="geometry-几何体相关设置"><a class="markdownIt-Anchor" href="#geometry-几何体相关设置"></a> Geometry 几何体相关设置</h2><p><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/file-20250320140658557.png" alt="" /></p><h3 id="keep-quads-保留四边形"><a class="markdownIt-Anchor" href="#keep-quads-保留四边形"></a> Keep Quads* 保留四边形</h3><p>启用后，Unity不会将4个顶点的多边形转为三角形<br />当使用曲面细分着色器时可能需要启用此选项，因为四边形的曲面周色漆比多边形的效率更高</p><p>Unity 可以导入任意类型的多边形（三角形到 N 边形）。顶点数量超过四个的多边形将始终转换为三角形，无论此设置如何。<br />如果一个网格有四边形和三角形（或者转换为三角形的 N 边形），那么 Unity 会创建两个子网格来分离四边形和三角形。每个子网格要么只包含三角形，要么只包含四边形。</p><h3 id="weld-vertices-焊接顶点"><a class="markdownIt-Anchor" href="#weld-vertices-焊接顶点"></a> Weld Vertices 焊接顶点</h3><p>合并在空间中共享相同位置的顶点，前提是这些顶点总体上共享相同的属性（UV，法线，切线等等）<br />开启后相当于会通过减少网格的总数量来优化网格的顶点计数</p><p>一般都开启，除非你想有意保留这些重复顶点，之后想通过代码去获取他们来进行处理</p><h3 id="index-format"><a class="markdownIt-Anchor" href="#index-format"></a> Index Format</h3><p>网格索引缓冲区的大小</p><ul><li>一般都选择16bits，Auto可以会默认选择16bits<br />只有在必要时使用32bit<br />16bits即通用又节约内存</li></ul><h3 id="legacy-blend-shape-normals"><a class="markdownIt-Anchor" href="#legacy-blend-shape-normals"></a> Legacy Blend Shape Normals</h3><p>启用后会基于Smoothing Angle值来计算法线</p><h3 id="normals"><a class="markdownIt-Anchor" href="#normals"></a> Normals</h3><p>定义如何计算法线</p><ul><li>Import：从文件中导入法线，如果文件中不包含发现信息，将使用Calculate模式计算法线</li><li>Calculate：根据Normals Mode、Smoothness Source和Smoothing Angle属性来计算发现</li><li>None：不计算法线</li></ul><h3 id="blend-shape-normals"><a class="markdownIt-Anchor" href="#blend-shape-normals"></a> Blend Shape Normals</h3><p>定义如何为混合形状计算法线<br />只有当Legacy Blend Shape Normals禁用时出现</p><h3 id="normals-mode"><a class="markdownIt-Anchor" href="#normals-mode"></a> Normals Mode</h3><p>计算法线的模式，只有当上方的Normals设置为Import和Calculate才会出现</p><ul><li>Unweighted Legacy：2017.1版本之前计算法线的方式，如果是在该版本之前导入的所有FBX模型，默认设置为该模式</li><li>Unweighted：法线不加权重</li><li>Area Weighted：法线按照图面面积加权重</li><li>Angle Weighted：法线按照每个图面上的顶角加权重</li><li>Area And Angle Weighted：法线按照每个图面上的图面面积和顶角加权重，这是默认选项</li></ul><h3 id="smoothness-source"><a class="markdownIt-Anchor" href="#smoothness-source"></a> Smoothness Source</h3><p>如何确定平滑，哪些边应该平滑，哪些应该粗糙<br />只有当Legacy Blend Shape Normals 禁用时出现</p><ul><li>Prefer Smoothing Groups：尽可能使用模型文件中的平滑组</li><li>From Smoothing Groups：仅使用模型文件中的平滑组</li><li>From Angle：使用Smoothing Angle值来确定哪些边应该是平滑的</li><li>None：不拆分硬边的任何顶点</li></ul><h3 id="smoothing-angle"><a class="markdownIt-Anchor" href="#smoothing-angle"></a> Smoothing Angle</h3><p>控制是否为硬边拆分顶点<br />通常，值越大，产生的顶点越少<br />仅当Normals设置为Calculate时才可用<br />注意：此设置仅用于非常光滑的或者非常复杂的模型，否则，最好在3D建模软件中手动平滑然后导入，始终建议建模的时候就做好，更加准确</p><h3 id="tangents"><a class="markdownIt-Anchor" href="#tangents"></a> Tangents</h3><p>定义如何导入或计算顶点切线<br />仅当Normals设置为Calculate或Import时，此属性才可用</p><ul><li>Import：如果Normals设置为Import，则从FBX文件中导入顶点切线，如果网格没有切线，那么将无法使用法线贴图着色器</li><li>Calculate Legacy：使用旧版算法计算切线</li><li>Calculate Legacy With Split Tangents：使用旧版算法计算切线，并在UV图表上进行拆分。如果网格上的接缝碰坏了法线贴图光照，请使用此属性</li><li>Calculate Mikktspace：使用米克特空间计算切线</li><li>None：不导入顶点切线，网格没有切线，则无法使用法线贴图着色器</li></ul><h3 id="swap-uvs在网格中交换uv通道-如果漫反射纹理使用光照贴图中的uv请使用此选项"><a class="markdownIt-Anchor" href="#swap-uvs在网格中交换uv通道-如果漫反射纹理使用光照贴图中的uv请使用此选项"></a> Swap UVs：在网格中交换UV通道。如果漫反射纹理使用光照贴图中的UV，请使用此选项</h3><h3 id="generate-lightmap-uvs为光照贴图创建第二个uv通道"><a class="markdownIt-Anchor" href="#generate-lightmap-uvs为光照贴图创建第二个uv通道"></a> Generate Lightmap UVs：为光照贴图创建第二个UV通道</h3><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/46.Model%E6%A8%A1%E5%9E%8B%E9%A1%B5%E7%AD%BE/fil</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="模型导入相关" scheme="http://example.com/tags/%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>45.模型导入概述</title>
    <link href="http://example.com/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/45.%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/45.%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-20T05:33:30.000Z</published>
    <updated>2025-03-20T05:42:42.590Z</updated>
    
    <content type="html"><![CDATA[<h1 id="unity中使用的模型"><a class="markdownIt-Anchor" href="#unity中使用的模型"></a> Unity中使用的模型</h1><p>Unity支持很多模型格式，例如：<br />.fbx<br />.dae<br />.3ds<br />.dxf<br />.obj 等等<br />99%的模型通常不是在Unity中制作的，而是美术人员在建模软件中制作，如 3DMax、Maya 等等。</p><p>美术人员制作完模型后，官方建议将模型导出为 <strong>FBX</strong> 格式再使用。<br />使用FBX模型格式的优势：</p><ol><li>减少不必要数据，提升导入效率。</li><li>不需要在每台计算机上安装建模软件的授权副本。</li><li>对Unity版本无要求，使用原始3D模型格式可能会因为版本不同导致错误或意外。</li></ol><p>如果美术同学不知道如何导出FBX格式的模型和导出规范，可以参考Unity官网文档或者进行搜索。美术同学在导出模型时需要注意：<br /><a href="https://docs.unity.cn/cn/2019.4/Manual/CreatingDCCAssets.html">在 Unity 外部创建资源 - Unity 手册</a><br />坐标轴，人物面朝向为Z轴正方向，Y轴正方向为头顶方向，X轴正方向为人物右侧。</p><h1 id="导入模型的基本流程"><a class="markdownIt-Anchor" href="#导入模型的基本流程"></a> 导入模型的基本流程</h1><ol><li>美术同学用3D建模软件制作好模型导出FBX格式模型资源。</li><li>程序将这些模型资源导入到Unity的资源文件夹中。</li><li>在Unity内部对这些模型进行基础设置——模型、骨骼、动作、材质。</li></ol><h1 id="如何在unity中设置模型相关内容"><a class="markdownIt-Anchor" href="#如何在unity中设置模型相关内容"></a> 如何在Unity中设置模型相关内容</h1><p>在Project窗口选中导入的模型。</p><p>在Inspector窗口进行相关设置，有4个页签分别是：<br />Model 模型页签<br />Rig 操纵（骨骼）页签<br />Animation 动画页签<br />Materials 材质纹理页签。</p><p>通过这4个页签对模型动作相关信息设置完成后，之后我们才能在场景中更好的使用这些模型资源。</p><p><img src="/2025/03/20/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/45.%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E6%A6%82%E8%BF%B0/file-20250320134238471.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;unity中使用的模型&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#unity中使用的模型&quot;&gt;&lt;/a&gt; Unity中使用的模型&lt;/h1&gt;
&lt;p&gt;Unity支持很多模型格式，例如：&lt;br /&gt;
.fbx&lt;br /&gt;
.dae&lt;br /&gt;</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="模型导入相关" scheme="http://example.com/tags/%E6%A8%A1%E5%9E%8B%E5%AF%BC%E5%85%A5%E7%9B%B8%E5%85%B3/"/>
    
  </entry>
  
  <entry>
    <title>44.Spine骨骼动画代码控制</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/</id>
    <published>2025-03-19T14:07:12.000Z</published>
    <updated>2025-03-19T14:37:41.792Z</updated>
    
    <content type="html"><![CDATA[<p>创建脚本挂载到spine对象上，声明一个SkeletonAnimation变量</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skeletonAnimation = <span class="keyword">this</span>.GetComponent&lt;SkeletonAnimation&gt;();</span><br></pre></td></tr></table></figure><h1 id="动画播放"><a class="markdownIt-Anchor" href="#动画播放"></a> 动画播放</h1><p><strong>方法一：直接改变SkeletonAnimation中的参数</strong></p><p>SkeletonAnimation.AnimationName变量 设置动画名<br />SkeletonAnimation.loop变量 设置动画是否循环</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">skeletonAnimation.loop = <span class="literal">false</span>;</span><br><span class="line">skeletonAnimation.AnimationName = <span class="string">&quot;jump&quot;</span>;</span><br></pre></td></tr></table></figure><p><strong>方法二（建议）：使用SkeletonAnimation动画状态改变函数</strong></p><p>SkeletonAnimation.AnimationState.SetAnimation方法 设置动画立即播放<br />SkeletonAnimation.AnimationState.AddAnimation方法 设置动画排队播放</p><p>Spine 动画系统里，动画轨道能够让你同时播放多个动画，并且可以对它们的混合、叠加等效果进行控制。每个轨道都可以独立播放一个动画，并且轨道之间可以相互影响，从而实现复杂的动画效果。<br />动画轨道索引：第一个参数指定了要在哪个轨道上播放动画。轨道索引从 0 开始计数，也就是 0 代表第一个轨道，1 代表第二个轨道，依此类推。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//马上播放 立即切换 传入 0 动画字符串 是否循环 </span></span><br><span class="line">skeletonAnimation.AnimationState.SetAnimation(<span class="number">0</span>, <span class="string">&quot;jump&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">skeletonAnimation.AnimationState.SetAnimation(<span class="number">0</span>, jumpName, <span class="literal">false</span>);</span><br><span class="line"><span class="comment">//排队播放 等待上个动画播完切换 传入 0 动画字符串 是否循环 延迟时间</span></span><br><span class="line">skeletonAnimation.AnimationState.AddAnimation(<span class="number">0</span>, <span class="string">&quot;walk&quot;</span>, <span class="literal">true</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><h1 id="转向"><a class="markdownIt-Anchor" href="#转向"></a> 转向</h1><p>SkeletonAnimation.skeleton.ScaleX变量 x的翻转</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 翻转spine对象</span></span><br><span class="line">skeletonAnimation.skeleton.ScaleX = <span class="number">-1</span>;</span><br></pre></td></tr></table></figure><h1 id="动画事件"><a class="markdownIt-Anchor" href="#动画事件"></a> 动画事件</h1><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319222310468.png" alt="" /></p><p>SkeletonAnimation.AnimationState.Start事件 动画开始播放时的事件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动画开始播放事件</span></span><br><span class="line">skeletonAnimation.AnimationState.Start += (t) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print( skeletonAnimation.AnimationName +  <span class="string">&quot;动画开始播放&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>SkeletonAnimation.AnimationState.End事件 动画中断或者清除时的事件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动画被中断或者清除事件</span></span><br><span class="line">skeletonAnimation.AnimationState.End += (t) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(skeletonAnimation.AnimationName + <span class="string">&quot;动画中断或者清除&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>SkeletonAnimation.AnimationState.Complete事件 动画播放完成时的事件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放完成事件</span></span><br><span class="line">skeletonAnimation.AnimationState.Complete += (t) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(skeletonAnimation.AnimationName + <span class="string">&quot;动画播放完成&quot;</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>SkeletonAnimation.AnimationState.Event事件 自定义事件<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319222402302.png" alt="" /><br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319222430730.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//做动画时添加的自定义事件事件 这里的事件是美术在spine软件做动画的时候假如添加了的话才会调用的</span></span><br><span class="line">skeletonAnimation.AnimationState.Event += (t, e) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(skeletonAnimation.AnimationName + <span class="string">&quot;自定义事件&quot;</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="便捷特性"><a class="markdownIt-Anchor" href="#便捷特性"></a> 便捷特性</h1><p>动画特性<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319222843993.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SpineAnimation</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> jumpName;</span><br><span class="line"><span class="comment">// 动画特性</span></span><br><span class="line"><span class="comment">// 添加了这个特性之后外部可以下拉框选择动画 设置变量为动画名字 切换动画直接拿变量的值就行 就不用自己看动画什么名字了</span></span><br><span class="line">skeletonAnimation.AnimationState.SetAnimation(<span class="number">0</span>, jumpName, <span class="literal">false</span>);</span><br></pre></td></tr></table></figure><p>骨骼特性<br />和上面动画特性差不多用法<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319223055348.png" alt="" /><br />不然就要去debug窗口找<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319223115223.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SpineBone</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> boneName;</span><br><span class="line"><span class="comment">// 快捷得到骨骼的名字 就不用在其他组件或者Debug窗口里找了</span></span><br></pre></td></tr></table></figure><p>插槽特性</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SpineSlot</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> slotName;</span><br><span class="line"><span class="comment">// 快捷得到插槽名</span></span><br></pre></td></tr></table></figure><p>附件特性</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">SpineAttachment</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> attachmentName;</span><br><span class="line"><span class="comment">// 快捷得到附件名</span></span><br></pre></td></tr></table></figure><h1 id="获取骨骼-设置插槽附件"><a class="markdownIt-Anchor" href="#获取骨骼-设置插槽附件"></a> 获取骨骼、设置插槽附件</h1><p>SkeletonAnimation.skeleton.FindBone方法 获取骨骼</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取骨骼</span></span><br><span class="line">Bone b = skeletonAnimation.skeleton.FindBone(boneName);</span><br></pre></td></tr></table></figure><p>SkeletonAnimation.skeleton.SetAttachment方法 设置插槽附件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置插槽附件 传入插槽名和附件名</span></span><br><span class="line">skeletonAnimation.skeleton.SetAttachment(slotName, attachmentName);</span><br></pre></td></tr></table></figure><h1 id="在ui中使用"><a class="markdownIt-Anchor" href="#在ui中使用"></a> 在UI中使用</h1><p>将_SkeletonData文件拖入场景中<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319223635939.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/44.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250319223740184.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;创建脚本挂载到spine对象上，声明一个SkeletonAnimation变量&lt;/p&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;b</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="Spine" scheme="http://example.com/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>43.Spine骨骼动画参数</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/</id>
    <published>2025-03-19T13:28:20.000Z</published>
    <updated>2025-03-19T14:04:19.377Z</updated>
    
    <content type="html"><![CDATA[<p>_Atlas：材质和.atlas.txt文件（位置）的引用配置文件<br />_Material：材质文件<br />_SkeletonData：json（骨骼）和_Atlas资源的引用配置文件</p><p><img src="42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319212124668.png" alt="" /></p><h1 id="spine骨骼动画参数相关"><a class="markdownIt-Anchor" href="#spine骨骼动画参数相关"></a> Spine骨骼动画参数相关</h1><p><a href="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0%E7%9B%B8%E5%85%B3.svg">点击放大思维导图</a></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0%E7%9B%B8%E5%85%B3.png" alt="" /></p><h2 id="_skeletondata骨骼数据文件"><a class="markdownIt-Anchor" href="#_skeletondata骨骼数据文件"></a> _SkeletonData骨骼数据文件</h2><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319213808181.png" alt="" /></p><ul><li>SkeletonData JSON:骨骼数据文件 （导入进Unity时会自动关联未导入前的json文件）</li><li>Scale：缩放大小 （Spine里的100是unity中的1）</li><li>Skeleton Data Modifiers*：骨骼数据修改器</li><li>Blend Mode Materizls*：混合模式材质</li><li>Apply Additive Material*：是否使用叠加材质</li><li>Additive Materials*：叠加材质</li><li>Multiply Materials*：相乘材质</li><li>Screen Materials*：屏幕材质</li><li>Atlas Assets：图集资源 （导入时会自动关联导入后生成的_Atalas文件）</li><li>Mix Settings：混合设置<br />怎么理解？当两个动画在切换的时候过渡会产生的效果就可以在这里设置相关的时间<ul><li>Animation State Data：动画状态数据<br />Default Mix Duration：默认混合持续时间</li><li>Add Custom Mix：添加自定义混合（可以指定某两个动画之间的持续时间）</li></ul></li></ul><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319214638470.png" alt="" /><br />Preview：预览</p><ul><li>Animations：动画</li><li>Setup Pose：设置姿势（还原到默认姿势）</li><li>Create Animation Reference Assets：创建动画参考资源 （一般也没必要）<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319215107888.png" alt="" /></li><li>Slots：插槽相关（一个部位有多张图片构成，可以在这预览）</li><li>SkeletonMecanim：骨骼机制<br />Controller：关联动画控制器</li><li>SkeletonMecanim是SkeletonAnimation的替代品，它不是必须的<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319215303817.png" alt="" /><br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319215342865.png" alt="" /></li></ul><p>Skin：蒙皮选择<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319215539666.png" alt="" /></p><h2 id="skeletonanimation骨骼动画脚本参数"><a class="markdownIt-Anchor" href="#skeletonanimation骨骼动画脚本参数"></a> SkeletonAnimation骨骼动画脚本参数</h2><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319215808516.png" alt="" /></p><ul><li>SkeletonData Asset：关联的骨骼动画信息</li><li>Animation Name：当前播放的动画名</li><li>Loop：是否循环</li><li>Initial Skin*：初始蒙皮<br />美术在制作时可能有几套蒙皮<br />一般情况下只有一套 不需要修改</li><li>Time Scale：时间缩放，值越大动画播放的越快</li><li>Root Motion*：是否添加根运动的脚本一般情况下不添加</li></ul><p><strong>高级选项（一般用不着）</strong><br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319220022929.png" alt="" /></p><ul><li><p>Initial Flip X/Y：初始翻转X和Y</p></li><li><p>Update When Invisible：不可见时是否更新</p><ul><li>Nothing：不更新<br />Only Animation Status：仅动画状态<br />Only Event Timelines：仅事件<br />Everything Except Mesh：除了网格其它都更新<br />Full Update：更新所有</li></ul></li><li><p>Use Single Submesh：使用单个子网格</p></li><li><p>Fix Draw Order：固定提取顺序</p></li><li><p>Immutable Triangles：不变三角形</p></li><li><p>Clear State On Disable：禁用时清楚状态</p></li><li><p>Separator Slot Names：分隔符插槽名称</p></li><li><p>Z Spacing：Z间距</p></li><li><p>Vertex Data：顶点数据</p><ul><li>PMA Vertex Colors：PMA顶点颜色</li><li>Tint Black：淡黑色</li><li>Add Normals：添加法线</li><li>Solve Tangents：求解切线</li></ul></li><li><p>Add Skeleton Utility：添加骨骼公共程序</p></li></ul><p><strong>Debug窗口也不常用</strong><br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319220229538.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/43.Spine%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E5%8F%82%E6%95%B0/file-20250319220250118.png" alt="" /></p><ul><li><p>Show Bone Names：显示骨骼名字</p></li><li><p>Show Paths：显示路径</p></li><li><p>Show Shapes：显示形状</p></li><li><p>Show Constraints：显示约束条件</p></li><li><p>ScaleX/Y：XY的缩放</p></li><li><p>RGBA：颜色</p></li><li><p>Bone：骨骼<br />Show Bone Names：显示骨骼名字</p></li><li><p>Slots：插槽</p></li><li><p>Constraints：约束条件</p></li><li><p>Draw Order and Separators：提取顺序和分离器相关</p></li><li><p>Events：事件</p></li><li><p>Data Counts：数据数量</p><ul><li>Bones：骨骼数量</li><li>Slots：插槽数量</li><li>Skins：蒙皮数量</li><li>Events：事件数量</li><li>IK Constraints：IK约束数量</li><li>Transform Constraints：位置约束数量</li><li>Path Constraints：路径约束数量</li></ul></li></ul><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;_Atlas：材质和.atlas.txt文件（位置）的引用配置文件&lt;br /&gt;
_Material：材质文件&lt;br /&gt;
_SkeletonData：json（骨骼）和_Atlas资源的引用配置文件&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;42.Spine%E4%BD%BF%E7</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="Spine" scheme="http://example.com/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>42.Spine使用骨骼动画文件</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/</id>
    <published>2025-03-19T13:12:46.000Z</published>
    <updated>2025-03-19T13:33:41.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spine导出的unity资源"><a class="markdownIt-Anchor" href="#spine导出的unity资源"></a> Spine导出的unity资源</h1><p>Spine导出的资源有3个文件<br />.json：存储了骨骼信息<br />.png：使用的图片图集<br />.atlas.txt：图片在图集中的位置信息<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319211831839.png" alt="" /></p><p>当我们把这三个资源文件夹导入到已经引入了Spine运行库的Unity工程后，会自动为我们生成<br />_Atlas：材质和.atlas.txt文件（位置）的引用配置文件<br />_Material：材质文件<br />_SkeletonData：json（骨骼）和_Atlas资源的引用配置文件<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319212124668.png" alt="" /></p><h1 id="使用spine导出的骨骼动画"><a class="markdownIt-Anchor" href="#使用spine导出的骨骼动画"></a> 使用Spine导出的骨骼动画</h1><p>最关键的是_SkeletonData：json和_Atlas资源的引用配置文件</p><p>直接将_SkeletonData文件拖入到场景中，选择创建 SkeletonAnimation对象<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319212403273.png" alt="" /></p><p>可以点击SkeletonAnimation对象在右边Inspector窗口切换动画运行查看<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319212520227.png" alt="" /></p><p>或者创建空对象，然后手动添加SkeletonAnimation脚本对_SkeletonData文件进行关联</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/42.Spine%E4%BD%BF%E7%94%A8%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250319212622981.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;spine导出的unity资源&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spine导出的unity资源&quot;&gt;&lt;/a&gt; Spine导出的unity资源&lt;/h1&gt;
&lt;p&gt;Spine导出的资源有3个文件&lt;br /&gt;
.json：存储了骨骼</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="Spine" scheme="http://example.com/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>41.Spine导入</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/41.Spine%E5%AF%BC%E5%85%A5/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/41.Spine%E5%AF%BC%E5%85%A5/</id>
    <published>2025-03-19T13:05:04.000Z</published>
    <updated>2025-03-19T13:10:44.286Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spine是什么"><a class="markdownIt-Anchor" href="#spine是什么"></a> Spine是什么</h1><p>Spine是一个收费的跨平台的2D骨骼动画制作工具。<br />它支持Unity，UE，Cocos2D，Cocos2D-x等等游戏引擎。<br />相对Unity2018才推出的 2D Animation。<br />Spine是目前商业游戏中较为常用的骨骼动画制作方案，稳定且高效。<br />官方地址：<a href="http://zh.esotericsoftware.com/">http://zh.esotericsoftware.com/</a></p><h1 id="如何学习spine"><a class="markdownIt-Anchor" href="#如何学习spine"></a> 如何学习Spine</h1><p>制作骨骼动画时美术人员的工作。<br />除非你是要做独立游戏，美术程序一人包。<br />那么我们没有必要去学习如何通过Spine制作骨骼动画。</p><p>我们只需要学习如何在Unity中通过程序使用Spine制作的资源。<br />如果想要学习如何制作Spine骨骼动画，可以根据官网提供的教学内容进行学习。</p><h1 id="导入unity使用的spine运行库"><a class="markdownIt-Anchor" href="#导入unity使用的spine运行库"></a> 导入Unity使用的Spine运行库</h1><p>有了Spine提供的支持Unity开发的运行库。<br />我们才能在Unity中使用Spine制作的骨骼动画。<br />你可以简单理解其实就是官方写好的识别文件处理文件呈现效果的代码。<br />我们只需要学习如何使用它提供的API即可。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/41.Spine%E5%AF%BC%E5%85%A5/file-20250319211012895.png" alt="" /></p><p>下载完直接导入就行了<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/41.Spine%E5%AF%BC%E5%85%A5/file-20250319211040529.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;spine是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spine是什么&quot;&gt;&lt;/a&gt; Spine是什么&lt;/h1&gt;
&lt;p&gt;Spine是一个收费的跨平台的2D骨骼动画制作工具。&lt;br /&gt;
它支持Unity，UE，Cocos2D，C</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="Spine" scheme="http://example.com/tags/Spine/"/>
    
  </entry>
  
  <entry>
    <title>40.换装不同文件资源</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/</id>
    <published>2025-03-19T12:26:05.000Z</published>
    <updated>2025-03-19T13:02:04.886Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在不同psb文件中制作换装资源"><a class="markdownIt-Anchor" href="#如何在不同psb文件中制作换装资源"></a> 如何在不同psb文件中制作换装资源</h1><p><strong>保证个部位在PS文件中的统一，比如不同资源的头盔位置都要在同一位置</strong><br />比如下面就不统一，使用就会出问题<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319203536647.png" alt="" /></p><p><strong>基础部位可选择性隐藏</strong>，比如第一副图有的身体头四肢，下张图只有各个装备就行了<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319203611033.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319203624866.png" alt="" /></p><h1 id="编辑换装资源的骨骼信息"><a class="markdownIt-Anchor" href="#编辑换装资源的骨骼信息"></a> 编辑换装资源的骨骼信息</h1><p>注意事项：不同文件的骨骼信息必须统一,所以我们直接使用复制的方式</p><p>首先按选择psb图片，不勾选导入隐藏模式。进入精灵编辑器。按套路先创建骨骼，创建后生成蒙皮，生成蒙皮后会有些不该影响的骨骼，按套路在且到BoneInfluence和右边的精灵图片，一个一个删除或添加骨骼。有些情况下添加了骨骼要点击AutoWeights按钮选中添加的骨骼点击右下角Generate按钮生成权重<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319204211854.png" alt="" /></p><p>编辑好骨骼蒙皮权重<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319204245948.png" alt="" /></p><p>现在来编辑新的psb图片，如果重新编辑骨骼的话那咋保证骨骼的统一？<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319204359081.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319204519659.png" alt="" /></p><p>打开另一张图片（这张图也不用打开import Hidden），点击粘贴，右下角只选中粘贴骨骼，不粘贴蒙皮。粘贴完点击应用。应用完继续按套路生成蒙皮，调整蒙皮骨骼和权重。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319204604169.png" alt="" /></p><h1 id="手动添加关键组件和数据文件"><a class="markdownIt-Anchor" href="#手动添加关键组件和数据文件"></a> 手动添加关键组件和数据文件</h1><ol><li>首先创建SpriteLibraryAsset数据文件</li><li>为根对象添加SpriteLibrary并关联数据文件</li><li>为换装部位关联SpriteResolver</li></ol><p>创建空物体根对象，把psb图片放到他下面。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319205115278.png" alt="" /></p><p>在Project窗口创建SpriteLibraryAsset数据文件<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319205223121.png" alt="" /></p><p>自己创建的SpriteLibraryAsset数据文件可以手动设置分组并关联图片。同一组关联的图片是两个psb文件下的相同类型的，比如不同的头盔。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319205340140.png" alt="" /></p><p>为根对象添加SpriteLibrary并关联数据文件<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319205811596.png" alt="" /></p><p>为换装部位关联SpriteResolver<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/40.%E6%8D%A2%E8%A3%85%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319205854202.png" alt="" /></p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>如何选择 同一文件和 不同文件 制作换装资源两种方案？</p><p>换装较少的游戏 比如只有面部表情更换 可以使用同一psb文件方案<br />换装较多的游戏 比如各部位有n种装备 可以使用不同psb文件方案<br />不同psb文件 拓展性更强<br />一切根据需求而定</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在不同psb文件中制作换装资源&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何在不同psb文件中制作换装资源&quot;&gt;&lt;/a&gt; 如何在不同psb文件中制作换装资源&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;保证个部位在PS文件中的统一，比如不同</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>39.换装同一文件资源</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/</id>
    <published>2025-03-19T11:47:48.000Z</published>
    <updated>2025-03-19T12:33:08.330Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在同一个psb文件中制作换装资源"><a class="markdownIt-Anchor" href="#如何在同一个psb文件中制作换装资源"></a> 如何在同一个psb文件中制作换装资源</h1><p>在ps中制作美术资源时，将一个游戏对象的所有换装资源都摆放好位置<br />当我们导入该资源时，要注意是否导入隐藏的图层<br />在ps软件制作图片时，是有很多图层的。可以设置图层显示隐藏控制当前用到是哪个图。比如控制各个武器图层的显示隐藏。想换装的话可以勾选导入隐藏图层的选项并应用。</p><p>每一类替换装备都需要单独的PSB，为了防止替换装备时产生的坐标错位，建议每一件装备都在图层内对齐。<br />例：所有衣袖需要向上对齐，所有鞋子需要向下对齐，不同武器需要手持位置对齐。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319194958747.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319195049397.png" alt="" /></p><h1 id="编辑换装资源的骨骼信息以及分组类别"><a class="markdownIt-Anchor" href="#编辑换装资源的骨骼信息以及分组类别"></a> 编辑换装资源的骨骼信息以及分组类别</h1><p>打开精灵编辑器把模式调成SkinningEditor。因为导入了所有图片看起来比较乱，可以在右侧点击精灵选项，让同类型的图就显示一个。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319195419984.png" alt="" /></p><p>创建骨骼，创建时假如发现原来的地方有骨骼挡着了可以切换到右边骨骼标签把挡着的骨骼想隐藏，创建好在显示刚刚隐藏的骨骼。创建好之后生成蒙皮。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319195454059.png" alt="" /></p><p>打开Bone influence调整各个骨骼控制的部位<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319195608210.png" alt="" /></p><p>可以点击上方的SpriteSheet按钮，切换成图集模式，一个一个图查看关联的骨骼时候正确<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319200035421.png" alt="" /></p><p>我们可以看到右边面板上有Category分类和Label标签选项，这是Unity提供给我们换装用的。<br />每一个同类型的图片，比如不同的头盔，都可以放到同一组。点击三角形创建新的分组，输入分组名字，后面Label标签相当于当前图片在这个分组里的名字是啥，自动是图片名可以不用改，也可以改。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319200111208.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319200120541.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319200303787.png" alt="" /></p><h1 id="如何换装"><a class="markdownIt-Anchor" href="#如何换装"></a> 如何换装</h1><p><strong>两个关键组件：</strong><br />SpriteLibrary（精灵资料库）：它确定了精灵的类别分组信息。<br />SpriteResolver（精灵解算器）：用于确定精灵的部位类别以及使用的图片。<br /><strong>一个数据文件：</strong><br />SpriteLibraryAsset（精灵资料库资源）：这是一个具体记录了类别分组信息的文件。</p><p>创建空物体，把psb文件拖进来，可以看到由于设置了换装信息和分组，<strong>PSB图片对象</strong>上添加了<strong>SpriteLibrary精灵资料库</strong>组件并关联一个数据文件<strong>SpriteLibraryAsset精灵资料库资源</strong>，这个数据文件具体记录类别分组信息。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319200954344.png" alt="" /></p><p>点击<strong>SpriteLibraryAsset精灵资料库资源</strong>如下图<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319201112263.png" alt="" /></p><p>不但生成了骨骼相关Sprite Skin的组件，发现有的自动添加了SpriteResolver（精灵解算器）脚本<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/39.%E6%8D%A2%E8%A3%85%E5%90%8C%E4%B8%80%E6%96%87%E4%BB%B6%E8%B5%84%E6%BA%90/file-20250319201226101.png" alt="" /></p><h1 id="代码换装"><a class="markdownIt-Anchor" href="#代码换装"></a> 代码换装</h1><p>获取各部位的SpriteResolver（需要引用命名空间），比如获得头盔的SpriteResolver，创建SpriteResolver变量并在外面拖拽关联<br />使用SpriteResolver的API进行装备切换</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SpriteResolver caskSpriteResolver;</span><br><span class="line"></span><br><span class="line"><span class="comment">//GetCategory() 获取当前部位默认的类别名（分组名）</span></span><br><span class="line"><span class="comment">//SetCategoryAndLabel 设置当前部位想要切换的图片信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//相当于没有设置分组，直接传入要切换的图片名进行设置</span></span><br><span class="line">caskSpriteResolver.SetCategoryAndLabel(caskSpriteResolver.GetCategory(), <span class="string">&quot;CASK 1&quot;</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果你不想一个一个的拖</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> SpriteResolver caskSpriteResolver;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> Dictionary&lt;<span class="built_in">string</span>, SpriteResolver&gt; equipDic = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, SpriteResolver&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 封装一下直接用分类+Label名</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeEquip</span>(<span class="params"><span class="built_in">string</span> category, <span class="built_in">string</span> equipName</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (equipDic.ContainsKey(category))</span><br><span class="line">    &#123;</span><br><span class="line">        equipDic[category].SetCategoryAndLabel(category, equipName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    SpriteResolver[] srs = <span class="keyword">this</span>.GetComponentsInChildren&lt;SpriteResolver&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; srs.Length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        equipDic.Add(srs[i].GetCategory(), srs[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ChangeEquip(<span class="string">&quot;Cask&quot;</span>, <span class="string">&quot;CASK 1&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在同一个psb文件中制作换装资源&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何在同一个psb文件中制作换装资源&quot;&gt;&lt;/a&gt; 如何在同一个psb文件中制作换装资源&lt;/h1&gt;
&lt;p&gt;在ps中制作美术资源时，将一个游戏对象的所有换装</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>38.反向动力学IK</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/</id>
    <published>2025-03-19T02:04:23.000Z</published>
    <updated>2025-03-19T09:39:14.750Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是ik"><a class="markdownIt-Anchor" href="#什么是ik"></a> 什么是IK</h1><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/0b16ba3c4c1d2db13641b1849d7cee4f.gif" alt="" /><br />在骨骼动画中，构建骨骼的方法被称为正向动力学。<br />它的表现形式是，子骨骼（关节）的位置根据父骨骼（关节）的旋转而改变。<br />用我们人体举例子，当我们抬起手臂时，是肩部关节带动的整个手臂的运动，用父子骨骼理解的话就是父带动了子。</p><p>而IK全称是Inverse Kinematics，翻译过来的意思就是反向动力学的意思。<br />它和正向动力学恰恰相反。<br />它的表现形式是，子骨骼（关节）末端的位置改变会带动自己以及自己的父骨骼（关节）旋转。<br />用我们人体举例子，当我们拿起一个杯子的时候是用手掌去拿，以杯子为参照物，我们移动杯子的位置，手臂会随着杯子一起移动，用父子骨骼理解的话就是子带动了父。</p><h1 id="2dik包引入"><a class="markdownIt-Anchor" href="#2dik包引入"></a> 2DIK包引入</h1><p>2022版本自带有<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319110212808.png" alt="" /></p><h1 id="2dik的使用"><a class="markdownIt-Anchor" href="#2dik的使用"></a> 2DIK的使用</h1><p>先给权杖也弄骨骼<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319110517069.png" alt="" /></p><p>新建一个空物体作为根对象，拖PSB图片做成子物体，给根物体添加IKManager2D组件<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172851394.png" alt="" /></p><h2 id="ik相关脚本参数"><a class="markdownIt-Anchor" href="#ik相关脚本参数"></a> IK相关脚本参数</h2><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/IK%E7%9F%A5%E8%AF%86%E7%82%B9.png" alt="" /></p><h3 id="ik-manager-2d-脚本参数"><a class="markdownIt-Anchor" href="#ik-manager-2d-脚本参数"></a> IK Manager 2D 脚本参数</h3><p>IK Solvers：IK解算器，在这里添加IK<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319111501368.png" alt="" /><br />Chain（CCD）：可以自定义影响N个关节点，不能反向<br />Chain（FABRIK）：可以自定义影响N个关节点，可以反向<br />Limb：只会影响3个关节点，一般四肢选这个<br />Weight：权重，当有多个IK控制同一点时权重会影响控制的百分比<br />Restore Default Pose：回复默认位置</p><p>给左右手和脚的末端和权杖的末端添加空物体，会利用这些空物体在对应位置添加IK点</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319111842235.png" alt="" /></p><p>在根对象的IKManager2D组件点击加号添加一个Chain（CCD）类型的IK，添加完会出现一个New CCDSolver2D子物体挂载NCCDSolver2D脚本<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319112232002.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319155451847.png" alt="" /></p><h3 id="ccd-solver-2d参数"><a class="markdownIt-Anchor" href="#ccd-solver-2d参数"></a> CCD Solver 2D参数</h3><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319155551130.png" alt="" /></p><p>将权杖末端的空对象赋值进来。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319160227279.png" alt="" /></p><p>Chain Length：IK影响的骨骼数量，往上影响多少个骨骼节点，加大数值，点变成绿色就意味着影响了那个骨骼。<br />Iterations：算法运行的次数。<br />Tolerance：容错程度。<br />Velocity：速度。</p><p>点击创建对象，会出来一个对象并关联，这个对象可以理解为创建出来的IK节点，通过这个IK节点反向控制骨骼，现在移动子物体因为有了IK父物体也会跟着动。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319160749996.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319160652843.png" alt="" /></p><p>Effector：默认的IK点位置<br />Target：会根据IK点位置生成真正的IK点对象<br />Flip：反向<br />Constrain Rotation：约束旋转程度<br />Solve from Default Pose：从默认姿势进行求解计算<br />Weight：权重</p><p>CCD模式不能完全反向。<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161411037.png" alt="" /></p><p>但FABRIK模式可以<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161555150.png" alt="" /><br />和上面ccd模式基本一样操作<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161756752.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161632339.png" alt="" /></p><h3 id="limbsolver2d脚本参数"><a class="markdownIt-Anchor" href="#limbsolver2d脚本参数"></a> LimbSolver2D脚本参数</h3><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161504740.png" alt="" /></p><p>Effector：默认的IK点位置。<br />Target：会根据IK点位置生成真正的IK点对象。<br />Flip：反向。<br />Constrain Rotation：约束旋转程度。<br />Solve from Default Pose：从默认姿势进行求解计算。<br />Weight：权重。<br />Create Target：创建IK节点。<br />Restore Default Pose：重置默认形状。</p><p>为人物四肢创建IK<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319161726989.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319162003471.png" alt="" /></p><p>其实四肢也可以往上控制多个点的<br />先把左手这个删掉，重新选一个IK解算器<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319171643713.png" alt="" /><br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319171831398.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319171929083.png" alt="" /></p><p>还可以改受IK点影响的到的骨骼颜色<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172041294.png" alt="" /><br />下面的效果是一拳带动全身<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172134326.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172216601.png" alt="" /></p><p>现在IK点不会跟着人物的根骨骼动，而是锁死在原地如下。想要一起动的话把各个IK点放到根骨骼下就行<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172428852.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172540117.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319172634470.png" alt="" /></p><h1 id="ik对于我们的意义"><a class="markdownIt-Anchor" href="#ik对于我们的意义"></a> IK对于我们的意义</h1><p>瞄准功能。<br />头部朝向功能。<br />拾取物品功能等等有指向性的功能时，我们都可以通过IK来达到目的。<br />最大的作用，可以方便我们进行动画制作。</p><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>请制作一个鼠标指向哪，2D人物的手臂就指向哪里的功能</p><p>创建空物体，拖psb文件图片进来，在左手添加一个空物体<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319173123446.png" alt="" /></p><p>选择空对象，添加IKManager2D脚本，添加一个IK，选择四肢用的Limb。会创建一个IK位置节点<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319173148368.png" alt="" /></p><p>在IK位置节点关联左手空物体，点击创建目标按钮，生成IK目标对象<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319173208855.png" alt="" /></p><p>制作思路：我们可以控制IK目标对象的位置移动手臂，那么只要用鼠标控制IK目标对象就行了<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/38.%E5%8F%8D%E5%90%91%E5%8A%A8%E5%8A%9B%E5%AD%A6IK/file-20250319173429404.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Transform ikPoint; <span class="comment">//IK点的位置</span></span><br><span class="line"><span class="keyword">private</span> <span class="built_in">float</span> z; <span class="comment">//2D游戏所在平面的z轴坐标</span></span><br><span class="line"><span class="keyword">private</span> Vector3 mousePos;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    z = Camera.main.WorldToScreenPoint(ikPoint.position).z; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        mousePos = Input.mousePosition;</span><br><span class="line">        mousePos.z = z;</span><br><span class="line">        ikPoint.position = Camera.main.ScreenToWorldPoint(mousePos);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是ik&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是ik&quot;&gt;&lt;/a&gt; 什么是IK&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unit</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>37.psb图片骨骼编辑</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/</id>
    <published>2025-03-19T01:22:05.000Z</published>
    <updated>2025-03-19T02:03:55.786Z</updated>
    
    <content type="html"><![CDATA[<h1 id="认识psb文件"><a class="markdownIt-Anchor" href="#认识psb文件"></a> 认识PSB文件</h1><p>认识PS之前先认识PS</p><p>PS（photoshop）是一款强大的图像处理软件，在各领域都被广泛使用。在游戏行业中也是美术同学使用最多的图像处理软件之一。<br />PSD和PSB两种格式，都是PS这款软件用于保存图像处理数据的文件格式。</p><p>PSD和PSB两种格式并没有太大的区别。最大的区别是PSD格式兼容除PS以外的其他一些软件，而PSB只能用PS打开。<br />在Unity中官方建议使用psb格式</p><h1 id="在unity中使用psb文件"><a class="markdownIt-Anchor" href="#在unity中使用psb文件"></a> 在Unity中使用PSB文件</h1><p>需要在Packages Manager窗口中引入 2D PSD Importer工具包<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319092556077.png" alt="" /><br />2D项目会自动下载，3D不会<br />在Unity中使用PSB文件做骨骼动画，可以让美术设置好图层，各图片位置，各个图片的名字，就不用像图集那样一个一个拼了<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319092735759.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319092711183.png" alt="" /></p><h1 id="设置psb文件关键参数"><a class="markdownIt-Anchor" href="#设置psb文件关键参数"></a> 设置PSB文件关键参数</h1><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319093037487.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319093117714.png" alt="" /></p><h2 id="extrude-edges图片边缘延伸网格"><a class="markdownIt-Anchor" href="#extrude-edges图片边缘延伸网格"></a> Extrude Edges*：图片边缘延伸网格</h2><h2 id="import-hidden是否导入psb文件中隐藏的图层"><a class="markdownIt-Anchor" href="#import-hidden是否导入psb文件中隐藏的图层"></a> Import Hidden*：是否导入psb文件中隐藏的图层</h2><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319093310587.png" alt="" /></p><h2 id="moszic"><a class="markdownIt-Anchor" href="#moszic"></a> Moszic：</h2><p>启用后，将图层生成Sprite，并将他们合并成单个纹理</p><h2 id="character-rig是否使用人物已经绑定的骨骼"><a class="markdownIt-Anchor" href="#character-rig是否使用人物已经绑定的骨骼"></a> Character Rig：是否使用人物已经绑定的骨骼</h2><h2 id="use-layer-grouping使用psb文件中的层分组"><a class="markdownIt-Anchor" href="#use-layer-grouping使用psb文件中的层分组"></a> Use Layer Grouping：使用psb文件中的层分组</h2><p>一般不勾选</p><h2 id="pivot轴心点位置"><a class="markdownIt-Anchor" href="#pivot轴心点位置"></a> Pivot：轴心点位置</h2><h2 id="reslice"><a class="markdownIt-Anchor" href="#reslice"></a> Reslice*：</h2><p>一般不勾选<br />从导入层重新生成Sprite，并清除对Sprite的任何更改，只有启用Moszic后又用</p><h2 id="keep-duplicate-name保留psb文件中的名字"><a class="markdownIt-Anchor" href="#keep-duplicate-name保留psb文件中的名字"></a> Keep Duplicate Name*：保留PSB文件中的名字</h2><p>让Sprite名称保留PSB文件中的名字</p><h1 id="为psb文件编辑骨骼信息"><a class="markdownIt-Anchor" href="#为psb文件编辑骨骼信息"></a> 为PSB文件编辑骨骼信息</h1><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319094441942.png" alt="" /></p><p>只能一部分一部分的生成蒙皮，但自动生成的蒙皮不知道哪个骨骼会影响哪部分就会有下面的效果，手臂影响身体</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319094549798.png" alt="" /><br />可以通过下面的操作取消掉关联的骨骼<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319094837331.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319094924074.png" alt="" /></p><p>对于这种没有骨骼关联的也可以添加骨骼关联<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095051060.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095132273.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095142199.png" alt="" /></p><p>再做些细微调整<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095414001.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095453223.png" alt="" /></p><h1 id="为psb文件制作骨骼动画"><a class="markdownIt-Anchor" href="#为psb文件制作骨骼动画"></a> 为PSB文件制作骨骼动画</h1><p>创建一个空物体，直接拖进去其实就可以直接用了，也会自动创建子物体和骨骼</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095650534.png" alt="" /></p><p>假如想把权杖拿到手上。要把拖进来的PS图片对象解预制体，不然无法移动权杖的父子关系，设置到拿到手上，调整层级<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319095917032.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/37.psb%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319100032965.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;认识psb文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#认识psb文件&quot;&gt;&lt;/a&gt; 认识PSB文件&lt;/h1&gt;
&lt;p&gt;认识PS之前先认识PS&lt;/p&gt;
&lt;p&gt;PS（photoshop）是一款强大的图像处理软件，在各领域都被广泛使用。在</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>36.图集图片骨骼编辑</title>
    <link href="http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/"/>
    <id>http://example.com/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/</id>
    <published>2025-03-19T01:04:50.000Z</published>
    <updated>2025-03-19T01:21:13.666Z</updated>
    
    <content type="html"><![CDATA[<h1 id="注意事项"><a class="markdownIt-Anchor" href="#注意事项"></a> 注意事项</h1><p>设置Sprite为图集模式<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319090727904.png" alt="" /></p><p>对图集图片进行切片<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319090758866.png" alt="" /></p><h1 id="图集骨骼编辑"><a class="markdownIt-Anchor" href="#图集骨骼编辑"></a> 图集骨骼编辑</h1><p>双击想要编辑的区域，会出现橙色边缘线<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319090908332.png" alt="" /></p><p>直接骨骼蒙皮权重就行<br /><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319091153351.png" alt="" /></p><h1 id="图集骨骼动画使用"><a class="markdownIt-Anchor" href="#图集骨骼动画使用"></a> 图集骨骼动画使用</h1><p>设置一个空物体为根物体。拖拽图集下各个图片到根物体下。逐个添加SpriteSkin脚本并点击生成骨骼按钮。<br />通过手动设置各个图片的相对父对象来让头随着身体移动这种操作，并调整排序层级。注意调整根物体的子物体，让根物体的中心点在脚下。</p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319091545043.png" alt="" /></p><p><img src="/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/36.%E5%9B%BE%E9%9B%86%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250319092111799.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;注意事项&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#注意事项&quot;&gt;&lt;/a&gt; 注意事项&lt;/h1&gt;
&lt;p&gt;设置Sprite为图集模式&lt;br /&gt;
&lt;img src=&quot;/2025/03/19/%E6%B8%B8%E6%88%8F%E5%BC</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>35.单张图片骨骼编辑</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/</id>
    <published>2025-03-18T12:22:59.000Z</published>
    <updated>2025-03-18T15:09:30.423Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是2d骨骼动画"><a class="markdownIt-Anchor" href="#什么是2d骨骼动画"></a> 什么是2d骨骼动画</h1><p>首先回顾一下序列帧动画<br />传统的序列帧动画为了达到好的动画效果<br />理论上来说，图片越多，动作越流畅<br /><strong>往往需要较多的美术资源，虽然效果好但是资源占用较多</strong></p><p>而2D骨骼动画是利用3D骨骼动画的制作原理进行制作的<br />将一张2D图片分割成n个部位，为每个部位绑上骨骼，控制骨骼旋转移动<br />达到用最少的2D美术资源做出流畅的2D动画效果</p><h1 id="unity中如何制作2d骨骼动画"><a class="markdownIt-Anchor" href="#unity中如何制作2d骨骼动画"></a> Unity中如何制作2d骨骼动画</h1><p>主要方式有两种<br />使用Unity2018新加功能 2D Animation 工具制作<br />使用跨平台骨骼动画制作工具 Spine 制作</p><h1 id="导入2d-animation工具"><a class="markdownIt-Anchor" href="#导入2d-animation工具"></a> 导入2d Animation工具</h1><p>在Package Manager窗口 搜索 2D Animation并安装 假如不是2d项目，要手动导入，否则自动就有<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318202859867.png" alt="" /></p><p>可以自己查看示例场景和示例图片。切换成皮肤编辑模式查看骨骼<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203334948.png" alt="" /></p><h1 id="skinningeditor模式下面板讲解"><a class="markdownIt-Anchor" href="#skinningeditor模式下面板讲解"></a> SkinningEditor模式下面板讲解</h1><p>SkinningEditor模式下面板讲解<br />导入工具后 在Sprite Editor窗口会多一个选项 Skinning Editor 切换到Skinning Editor模式<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203351711.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203358219.png" alt="" /></p><p>因为官方示例的图都是设置好骨骼的 可以找到对应的图的路径在资源管理器中打开 删除对应的meta文件 回到unity 系统会默认生成新的meta文件 之前绑定的骨骼相关就丢失了<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203641938.png" alt="" /></p><h1 id="skinningeditor模式下面板参数"><a class="markdownIt-Anchor" href="#skinningeditor模式下面板参数"></a> SkinningEditor模式下面板参数</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91.png" alt="" /></p><h2 id="左上方"><a class="markdownIt-Anchor" href="#左上方"></a> 左上方</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318222810753.png" alt="" /></p><h3 id="reset-pose"><a class="markdownIt-Anchor" href="#reset-pose"></a> Reset Pose</h3><p>将角色骨骼和关节恢复到原始位置</p><h3 id="sprite-sheet图集显示"><a class="markdownIt-Anchor" href="#sprite-sheet图集显示"></a> Sprite Sheet：图集显示</h3><h3 id="copy复制当前选择的数据"><a class="markdownIt-Anchor" href="#copy复制当前选择的数据"></a> Copy复制当前选择的数据</h3><h3 id="paste粘贴复制数据"><a class="markdownIt-Anchor" href="#paste粘贴复制数据"></a> Paste粘贴复制数据</h3><h2 id="左方"><a class="markdownIt-Anchor" href="#左方"></a> 左方</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318222916831.png" alt="" /></p><h3 id="bone-骨骼相关"><a class="markdownIt-Anchor" href="#bone-骨骼相关"></a> Bone 骨骼相关</h3><ul><li><p>Preview Pose 预览模式，可以预览动作并不会真正的改变设置</p></li><li><p>Edit Bone 编辑骨骼，可以改变骨骼的位置、长度、方向、名称等等</p></li><li><p>Create Bone 创建骨骼<br />注意要双击图片 图片产生橙色边缘线后 再点击创建骨骼，根骨骼一般是人物的躯干或者脚下<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223634655.png" alt="" /><br />这两个是没有父子关系的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223405810.png" alt="" /><br />如果想创建更多的子对象，就点击想创建的子对象的根部 进行设置起点和终点<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223959413.png" alt="" /></p></li><li><p>Split Bone 拆分骨骼，将一个骨骼一分为二</p></li></ul><h3 id="geometry-蒙皮相关"><a class="markdownIt-Anchor" href="#geometry-蒙皮相关"></a> Geometry 蒙皮相关</h3><p>蒙皮决定了骨骼主要控制哪一部分<br />先自动再手动<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224525267.png" alt="" /></p><ul><li><p>Auto Geometry 自动蒙皮<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224251612.png" alt="" /></p><ul><li><p>OUtline Detail 边缘细节，值越大，轮廓越细致</p></li><li><p>Alpha Tolerance 阿尔法公差值，控制蒙皮细节</p></li><li><p>Subdivide 细化程度，控制蒙皮细节</p></li><li><p>Weights 是否自动设置权重，一般勾选</p></li></ul></li><li><p>Edit Geometry 编辑蒙皮</p></li><li><p>Create Vertex 创建顶点<br />注意创建的顶点越多计算量越大</p></li><li><p>Create Edge 创建边线</p></li><li><p>Split Edge 拆分边，用一个新的顶点分离一个边</p></li></ul><h3 id="weights-权重相关"><a class="markdownIt-Anchor" href="#weights-权重相关"></a> Weights 权重相关</h3><p>决定了当骨骼动时如何印象顶点和边<br />比如控制如下图的顶点受到两边骨骼的程度<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224935264.png" alt="" /></p><ul><li><p>Auto Weights 自动赋予权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225100513.png" alt="" /></p></li><li><p>Weight Slider 编辑顶点和边的权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230036163.png" alt="" /></p><ul><li><p>Mode：计算模式<br />Add And Subtract：加减法 （一般选这个）<br />Grow And Shrink：增长和收缩<br />Smooth：平滑</p></li><li><p>Bone：设置权重的骨骼</p></li><li><p>Normalize：标准化设置</p></li><li><p>Amount：数量级（一般不会改不然如下）<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225407930.png" alt="" /></p></li><li><p>Vertex Weight：顶点权重 对应的骨骼</p></li></ul></li><li><p>Weight Brush 用笔刷赋予权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230105754.png" alt="" /><br />直接选个骨骼之后直接刷顶点权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225842012.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225859890.png" alt="" /></p><ul><li><ul><li>Size：笔刷大小</li></ul></li><li><p>Hardness：笔刷强度，越大效果越明显</p></li><li><p>Step：步数</p></li></ul></li><li><p>Bone Influence 选择骨骼用的Sprite<br />主要用于在psb图片中使用 骨骼控制点的图片关联<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230137062.png" alt="" /></p></li></ul><h3 id="visibility"><a class="markdownIt-Anchor" href="#visibility"></a> Visibility</h3><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230409363.png" alt="" /><br />切换选定精灵或骨骼的可见性</p><ul><li><p>左侧拖动条 控制编辑时骨骼透明度</p></li><li><p>右侧拖动条 控制编辑时权重透明度</p></li><li><p>下方列表 浏览各骨骼名和骨骼层级信息</p></li></ul><h1 id="骨骼动画的使用"><a class="markdownIt-Anchor" href="#骨骼动画的使用"></a> 骨骼动画的使用</h1><p>把设置好骨骼的图片丢到场景里，添加SpriteSKin脚本，点击CreateBones按钮，骨骼会自动关联<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230705614.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230723614.png" alt="" /></p><p>打开Animator的窗口来创建动画，调整各个骨骼子物体位置来生成动画效果<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230815265.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230928345.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是2d骨骼动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是2d骨骼动画&quot;&gt;&lt;/a&gt; 什么是2d骨骼动画&lt;/h1&gt;
&lt;p&gt;首先回顾一下序列帧动画&lt;br /&gt;
传统的序列帧动画为了达到好的动画效果&lt;br /&gt;
理论上来说，图片</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>34.2D序列帧动画</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/</id>
    <published>2025-03-18T11:42:08.000Z</published>
    <updated>2025-03-18T12:20:13.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是序列帧动画"><a class="markdownIt-Anchor" href="#什么是序列帧动画"></a> 什么是序列帧动画</h1><p>我们最常见的序列帧动画就是我们看的日本动画片，以固定时间间隔按序列切换图片就是序列帧动画的本质。当固定时间间隔足够短时，我们肉眼就会认为图片是连续动态的，进而形成动画（会动的画面）。<br />它的本质和游戏的帧率概念有点类似。<br />原理就是在一个循环中按一定时间间隔不停地切换显示的图片。</p><h1 id="代码制作序列帧动画"><a class="markdownIt-Anchor" href="#代码制作序列帧动画"></a> 代码制作序列帧动画</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318194732966.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_2D</span>动画_2<span class="title">D</span>序列帧动画 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Sprite[] sprs; <span class="comment">//存放序列帧图片</span></span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr; <span class="comment">//显示图片</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> time = <span class="number">0</span>; <span class="comment">//记录帧间隔时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> nowIndex = <span class="number">0</span>; <span class="comment">//记录当前显示的图片索引</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">        sr.sprite = sprs[nowIndex];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//每一次增加帧间隔时间</span></span><br><span class="line">        time += Time.deltaTime;</span><br><span class="line">        <span class="comment">//当帧间隔时间达到某一个条件时就切换图片</span></span><br><span class="line">        <span class="keyword">if</span> (time &gt;= <span class="number">0.03f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//切换图片</span></span><br><span class="line">            nowIndex++;</span><br><span class="line">            <span class="comment">//记得从头显示</span></span><br><span class="line">            sr.sprite = sprs[nowIndex % sprs.Length];</span><br><span class="line">            time = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="animation窗口制作序列帧动画"><a class="markdownIt-Anchor" href="#animation窗口制作序列帧动画"></a> Animation窗口制作序列帧动画</h1><h2 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h2><p>创建一个空物体<br />创建一个动画<br />直接将某一个动作的序列帧拖入窗口中</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195246106.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195341867.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195629574.png" alt="" /></p><h2 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h2><p>适合第一次用<br />直接将图片拖入Hierarchy层级窗口中</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195806177.png" alt="" /></p><p>默认你要创建序列帧动画<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195849020.png" alt="" /></p><h1 id="利用animator进行动画控制"><a class="markdownIt-Anchor" href="#利用animator进行动画控制"></a> 利用Animator进行动画控制</h1><p>创建好动画，设置好切换参数和条件等<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318200018836.png" alt="" /></p><p>代码中拖拽得到动画控制器</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_2D</span>动画_2<span class="title">D</span>序列帧动画 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Animator animator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space)) </span><br><span class="line">            animator.SetBool(<span class="string">&quot;isDown&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.Space))</span><br><span class="line">            animator.SetBool(<span class="string">&quot;isDown&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在之前2D相关练习题的基础上，为控制的对象加上序列帧动画</p><p>给机器人创建待机动画，找到待机动画图集，拖入图片进去。注意图集要设置底部为轴心<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201131302.png" alt="" /></p><p>给机器人创建走路动画，找到待机走路图集，拖入图片进去。注意图集要设置底部为轴心<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201145303.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201151840.png" alt="" /></p><p>给机器人创建跳跃动画，找到跳跃动画图集，拖入图片进去。注意图集要设置底部为轴心</p><p>创建x，y速度的int动画参数，并且添加过渡和切换条件。x速度等不等于0决定是Idle状态还是Walk状态，y速度等不等于0决定是跳跃状态还是非跳跃状态。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201334470.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201828943.png" alt="" /></p><p><strong>一般不用y的速度来判断是否播放跳跃动画，可以和地面碰撞器判断</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_</span>练习题_<span class="title">PlayerObject</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明一个浮点数类型变量 h;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> h;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明 SpriteRenderer 类型变量 sr;</span></span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rigidBody2D;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> frontH;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明 Animator 类型变量 animator;</span></span><br><span class="line">    <span class="keyword">private</span> Animator animator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line"></span><br><span class="line">        rigidBody2D = <span class="keyword">this</span>.GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line"></span><br><span class="line">        animator = <span class="keyword">this</span>.GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        h = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置动画参数 xSpeed 为 h 的整数值</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;xSpeed&quot;</span>, (<span class="built_in">int</span>)h);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置动画参数 ySpeed 为刚体 y 方向速度的整数值</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;ySpeed&quot;</span>, Mathf.CeilToInt(rigidBody2D.velocity.y));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (h != <span class="number">0</span>)</span><br><span class="line">            rigidBody2D.velocity = <span class="keyword">new</span> Vector2(h * moveSpeed, rigidBody2D.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject obj = Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;BulletObj&quot;</span>), <span class="keyword">this</span>.transform.position + <span class="keyword">new</span> Vector3(sr.flipX ? <span class="number">-0.3f</span> : <span class="number">0.3f</span>, <span class="number">0.5f</span>, <span class="number">0</span>), Quaternion.identity);</span><br><span class="line"></span><br><span class="line">            obj.GetComponent&lt;BulletObj&gt;().ChangeMoveDir(sr.flipX ? Vector3.left : Vector3.right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当按下 J 键时，给刚体施加一个向上的瞬时力</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.J))</span><br><span class="line">        &#123;</span><br><span class="line">            rigidBody2D.AddForce(Vector2.up * <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是序列帧动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是序列帧动画&quot;&gt;&lt;/a&gt; 什么是序列帧动画&lt;/h1&gt;
&lt;p&gt;我们最常见的序列帧动画就是我们看的日本动画片，以固定时间间隔按序列切换图片就是序列帧动画的本质。当固定时间间</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d序列帧动画" scheme="http://example.com/tags/2d%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>33.AnimatorController动画控制器</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/</id>
    <published>2025-03-18T08:24:26.000Z</published>
    <updated>2025-03-18T11:38:34.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建动画状态机"><a class="markdownIt-Anchor" href="#创建动画状态机"></a> 创建动画状态机</h1><p>直接选择场景物体后在动画窗口点Create <a href="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/#%E5%88%9B%E5%BB%BA%E5%8A%A8%E7%94%BB" title="30.创建和编辑Animation动画文件">创建动画</a><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164330520.png" alt="" /></p><p>还可以手动在Project窗口创建动画控制器<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164152657.png" alt="" /><br />新建的 Animator 文件是空的，可以拖 Animation 动画文件进去。</p><h1 id="动画控制器状态机-编辑面板"><a class="markdownIt-Anchor" href="#动画控制器状态机-编辑面板"></a> 动画控制器（状态机） 编辑面板</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164828800.png" alt="" /></p><h2 id="左侧面板"><a class="markdownIt-Anchor" href="#左侧面板"></a> 左侧面板</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318165859455.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318165935117.png" alt="" /><br />Layers：动画层级页签，为动画添加更多的层级，层级高的动画播放会覆盖层级低的<br />Parameters：参数页签，为动画状态机添加控制状态切换的参数 眼睛图标：显隐左侧面板</p><h2 id="右侧面板"><a class="markdownIt-Anchor" href="#右侧面板"></a> 右侧面板</h2><p>网格化布局区域：<br />主要用于编辑状态之前的切换关系</p><ol><li>窗口中的每一个矩形表示一个状态</li><li>窗口中的每一个箭头表示一个切换条件</li></ol><p>默认三大矩形：<br />绿色Entry矩形：进入状态机流程<br />红色Exit矩形：退出状态机流程<br />Any State：任意状态，代表状态机中的任意状态</p><p>人为添加矩形：<br />橙色矩形：一开始的默认状态动画，和Entry相连 表示一开始播放的动画<br />灰色矩形：自己添加的某一种动作状态</p><h1 id="添加动画"><a class="markdownIt-Anchor" href="#添加动画"></a> 添加动画</h1><h2 id="自动添加"><a class="markdownIt-Anchor" href="#自动添加"></a> 自动添加</h2><p>为对象创建动画后会自动将动画添加到状态机中<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170322683.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170335202.png" alt="" /></p><h2 id="直接将动画文件拖入到状态机"><a class="markdownIt-Anchor" href="#直接将动画文件拖入到状态机"></a> 直接将动画文件拖入到状态机</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170441000.png" alt="" /><br />点击状态发现自动就关联了2<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170549398.png" alt="" /><br />可以改名，但关联的还是2<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170752957.png" alt="" /></p><h2 id="直接在窗口里面右键一个状态再关联"><a class="markdownIt-Anchor" href="#直接在窗口里面右键一个状态再关联"></a> 直接在窗口里面右键一个状态再关联</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170917460.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170933197.png" alt="" /></p><h1 id="添加切换连线"><a class="markdownIt-Anchor" href="#添加切换连线"></a> 添加切换连线</h1><p>对一个矩形右键选择创建过渡。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171027477.png" alt="" /></p><p>添加连线后意味着这两个矩形状态可以进行状态切换，可以给连线设置切换的条件。没有连线的话两个状态不能进行切换。</p><p>选择矩形右键可以把该矩形状态设置为该层的默认状态。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171331769.png" alt="" /></p><h1 id="添加切换条件"><a class="markdownIt-Anchor" href="#添加切换条件"></a> 添加切换条件</h1><p>把左侧面板切换成参数标签，点击加号添加四种参数变量条件。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171500475.png" alt="" /></p><p>注意这里的Trigger<br />一个布尔参数，当被转换消耗时，由控制器重置（用圆形按钮表示）。可以理解为特殊的 bool 值，当设置为 true 完成切换条件后马上会自动设置为 false。<br />一般用于下面这种有来有回的连线（一但进入Test动画播放完成之后立马会去的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172521220.png" alt="" /></p><h1 id="设置动画间切换条件"><a class="markdownIt-Anchor" href="#设置动画间切换条件"></a> 设置动画间切换条件</h1><p>选择一个连线，点击下方条件列表添加切换条件，点击下拉框会出现我们刚刚设置好的切换条件参数进行选择。同理选择条件框后按减号可以删除。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172004225.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172026757.png" alt="" /></p><h1 id="animator参数相关"><a class="markdownIt-Anchor" href="#animator参数相关"></a> Animator参数相关</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318192721726.png" alt="" /></p><h2 id="controller对应的动画控制器状态机"><a class="markdownIt-Anchor" href="#controller对应的动画控制器状态机"></a> Controller：对应的动画控制器（状态机）</h2><h2 id="avatar对应的替身配置信息"><a class="markdownIt-Anchor" href="#avatar对应的替身配置信息"></a> Avatar：对应的替身配置信息</h2><p>（之后讲解3D模型时详细讲解）</p><h2 id="apply-root-motion是否启用动画位移更新"><a class="markdownIt-Anchor" href="#apply-root-motion是否启用动画位移更新"></a> Apply Root Motion：是否启用动画位移更新</h2><h2 id="updatemode更新模式一般不修改它"><a class="markdownIt-Anchor" href="#updatemode更新模式一般不修改它"></a> UpdateMode：更新模式（一般不修改它）</h2><p>Normal：正常更新<br />Animate Physics：物理更新<br />Unscaled Time：不受时间缩放影响</p><h2 id="culling-mode裁剪剔除模式"><a class="markdownIt-Anchor" href="#culling-mode裁剪剔除模式"></a> Culling Mode：裁剪剔除模式</h2><p>Always Animate：始终播放动画，即使在屏幕外也不剔除<br />Cull Update Transforms：摄像机没有渲染该物体时，停止位置、IK的写入<br />Cull Completely：摄像机没有渲染物体时，整个动画被完全禁用</p><h1 id="animator-代码控制"><a class="markdownIt-Anchor" href="#animator-代码控制"></a> Animator 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我们用代码控制状态机切换主要使用的就是Animator提供给我们的API</span></span><br><span class="line"><span class="comment">//我们知道一共有四种切换条件 int float bool trigger</span></span><br><span class="line"><span class="comment">//所以对应的API也是和这四种类型有关系的</span></span><br><span class="line">animator = <span class="keyword">this</span>.GetComponent&lt;Animator&gt;();</span><br></pre></td></tr></table></figure><p><strong>Animator.SetXXX方法 通过状态机条件切换动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过状态机条件切换动画</span></span><br><span class="line"><span class="comment">//设置动画参数状态</span></span><br><span class="line">animator.SetFloat(<span class="string">&quot;条件名&quot;</span>, <span class="number">1.2f</span>);</span><br><span class="line">animator.SetInteger(<span class="string">&quot;条件名&quot;</span>, <span class="number">5</span>);</span><br><span class="line">animator.SetBool(<span class="string">&quot;条件名&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">animator.SetTrigger(<span class="string">&quot;条件名&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>Animator.GetXXX方法 获得动画参数状态</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得动画参数状态</span></span><br><span class="line">animator.GetFloat(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line">animator.GetInteger(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line">animator.GetBool(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接切换动画 除非特殊情况 不然一般不使用</span></span><br><span class="line"><span class="comment">//animator.Play(&quot;状态名&quot;);</span></span><br><span class="line"><span class="comment">//注意：状态名和动画名不一样 动画名拖进来默认名字就是状态名 但是可以修改的和动画名不一样的</span></span><br></pre></td></tr></table></figure><p>假如切换时发现有延迟，可能是因为连线切换的参数中勾选了有推出时间，注意的话会播完上个动画在继续播下个动画。取消勾选即可。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318193600768.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建动画状态机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建动画状态机&quot;&gt;&lt;/a&gt; 创建动画状态机&lt;/h1&gt;
&lt;p&gt;直接选择场景物体后在动画窗口点Create &lt;a href=&quot;/2025/03/18/%E6%B8%B8%E6%8</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>32.有限状态机概念</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/32.%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A6%82%E5%BF%B5/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/32.%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A6%82%E5%BF%B5/</id>
    <published>2025-03-18T08:20:28.000Z</published>
    <updated>2025-03-18T08:23:07.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是有限状态机"><a class="markdownIt-Anchor" href="#什么是有限状态机"></a> 什么是有限状态机</h1><p>有限状态机（Finite-state machine, FSM）是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型。</p><p>有限：表示是有限度的不是无限的。<br />状态：指所拥有的所有状态。<br />举例说明：<br />假设我们人会做很多个动作，也就是有很多种状态，这些状态包括站立、走路、跑步、攻击、防守、睡觉等等。我们每天都会在这些状态中切换，而且这些状态虽然多但是是有限的。当达到某种条件时，我们就会在这些状态中进行切换，而且这种切换时随时可能发生的。</p><h1 id="有限状态机对于我们的意义"><a class="markdownIt-Anchor" href="#有限状态机对于我们的意义"></a> 有限状态机对于我们的意义</h1><p>有限状态机在游戏开发中具有重要意义，许多功能系统都是有限状态机。<br />最典型的状态机系统包括动作系统和AI（人工智能）系统。<br />例如，动作系统满足某个条件时切换一个动作，且动作是有限的；AI系统满足某个条件时切换一个状态，且状态是有限的。</p><h1 id="最简单的状态机实现"><a class="markdownIt-Anchor" href="#最简单的状态机实现"></a> 最简单的状态机实现</h1><p>最简单的状态机实现代码就是基于switch的实现。<br />假设我们只有一个值来控制当前玩家的状态：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> animName = <span class="string">&quot;idle&quot;</span>;</span><br><span class="line"><span class="keyword">switch</span> (animName)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;idle&quot;</span>:</span><br><span class="line">        <span class="comment">// 待机动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;move&quot;</span>:</span><br><span class="line">        <span class="comment">// 移动动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;run&quot;</span>:</span><br><span class="line">        <span class="comment">// 跑步动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;atk&quot;</span>:</span><br><span class="line">        <span class="comment">// 攻击动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong><br />在游戏开发中，某些系统中存在有限种状态的切换变化时，我们可以使用有限状态机的设计思路来进行逻辑编写。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是有限状态机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是有限状态机&quot;&gt;&lt;/a&gt; 什么是有限状态机&lt;/h1&gt;
&lt;p&gt;有限状态机（Finite-state machine, FSM）是表示有限个状态以及在这些状态之间的转移和动</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>31.老动画系统</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/</id>
    <published>2025-03-18T07:25:00.000Z</published>
    <updated>2025-03-18T08:14:24.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是老动画系统"><a class="markdownIt-Anchor" href="#什么是老动画系统"></a> 什么是老动画系统</h1><p>Unity中有两套动画系统：<br />新：Mecanim动画系统——主要用Animator组件控制动画。<br />老：Animation动画系统——主要用Animation组件控制动画（Unity4之前的版本可能会用到）。<br />目前我们为对象在Animation窗口创建的动画都会被新动画系统支配。有特殊需求或者针对一些简易动画，才会使用老动画系统。</p><h1 id="老动画系统控制动画播放"><a class="markdownIt-Anchor" href="#老动画系统控制动画播放"></a> 老动画系统控制动画播放</h1><p>注意：<br />在创建动画之前为对象添加Animation组件之后再制作动画。<br />这时制作出的动画和之前的动画格式是有区别的。</p><p>使用老动画系统来创建动画要先給物体添加一个Animation脚本，挂载过后Unity就会认为这个对象要使用老动画系统。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318152811435.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153242647.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153345943.png" alt="" /></p><p><strong>编辑和新动画系统一样</strong><br />动画文件格式不一样</p><h1 id="参数相关"><a class="markdownIt-Anchor" href="#参数相关"></a> 参数相关</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153830325.png" alt="" /><br />Animation：默认播放的动画。（注意拖选的一定是老动画系统的动画文件）<br />Animations：该动画组件可以控制的所有动画<br />Play AutoMatically：是否一开始就自动播放默认动画。<br />Animate Physics：动画是否与物理交互。<br />Culling Type：决定什么时候不播放动画。</p><ul><li>Always Animate：始终播放。</li><li>Based On Renderers：基于默认动画姿势剔除，比如动画在屏幕外可能就不播了。</li></ul><p><strong>老动画文件参数</strong><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318154909074.png" alt="" /></p><p>Default：读取设置得更高的默认重复模式<br />Once：播放一次就停止<br />Loop：从头到尾不停循环播放<br />PingPong：从头到尾从尾到头不停播放<br />ClampForever：播放结束会停在最后一帧，并且会一直播放最后一帧（相当于状态不停止），表现效果和Once一样，但是逻辑处理上不同</p><h1 id="代码控制播放"><a class="markdownIt-Anchor" href="#代码控制播放"></a> 代码控制播放</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Animation animation;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    animation = <span class="keyword">this</span>.GetComponent&lt;Animation&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.Play方法 播放动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放没有混合的动画。</span></span><br><span class="line"><span class="comment">//会直接生硬的切换动画 假如播放到一半切换动画 回强行停止第一个播放的动画 切换到第二个播放动画的初始状态 进行播放</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha1))</span><br><span class="line">&#123;</span><br><span class="line">    animation.Play(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha2))</span><br><span class="line">&#123;</span><br><span class="line">    animation.Play(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.CrossFade方法 淡入播放,自动产生过渡效果</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在后续 time 秒的时间段内，使名称为 animation 的动画淡入，使其他动画淡出。</span></span><br><span class="line"><span class="comment">//会先淡出把状态慢慢变成要播放的动画的初始在状态，再播动画</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha3))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//当你当前的动画的状态和播放动画的开始状态不一样的时候就会产生过渡效果</span></span><br><span class="line">    animation.CrossFade(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    <span class="comment">//animation.Play(&quot;3&quot;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.PlayQueued方法 前一个播完直接再播放下一个</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在先前的动画播放完毕后再播放动画。</span></span><br><span class="line"><span class="comment">//可以理解为把动画加到队列中 等上一个动画播放完再播 会生硬的切换初始状态</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha4))</span><br><span class="line">&#123;</span><br><span class="line">    animation.PlayQueued(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    <span class="comment">// animation.CrossFadeQueued(&quot;2&quot;);   // 有过渡效果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.Stop方法 停止播放所有动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animation.Stop();</span><br></pre></td></tr></table></figure><p><strong>Animation.IsPlaying方法 是否在播放某个动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( animation.IsPlaying(<span class="string">&quot;1&quot;</span>) )</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.wrapMode变量 播放模式设置</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animation.wrapMode = WrapMode.Loop;<span class="comment">//设置成循环播放</span></span><br></pre></td></tr></table></figure><p><strong>其它（了解即可，新动画系统中会详细讲解）</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//层级和权重以及混合（老动画系统需要通过代码来达到动画的遮罩、融合等效果）</span></span><br><span class="line"><span class="comment">//设置层级</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].layer = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//设置权重</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].weight = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//混合模式 叠加还是混合</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].blendMode = AnimationBlendMode.Additive;</span><br><span class="line"><span class="comment">//设置混组相关骨骼信息</span></span><br><span class="line">animation[<span class="string">&quot;&quot;</span>].AddMixingTransform();</span><br></pre></td></tr></table></figure><h1 id="动画事件"><a class="markdownIt-Anchor" href="#动画事件"></a> 动画事件</h1><p>动画事件主要用于处理当动画播放到某一时刻想要触发某些逻辑，比如进行伤害检测、发射子弹、特效播放等等。</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318160745637.png" alt="" /></p><p>在Animation窗口选择某一动画的某一帧下，点击添加动画事件的按钮添加动画事件。<br />添加后可以在时间轴看到一个蓝色的条。蓝色的条可以在时间轴任意拖动。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318160936777.png" alt="" /></p><p>点击可以在右侧Inspector窗口看见动画事件相关参数，现在还没有绑定任何事件。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318161048697.png" alt="" /></p><p>在挂载到执行动画对象上的代码上添加用于动画事件关联的函数。函数可以有参数，可以是int，float，GameObject类型。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnimationEvent</span>(<span class="params">GameObject go</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;动画事件触发&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318161142768.png" alt="" /></p><p>总结<br />老动画系统主要用于处理老版本项目和简单的一些自制动画。<br />新项目都不建议大家使用了。<br />关键组件：Animation</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是老动画系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是老动画系统&quot;&gt;&lt;/a&gt; 什么是老动画系统&lt;/h1&gt;
&lt;p&gt;Unity中有两套动画系统：&lt;br /&gt;
新：Mecanim动画系统——主要用Animator组件控制动画。</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>30.创建和编辑Animation动画文件</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/</id>
    <published>2025-03-18T02:30:47.000Z</published>
    <updated>2025-03-18T07:22:10.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建动画"><a class="markdownIt-Anchor" href="#创建动画"></a> 创建动画</h1><ol><li>在场景中选中想要创建动画的对象<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103615875.png" alt="" /></li><li>在Animation窗口中点击创建</li><li>选择动画文件将要保存到的位置<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103636026.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103716509.png" alt="" /><br /><strong>保存Animation动画文件时，Unity会帮助我们完成以下操作</strong><br />创建一个 Animator Controller（动画控制器或称之为动画状态机） 资源（新动画系统）<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104106014.png" alt="" /></li></ol><p>将新创建的动画文件添加到Animator Controller动画状态机中<br />双击打开<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104134104.png" alt="" /></p><p>为场景上的对象添加Animator组件<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104243981.png" alt="" /></p><p>为Animator组件关联创建的Animator Controller文件<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104325362.png" alt="" /></p><h1 id="面板变化"><a class="markdownIt-Anchor" href="#面板变化"></a> 面板变化</h1><h2 id="左侧面板"><a class="markdownIt-Anchor" href="#左侧面板"></a> 左侧面板</h2><p>多出一个可以选择当前动画的下拉列表<br />可以在这里创建新动画和切换动画<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318105025023.png" alt="" /><br />多出一个可以添加变化属性的按钮<br />在这里你可以任意添加你想要在动画中变化的脚本变量<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318105039893.png" alt="" /></p><h2 id="右侧面板"><a class="markdownIt-Anchor" href="#右侧面板"></a> 右侧面板</h2><p>时间轴可以拖动<br />注意： 时间轴上的单位为n秒n帧 一格代表一帧（并不是秒）</p><p>选择关键帧右键</p><h1 id="关键帧模式下编辑动画"><a class="markdownIt-Anchor" href="#关键帧模式下编辑动画"></a> 关键帧模式下编辑动画</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141159005.png" alt="" /></p><p>点击录制按钮，进入录制状态。就可以随便选择一个时间点给他添加关键帧。但是点击添加关键帧按钮会发现没有用。因为没有告诉这个动画会改变物体的哪些属性和变量。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141501712.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141326568.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141626169.png" alt="" /><br />还有一种添加关键帧的方法，点击录制按钮后直接改Inspector窗口的值，会自动在时间轴添加关键帧<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142228306.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142248079.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142257477.png" alt="" /></p><h1 id="曲线模式下编辑动画"><a class="markdownIt-Anchor" href="#曲线模式下编辑动画"></a> 曲线模式下编辑动画</h1><p>曲线模式可以控制非匀速变化<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142432464.png" alt="" /></p><p>在曲线模式下可以直接右键添加关键帧，添加完关键帧后切换成关键帧模式也能看到刚刚添加的关键帧。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142514741.png" alt="" /></p><p>在关键帧模式下或者曲线模式下，选择关键帧右键<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142712544.png" alt="" /><br />Add Key：添加关键帧<br />Delete Key：删除关键帧<br />Clamped Auto：切线模式，自动设置切线<br />Auto：旧版切线模式，和Clamped Auto基本类似，主要用于老动画系统，建议不使用除非是老动画<br />Free Smooth：自由设置切线<br />Flat：切线设置为水平<br />Broken：单独控制左右曲线切线<br />Free：自由设置<br />Linear：直线<br />Constant：常量切换<br />Weighted：权重切换，可以拉长缩短切线</p><h1 id="动画文件界面参数"><a class="markdownIt-Anchor" href="#动画文件界面参数"></a> 动画文件界面参数</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318143203185.png" alt="" /><br />Loop Time：是否是循环动画（在动画结尾时重新开始）<br />Loop Pose：无缝循环运动<br />Cycle Offset：循环动画在其他时间开始时的周期偏移</p><p>对Animation打开Debug模式，注意Sample Rate帧率（采样率），和 Wrap Mode动画播放模式（贴图间拼接模式）这两个参数<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318143444220.png" alt="" /><br />在Animation里面改和在Animation文件改一样的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318152104533.png" alt="" /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318152109975.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建动画&quot;&gt;&lt;/a&gt; 创建动画&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在场景中选中想要创建动画的对象&lt;br /&gt;
&lt;img src=&quot;/2025/03/18/%E6%B8%B8%E6%88%</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>29.认识Animation动画窗口</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/</id>
    <published>2025-03-18T02:11:57.000Z</published>
    <updated>2025-03-18T02:31:22.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打开animation窗口"><a class="markdownIt-Anchor" href="#打开animation窗口"></a> 打开Animation窗口</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318101915514.png" alt="" /></p><h1 id="animation窗口是用来干嘛的"><a class="markdownIt-Anchor" href="#animation窗口是用来干嘛的"></a> Animation窗口是用来干嘛的</h1><p>Animation窗口直译就是动画窗口，主要用于在Unity内部创建和修改动画。所有在场景中的对象都可以通过Animation窗口为其制作动画。</p><p><strong>原理：</strong><br />制作动画时：记录在固定时间点对象挂载的脚本的变量变化。<br />播放动画时：将制作动画时记录的数据在固定时间点进行改变，产生动画效果。</p><h1 id="动画关键词说明"><a class="markdownIt-Anchor" href="#动画关键词说明"></a> 动画关键词说明</h1><h2 id="动画时间轴"><a class="markdownIt-Anchor" href="#动画时间轴"></a> 动画时间轴</h2><p>每一个动画文件都有自己的一个生命周期，从动画开始到结束。我们可以在动画时间轴上编辑每一个动画生命周期中的变化。</p><h2 id="动画中的帧"><a class="markdownIt-Anchor" href="#动画中的帧"></a> 动画中的帧</h2><p>假设某个动画的帧率为60帧每秒，意味着该动画1秒钟最多会有60次改变机会。每一帧的间隔时间是 1s/60 ≈ 16.67毫秒。也就是说，我们最快可以每16.67毫秒改变一次对象状态。</p><h2 id="关键帧"><a class="markdownIt-Anchor" href="#关键帧"></a> 关键帧</h2><p>动画在时间轴上的某一个时间节点上处于的状态。</p><h1 id="animation-面板功能"><a class="markdownIt-Anchor" href="#animation-面板功能"></a> Animation 面板功能</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318103004792.png" alt="" /></p><h2 id="面板左侧"><a class="markdownIt-Anchor" href="#面板左侧"></a> 面板左侧</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102604741.png" alt="" /><br />从左至右：<br />1.预览模式（开关）<br />2.录制模式（开关）打开后预览模式默认开启<br />3.回到动画开头<br />4.上一关键帧（快捷键：键盘逗号）<br />5.播放动画（快捷键：键盘Alt+逗号）<br />6.下一关键帧（快捷键：键盘句号）<br />7.回到动画结尾（快捷键：键盘Alt+句号）<br />8.当前处于第几帧</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102646894.png" alt="" /><br />从左至右：<br />Dopesheet：关键帧模式<br />Curves：曲线模式</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102745612.png" alt="" /><br />从左至右：<br />按选择筛选<br />添加关键帧<br />添加事件</p><h2 id="面板右侧"><a class="markdownIt-Anchor" href="#面板右侧"></a> 面板右侧</h2><p>动画时间轴面板：当编辑动画时，会在该面板上编辑关键帧等信息<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102921286.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;打开animation窗口&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#打开animation窗口&quot;&gt;&lt;/a&gt; 打开Animation窗口&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/18/%E6%B8%B8%E6%88%8</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>28.瓦片地图代码控制</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/</id>
    <published>2025-03-18T01:49:51.000Z</published>
    <updated>2025-03-18T02:08:34.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取tilemap和tilebase和grid"><a class="markdownIt-Anchor" href="#获取tilemap和tilebase和grid"></a> 获取Tilemap和TileBase和Grid</h1><p>Tilemap组件：用于管理瓦片地图。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095038664.png" alt="" /></p><p>TileBase组件：单张瓦片资源对象基类。<br />Grid组件：用于坐标转换。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095207503.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.Tilemaps;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 瓦片地图信息，可以通过它得到瓦片格子</span></span><br><span class="line"><span class="keyword">public</span> Tilemap tilemap;</span><br><span class="line"><span class="comment">// 格子位置相关控制，可以通过它进行坐标转换</span></span><br><span class="line"><span class="keyword">public</span> Grid grid;</span><br><span class="line"><span class="comment">// 瓦片资源基类，通过它可以得到瓦片资源</span></span><br><span class="line"><span class="keyword">public</span> TileBase tileBase;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095440605.png" alt="" /></p><h1 id="重要api"><a class="markdownIt-Anchor" href="#重要api"></a> 重要API</h1><h2 id="tilemapclearalltiles方法-清空瓦片地图"><a class="markdownIt-Anchor" href="#tilemapclearalltiles方法-清空瓦片地图"></a> Tilemap.ClearAllTiles方法 清空瓦片地图</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Tilemap类中的ClearAllTiles方法 清空瓦片地图</span></span><br><span class="line"><span class="comment">//清除 Tilemap 中放置的所有瓦片。</span></span><br><span class="line">tilemap.ClearAllTiles();</span><br></pre></td></tr></table></figure><h2 id="tilemapgettile方法-获取指定坐标格子的瓦片格子"><a class="markdownIt-Anchor" href="#tilemapgettile方法-获取指定坐标格子的瓦片格子"></a> Tilemap.GetTile方法 获取指定坐标格子的瓦片格子</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传入的是Vector3Int类型</span></span><br><span class="line"><span class="comment">//根据给定的瓦片地图中某个单元格的 XYZ 坐标，获取瓦片。</span></span><br><span class="line">TileBase tempTileBase = tilemap.GetTile(Vector3Int.zero);</span><br><span class="line">print(tempTileBase);</span><br></pre></td></tr></table></figure><h2 id="tilemapsettile方法-设置瓦片和删除瓦片"><a class="markdownIt-Anchor" href="#tilemapsettile方法-设置瓦片和删除瓦片"></a> Tilemap.SetTile方法 设置瓦片和删除瓦片</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据给定的瓦片地图中某个单元格的 XYZ 坐标，设置瓦片。</span></span><br><span class="line"><span class="comment">//设置瓦片</span></span><br><span class="line">tilemap.SetTile(<span class="keyword">new</span> Vector3Int(<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>), tileBase);</span><br><span class="line"><span class="comment">//删除瓦片</span></span><br><span class="line">tilemap.SetTile(<span class="keyword">new</span> Vector3Int(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h2 id="tilemapswaptile方法-替换瓦片"><a class="markdownIt-Anchor" href="#tilemapswaptile方法-替换瓦片"></a> Tilemap.SwapTile方法 替换瓦片</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将 changeTile 的所有现有瓦片交换为 newTile 并刷新所有交换的瓦片。</span></span><br><span class="line"><span class="comment">//是将瓦片资源图片替换的意思 资源所有使用到瓦片资源的图片都会进行变化</span></span><br><span class="line">tilemap.SwapTile(tempTileBase, tileBase);</span><br></pre></td></tr></table></figure><h2 id="tilemapworldtocell方法-世界坐标转格子坐标"><a class="markdownIt-Anchor" href="#tilemapworldtocell方法-世界坐标转格子坐标"></a> Tilemap.WorldToCell方法 世界坐标转格子坐标</h2><p>将世界位置转换为单元格位置。<br />传入的参数是Vector3类型世界坐标<br />我们可以先屏幕坐标转世界坐标，再世界坐标转格子坐标</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;获取tilemap和tilebase和grid&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#获取tilemap和tilebase和grid&quot;&gt;&lt;/a&gt; 获取Tilemap和TileBase和Grid&lt;/h1&gt;
&lt;p&gt;Tilemap组件</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>27.瓦片地图扩展包</title>
    <link href="http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/"/>
    <id>http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/</id>
    <published>2025-03-16T12:42:41.000Z</published>
    <updated>2025-03-18T01:42:19.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导入瓦片地图扩展包"><a class="markdownIt-Anchor" href="#导入瓦片地图扩展包"></a> 导入瓦片地图扩展包</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250316204332220.png" alt="" /></p><p>Project右键<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317103308339.png" alt="" /></p><h1 id="新增瓦片类型"><a class="markdownIt-Anchor" href="#新增瓦片类型"></a> 新增瓦片类型</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/%E5%AE%98%E6%96%B9%E6%8B%93%E5%B1%95%E5%8C%85%E2%80%94%E6%96%B0%E5%A2%9E%E7%93%A6%E7%89%87%E7%B1%BB%E5%9E%8B.png" alt="" /></p><h2 id="规则瓦片-rule-tile-hexagonal-isometric"><a class="markdownIt-Anchor" href="#规则瓦片-rule-tile-hexagonal-isometric"></a> 规则瓦片 Rule Tile (Hexagonal、Isometric)</h2><h3 id="default-sprite默认图片"><a class="markdownIt-Anchor" href="#default-sprite默认图片"></a> Default Sprite：默认图片</h3><h3 id="default-gameobject-默认游戏对象"><a class="markdownIt-Anchor" href="#default-gameobject-默认游戏对象"></a> Default GameObject ：默认游戏对象</h3><h3 id="default-collider默认碰撞器规则"><a class="markdownIt-Anchor" href="#default-collider默认碰撞器规则"></a> Default Collider：默认碰撞器规则</h3><h3 id="tiling-rules平铺规则-可以自己添加删除"><a class="markdownIt-Anchor" href="#tiling-rules平铺规则-可以自己添加删除"></a> Tiling Rules：平铺规则 可以自己添加删除</h3><p>当满足x的地方没图，绿的地方有图就会使用右边选择的图<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317103845768.png" alt="" /><br />将RuleTile规则瓦片拖入到调色板中，在场景绘制时就会有相应的规则</p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104104864.png" alt="" /></p><p>对应情况的瓦片可以关联游戏对象，但是一般不会关联<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104518207.png" alt="" /></p><p>还可以更改Output来设置随机输出的图片<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104335226.png" alt="" /><br />输出类型改成动画模式的话可以关联多张图片，出现当前图片时会在多张图片按一定速度进行顺序轮播，看起来就像动画<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104414526.png" alt="" /></p><h2 id="动画瓦片-animated-tile"><a class="markdownIt-Anchor" href="#动画瓦片-animated-tile"></a> 动画瓦片 Animated Tile</h2><p>可以指定序列帧，产生可以播放序列帧动画的瓦片<br />角色一般不用这个，角色一般用2d对象去做，一般用场景上随风飘扬的小草什么的</p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104847997.png" alt="" /></p><p>设置好了把瓦片拖拽文件拖到平铺调色板，在拖到场景里，场景里的动画瓦片就会不停的播放了。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111606786.png" alt="" /></p><h3 id="number-of-animated-sprites动画有多少张图构成"><a class="markdownIt-Anchor" href="#number-of-animated-sprites动画有多少张图构成"></a> Number Of Animated Sprites：动画有多少张图构成</h3><h3 id="minimum-speed最小播放速度"><a class="markdownIt-Anchor" href="#minimum-speed最小播放速度"></a> Minimum Speed：最小播放速度</h3><h3 id="maximum-speed最大播放速度"><a class="markdownIt-Anchor" href="#maximum-speed最大播放速度"></a> Maximum Speed：最大播放速度</h3><h3 id="start-time开始播放的时间"><a class="markdownIt-Anchor" href="#start-time开始播放的时间"></a> Start Time：开始播放的时间</h3><h3 id="strat-frame从那一帧开始播放"><a class="markdownIt-Anchor" href="#strat-frame从那一帧开始播放"></a> Strat Frame：从那一帧开始播放</h3><h2 id="管道瓦片-pipeline-tile"><a class="markdownIt-Anchor" href="#管道瓦片-pipeline-tile"></a> 管道瓦片 Pipeline Tile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317110443035.png" alt="" /><br />None：一个都不相邻时使用的图片<br />One——Four：相邻1~4个时使用的图片</p><h2 id="随机瓦片-random-tile"><a class="markdownIt-Anchor" href="#随机瓦片-random-tile"></a> 随机瓦片 Random Tile</h2><p>Number Of Sprites：随机图片数量（之后会随机取一个图片来使用）<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111642134.png" alt="" /></p><h2 id="地形瓦片-terraintile"><a class="markdownIt-Anchor" href="#地形瓦片-terraintile"></a> 地形瓦片 TerrainTile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111651556.png" alt="" /></p><p>跟规则瓦片差不多一样<br />Filled:填满<br />Three Sides:三个面<br />Two Sides and One Corner:两面一角<br />Two Adjacent Sides:相邻两侧<br />Two Opposite Sides:两个相对的侧面<br />One Side and Two Corners:一侧和两个角<br />One Side and One Upper Corner:一边和上角<br />One Side:一面 Four Corners:四个角<br />Three Corners:三个角<br />Two Adjacent Corners:两个相邻角<br />Two Opposite Corners：两个相反的角<br />One Corner：一个角<br />Empty：空</p><h2 id="权重随机瓦片-weightedrandomtile"><a class="markdownIt-Anchor" href="#权重随机瓦片-weightedrandomtile"></a> 权重随机瓦片 WeightedRandomTile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111700906.png" alt="" /></p><h2 id="规则覆盖瓦片-rule-override-tile"><a class="markdownIt-Anchor" href="#规则覆盖瓦片-rule-override-tile"></a> 规则覆盖瓦片 Rule Override Tile</h2><p><strong>在规则瓦片的基础上</strong>，改变图片或指定启用的规则<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111717305.png" alt="" /></p><h1 id="新增笔刷类型"><a class="markdownIt-Anchor" href="#新增笔刷类型"></a> 新增笔刷类型</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317112012594.png" alt="" /></p><h2 id="gameobject-brush"><a class="markdownIt-Anchor" href="#gameobject-brush"></a> GameObject Brush</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317112647348.png" alt="" /></p><h2 id="random-brush"><a class="markdownIt-Anchor" href="#random-brush"></a> Random Brush</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091047851.png" alt="" /></p><p>Tile Set Size<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091130182.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091254320.png" alt="" /></p><h2 id="coordinate-brush-坐标笔刷"><a class="markdownIt-Anchor" href="#coordinate-brush-坐标笔刷"></a> Coordinate Brush* 坐标笔刷</h2><p>可以实时的看到格子的坐标<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318092425775.png" alt="" /></p><h2 id="group-brush-组合笔刷"><a class="markdownIt-Anchor" href="#group-brush-组合笔刷"></a> Group Brush 组合笔刷</h2><p>可以设置参数，当点击一个瓦片样式时，会自动取出一个范围内的瓦片。</p><p>Gap决定x、y、z遇到几个空格之后就不继续扩充吸取的范围。<br />Limit决定最大的吸取范围，从0开始。</p><h2 id="line-brush-线性笔刷"><a class="markdownIt-Anchor" href="#line-brush-线性笔刷"></a> Line Brush 线性笔刷</h2><p>决定起点和终点画一条线出来。<br />选择线性笔刷后点击画笔可以在瓦片地图中点击确定起点和终点，会用选择的瓦片连成线。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318093542365.png" alt="" /></p><p>Line Start Active 是否以上一次绘制的起点作为新的起点。<br />Fill Gaps 自动填充，会把线画的更粗。</p><h2 id="tint-brush-着色笔刷"><a class="markdownIt-Anchor" href="#tint-brush-着色笔刷"></a> Tint Brush* 着色笔刷</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318093849202.png" alt="" /><br />可以给瓦片着色，瓦片的颜色锁要开启（Inspector窗口切换Debug模式 修改Flags）。<br />不开启颜色锁没有作用。<br />找到瓦片资源图片，右上角把图片设置成Debug模式，修改Flag为None。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318094008803.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318094029843.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导入瓦片地图扩展包&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导入瓦片地图扩展包&quot;&gt;&lt;/a&gt; 导入瓦片地图扩展包&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
</feed>
