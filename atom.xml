<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-03-18T15:09:30.423Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>35.单张图片骨骼编辑</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/</id>
    <published>2025-03-18T12:22:59.000Z</published>
    <updated>2025-03-18T15:09:30.423Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是2d骨骼动画"><a class="markdownIt-Anchor" href="#什么是2d骨骼动画"></a> 什么是2d骨骼动画</h1><p>首先回顾一下序列帧动画<br />传统的序列帧动画为了达到好的动画效果<br />理论上来说，图片越多，动作越流畅<br /><strong>往往需要较多的美术资源，虽然效果好但是资源占用较多</strong></p><p>而2D骨骼动画是利用3D骨骼动画的制作原理进行制作的<br />将一张2D图片分割成n个部位，为每个部位绑上骨骼，控制骨骼旋转移动<br />达到用最少的2D美术资源做出流畅的2D动画效果</p><h1 id="unity中如何制作2d骨骼动画"><a class="markdownIt-Anchor" href="#unity中如何制作2d骨骼动画"></a> Unity中如何制作2d骨骼动画</h1><p>主要方式有两种<br />使用Unity2018新加功能 2D Animation 工具制作<br />使用跨平台骨骼动画制作工具 Spine 制作</p><h1 id="导入2d-animation工具"><a class="markdownIt-Anchor" href="#导入2d-animation工具"></a> 导入2d Animation工具</h1><p>在Package Manager窗口 搜索 2D Animation并安装 假如不是2d项目，要手动导入，否则自动就有<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318202859867.png" alt="" /></p><p>可以自己查看示例场景和示例图片。切换成皮肤编辑模式查看骨骼<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203334948.png" alt="" /></p><h1 id="skinningeditor模式下面板讲解"><a class="markdownIt-Anchor" href="#skinningeditor模式下面板讲解"></a> SkinningEditor模式下面板讲解</h1><p>SkinningEditor模式下面板讲解<br />导入工具后 在Sprite Editor窗口会多一个选项 Skinning Editor 切换到Skinning Editor模式<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203351711.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203358219.png" alt="" /></p><p>因为官方示例的图都是设置好骨骼的 可以找到对应的图的路径在资源管理器中打开 删除对应的meta文件 回到unity 系统会默认生成新的meta文件 之前绑定的骨骼相关就丢失了<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318203641938.png" alt="" /></p><h1 id="skinningeditor模式下面板参数"><a class="markdownIt-Anchor" href="#skinningeditor模式下面板参数"></a> SkinningEditor模式下面板参数</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91.png" alt="" /></p><h2 id="左上方"><a class="markdownIt-Anchor" href="#左上方"></a> 左上方</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318222810753.png" alt="" /></p><h3 id="reset-pose"><a class="markdownIt-Anchor" href="#reset-pose"></a> Reset Pose</h3><p>将角色骨骼和关节恢复到原始位置</p><h3 id="sprite-sheet图集显示"><a class="markdownIt-Anchor" href="#sprite-sheet图集显示"></a> Sprite Sheet：图集显示</h3><h3 id="copy复制当前选择的数据"><a class="markdownIt-Anchor" href="#copy复制当前选择的数据"></a> Copy复制当前选择的数据</h3><h3 id="paste粘贴复制数据"><a class="markdownIt-Anchor" href="#paste粘贴复制数据"></a> Paste粘贴复制数据</h3><h2 id="左方"><a class="markdownIt-Anchor" href="#左方"></a> 左方</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318222916831.png" alt="" /></p><h3 id="bone-骨骼相关"><a class="markdownIt-Anchor" href="#bone-骨骼相关"></a> Bone 骨骼相关</h3><ul><li><p>Preview Pose 预览模式，可以预览动作并不会真正的改变设置</p></li><li><p>Edit Bone 编辑骨骼，可以改变骨骼的位置、长度、方向、名称等等</p></li><li><p>Create Bone 创建骨骼<br />注意要双击图片 图片产生橙色边缘线后 再点击创建骨骼，根骨骼一般是人物的躯干或者脚下<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223634655.png" alt="" /><br />这两个是没有父子关系的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223405810.png" alt="" /><br />如果想创建更多的子对象，就点击想创建的子对象的根部 进行设置起点和终点<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318223959413.png" alt="" /></p></li><li><p>Split Bone 拆分骨骼，将一个骨骼一分为二</p></li></ul><h3 id="geometry-蒙皮相关"><a class="markdownIt-Anchor" href="#geometry-蒙皮相关"></a> Geometry 蒙皮相关</h3><p>蒙皮决定了骨骼主要控制哪一部分<br />先自动再手动<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224525267.png" alt="" /></p><ul><li><p>Auto Geometry 自动蒙皮<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224251612.png" alt="" /></p><ul><li><p>OUtline Detail 边缘细节，值越大，轮廓越细致</p></li><li><p>Alpha Tolerance 阿尔法公差值，控制蒙皮细节</p></li><li><p>Subdivide 细化程度，控制蒙皮细节</p></li><li><p>Weights 是否自动设置权重，一般勾选</p></li></ul></li><li><p>Edit Geometry 编辑蒙皮</p></li><li><p>Create Vertex 创建顶点<br />注意创建的顶点越多计算量越大</p></li><li><p>Create Edge 创建边线</p></li><li><p>Split Edge 拆分边，用一个新的顶点分离一个边</p></li></ul><h3 id="weights-权重相关"><a class="markdownIt-Anchor" href="#weights-权重相关"></a> Weights 权重相关</h3><p>决定了当骨骼动时如何印象顶点和边<br />比如控制如下图的顶点受到两边骨骼的程度<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318224935264.png" alt="" /></p><ul><li><p>Auto Weights 自动赋予权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225100513.png" alt="" /></p></li><li><p>Weight Slider 编辑顶点和边的权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230036163.png" alt="" /></p><ul><li><p>Mode：计算模式<br />Add And Subtract：加减法 （一般选这个）<br />Grow And Shrink：增长和收缩<br />Smooth：平滑</p></li><li><p>Bone：设置权重的骨骼</p></li><li><p>Normalize：标准化设置</p></li><li><p>Amount：数量级（一般不会改不然如下）<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225407930.png" alt="" /></p></li><li><p>Vertex Weight：顶点权重 对应的骨骼</p></li></ul></li><li><p>Weight Brush 用笔刷赋予权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230105754.png" alt="" /><br />直接选个骨骼之后直接刷顶点权重<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225842012.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318225859890.png" alt="" /></p><ul><li><ul><li>Size：笔刷大小</li></ul></li><li><p>Hardness：笔刷强度，越大效果越明显</p></li><li><p>Step：步数</p></li></ul></li><li><p>Bone Influence 选择骨骼用的Sprite<br />主要用于在psb图片中使用 骨骼控制点的图片关联<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230137062.png" alt="" /></p></li></ul><h3 id="visibility"><a class="markdownIt-Anchor" href="#visibility"></a> Visibility</h3><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230409363.png" alt="" /><br />切换选定精灵或骨骼的可见性</p><ul><li><p>左侧拖动条 控制编辑时骨骼透明度</p></li><li><p>右侧拖动条 控制编辑时权重透明度</p></li><li><p>下方列表 浏览各骨骼名和骨骼层级信息</p></li></ul><h1 id="骨骼动画的使用"><a class="markdownIt-Anchor" href="#骨骼动画的使用"></a> 骨骼动画的使用</h1><p>把设置好骨骼的图片丢到场景里，添加SpriteSKin脚本，点击CreateBones按钮，骨骼会自动关联<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230705614.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230723614.png" alt="" /></p><p>打开Animator的窗口来创建动画，调整各个骨骼子物体位置来生成动画效果<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230815265.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/35.%E5%8D%95%E5%BC%A0%E5%9B%BE%E7%89%87%E9%AA%A8%E9%AA%BC%E7%BC%96%E8%BE%91/file-20250318230928345.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是2d骨骼动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是2d骨骼动画&quot;&gt;&lt;/a&gt; 什么是2d骨骼动画&lt;/h1&gt;
&lt;p&gt;首先回顾一下序列帧动画&lt;br /&gt;
传统的序列帧动画为了达到好的动画效果&lt;br /&gt;
理论上来说，图片</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d骨骼动画" scheme="http://example.com/tags/2d%E9%AA%A8%E9%AA%BC%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d Animation" scheme="http://example.com/tags/2d-Animation/"/>
    
  </entry>
  
  <entry>
    <title>34.2D序列帧动画</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/</id>
    <published>2025-03-18T11:42:08.000Z</published>
    <updated>2025-03-18T12:20:13.512Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是序列帧动画"><a class="markdownIt-Anchor" href="#什么是序列帧动画"></a> 什么是序列帧动画</h1><p>我们最常见的序列帧动画就是我们看的日本动画片，以固定时间间隔按序列切换图片就是序列帧动画的本质。当固定时间间隔足够短时，我们肉眼就会认为图片是连续动态的，进而形成动画（会动的画面）。<br />它的本质和游戏的帧率概念有点类似。<br />原理就是在一个循环中按一定时间间隔不停地切换显示的图片。</p><h1 id="代码制作序列帧动画"><a class="markdownIt-Anchor" href="#代码制作序列帧动画"></a> 代码制作序列帧动画</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318194732966.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_2D</span>动画_2<span class="title">D</span>序列帧动画 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Sprite[] sprs; <span class="comment">//存放序列帧图片</span></span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr; <span class="comment">//显示图片</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> time = <span class="number">0</span>; <span class="comment">//记录帧间隔时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> nowIndex = <span class="number">0</span>; <span class="comment">//记录当前显示的图片索引</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">        sr.sprite = sprs[nowIndex];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//每一次增加帧间隔时间</span></span><br><span class="line">        time += Time.deltaTime;</span><br><span class="line">        <span class="comment">//当帧间隔时间达到某一个条件时就切换图片</span></span><br><span class="line">        <span class="keyword">if</span> (time &gt;= <span class="number">0.03f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//切换图片</span></span><br><span class="line">            nowIndex++;</span><br><span class="line">            <span class="comment">//记得从头显示</span></span><br><span class="line">            sr.sprite = sprs[nowIndex % sprs.Length];</span><br><span class="line">            time = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="animation窗口制作序列帧动画"><a class="markdownIt-Anchor" href="#animation窗口制作序列帧动画"></a> Animation窗口制作序列帧动画</h1><h2 id="方法一"><a class="markdownIt-Anchor" href="#方法一"></a> 方法一</h2><p>创建一个空物体<br />创建一个动画<br />直接将某一个动作的序列帧拖入窗口中</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195246106.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195341867.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195629574.png" alt="" /></p><h2 id="方法二"><a class="markdownIt-Anchor" href="#方法二"></a> 方法二</h2><p>适合第一次用<br />直接将图片拖入Hierarchy层级窗口中</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195806177.png" alt="" /></p><p>默认你要创建序列帧动画<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318195849020.png" alt="" /></p><h1 id="利用animator进行动画控制"><a class="markdownIt-Anchor" href="#利用animator进行动画控制"></a> 利用Animator进行动画控制</h1><p>创建好动画，设置好切换参数和条件等<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318200018836.png" alt="" /></p><p>代码中拖拽得到动画控制器</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_2D</span>动画_2<span class="title">D</span>序列帧动画 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Animator animator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space)) </span><br><span class="line">            animator.SetBool(<span class="string">&quot;isDown&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (Input.GetKeyUp(KeyCode.Space))</span><br><span class="line">            animator.SetBool(<span class="string">&quot;isDown&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在之前2D相关练习题的基础上，为控制的对象加上序列帧动画</p><p>给机器人创建待机动画，找到待机动画图集，拖入图片进去。注意图集要设置底部为轴心<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201131302.png" alt="" /></p><p>给机器人创建走路动画，找到待机走路图集，拖入图片进去。注意图集要设置底部为轴心<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201145303.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201151840.png" alt="" /></p><p>给机器人创建跳跃动画，找到跳跃动画图集，拖入图片进去。注意图集要设置底部为轴心</p><p>创建x，y速度的int动画参数，并且添加过渡和切换条件。x速度等不等于0决定是Idle状态还是Walk状态，y速度等不等于0决定是跳跃状态还是非跳跃状态。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201334470.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/34.2D%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/file-20250318201828943.png" alt="" /></p><p><strong>一般不用y的速度来判断是否播放跳跃动画，可以和地面碰撞器判断</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson37_</span>练习题_<span class="title">PlayerObject</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明一个浮点数类型变量 h;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> h;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明 SpriteRenderer 类型变量 sr;</span></span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rigidBody2D;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> frontH;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 声明 Animator 类型变量 animator;</span></span><br><span class="line">    <span class="keyword">private</span> Animator animator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line"></span><br><span class="line">        rigidBody2D = <span class="keyword">this</span>.GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line"></span><br><span class="line">        animator = <span class="keyword">this</span>.GetComponent&lt;Animator&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        h = Input.GetAxisRaw(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置动画参数 xSpeed 为 h 的整数值</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;xSpeed&quot;</span>, (<span class="built_in">int</span>)h);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置动画参数 ySpeed 为刚体 y 方向速度的整数值</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;ySpeed&quot;</span>, Mathf.CeilToInt(rigidBody2D.velocity.y));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (h != <span class="number">0</span>)</span><br><span class="line">            rigidBody2D.velocity = <span class="keyword">new</span> Vector2(h * moveSpeed, rigidBody2D.velocity.y);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject obj = Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;BulletObj&quot;</span>), <span class="keyword">this</span>.transform.position + <span class="keyword">new</span> Vector3(sr.flipX ? <span class="number">-0.3f</span> : <span class="number">0.3f</span>, <span class="number">0.5f</span>, <span class="number">0</span>), Quaternion.identity);</span><br><span class="line"></span><br><span class="line">            obj.GetComponent&lt;BulletObj&gt;().ChangeMoveDir(sr.flipX ? Vector3.left : Vector3.right);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当按下 J 键时，给刚体施加一个向上的瞬时力</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.J))</span><br><span class="line">        &#123;</span><br><span class="line">            rigidBody2D.AddForce(Vector2.up * <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是序列帧动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是序列帧动画&quot;&gt;&lt;/a&gt; 什么是序列帧动画&lt;/h1&gt;
&lt;p&gt;我们最常见的序列帧动画就是我们看的日本动画片，以固定时间间隔按序列切换图片就是序列帧动画的本质。当固定时间间</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="2d动画" scheme="http://example.com/tags/2d%E5%8A%A8%E7%94%BB/"/>
    
    <category term="2d序列帧动画" scheme="http://example.com/tags/2d%E5%BA%8F%E5%88%97%E5%B8%A7%E5%8A%A8%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>33.AnimatorController动画控制器</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/</id>
    <published>2025-03-18T08:24:26.000Z</published>
    <updated>2025-03-18T11:38:34.906Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建动画状态机"><a class="markdownIt-Anchor" href="#创建动画状态机"></a> 创建动画状态机</h1><p>直接选择场景物体后在动画窗口点Create <a href="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/#%E5%88%9B%E5%BB%BA%E5%8A%A8%E7%94%BB" title="30.创建和编辑Animation动画文件">创建动画</a><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164330520.png" alt="" /></p><p>还可以手动在Project窗口创建动画控制器<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164152657.png" alt="" /><br />新建的 Animator 文件是空的，可以拖 Animation 动画文件进去。</p><h1 id="动画控制器状态机-编辑面板"><a class="markdownIt-Anchor" href="#动画控制器状态机-编辑面板"></a> 动画控制器（状态机） 编辑面板</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318164828800.png" alt="" /></p><h2 id="左侧面板"><a class="markdownIt-Anchor" href="#左侧面板"></a> 左侧面板</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318165859455.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318165935117.png" alt="" /><br />Layers：动画层级页签，为动画添加更多的层级，层级高的动画播放会覆盖层级低的<br />Parameters：参数页签，为动画状态机添加控制状态切换的参数 眼睛图标：显隐左侧面板</p><h2 id="右侧面板"><a class="markdownIt-Anchor" href="#右侧面板"></a> 右侧面板</h2><p>网格化布局区域：<br />主要用于编辑状态之前的切换关系</p><ol><li>窗口中的每一个矩形表示一个状态</li><li>窗口中的每一个箭头表示一个切换条件</li></ol><p>默认三大矩形：<br />绿色Entry矩形：进入状态机流程<br />红色Exit矩形：退出状态机流程<br />Any State：任意状态，代表状态机中的任意状态</p><p>人为添加矩形：<br />橙色矩形：一开始的默认状态动画，和Entry相连 表示一开始播放的动画<br />灰色矩形：自己添加的某一种动作状态</p><h1 id="添加动画"><a class="markdownIt-Anchor" href="#添加动画"></a> 添加动画</h1><h2 id="自动添加"><a class="markdownIt-Anchor" href="#自动添加"></a> 自动添加</h2><p>为对象创建动画后会自动将动画添加到状态机中<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170322683.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170335202.png" alt="" /></p><h2 id="直接将动画文件拖入到状态机"><a class="markdownIt-Anchor" href="#直接将动画文件拖入到状态机"></a> 直接将动画文件拖入到状态机</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170441000.png" alt="" /><br />点击状态发现自动就关联了2<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170549398.png" alt="" /><br />可以改名，但关联的还是2<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170752957.png" alt="" /></p><h2 id="直接在窗口里面右键一个状态再关联"><a class="markdownIt-Anchor" href="#直接在窗口里面右键一个状态再关联"></a> 直接在窗口里面右键一个状态再关联</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170917460.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318170933197.png" alt="" /></p><h1 id="添加切换连线"><a class="markdownIt-Anchor" href="#添加切换连线"></a> 添加切换连线</h1><p>对一个矩形右键选择创建过渡。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171027477.png" alt="" /></p><p>添加连线后意味着这两个矩形状态可以进行状态切换，可以给连线设置切换的条件。没有连线的话两个状态不能进行切换。</p><p>选择矩形右键可以把该矩形状态设置为该层的默认状态。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171331769.png" alt="" /></p><h1 id="添加切换条件"><a class="markdownIt-Anchor" href="#添加切换条件"></a> 添加切换条件</h1><p>把左侧面板切换成参数标签，点击加号添加四种参数变量条件。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318171500475.png" alt="" /></p><p>注意这里的Trigger<br />一个布尔参数，当被转换消耗时，由控制器重置（用圆形按钮表示）。可以理解为特殊的 bool 值，当设置为 true 完成切换条件后马上会自动设置为 false。<br />一般用于下面这种有来有回的连线（一但进入Test动画播放完成之后立马会去的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172521220.png" alt="" /></p><h1 id="设置动画间切换条件"><a class="markdownIt-Anchor" href="#设置动画间切换条件"></a> 设置动画间切换条件</h1><p>选择一个连线，点击下方条件列表添加切换条件，点击下拉框会出现我们刚刚设置好的切换条件参数进行选择。同理选择条件框后按减号可以删除。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172004225.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318172026757.png" alt="" /></p><h1 id="animator参数相关"><a class="markdownIt-Anchor" href="#animator参数相关"></a> Animator参数相关</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318192721726.png" alt="" /></p><h2 id="controller对应的动画控制器状态机"><a class="markdownIt-Anchor" href="#controller对应的动画控制器状态机"></a> Controller：对应的动画控制器（状态机）</h2><h2 id="avatar对应的替身配置信息"><a class="markdownIt-Anchor" href="#avatar对应的替身配置信息"></a> Avatar：对应的替身配置信息</h2><p>（之后讲解3D模型时详细讲解）</p><h2 id="apply-root-motion是否启用动画位移更新"><a class="markdownIt-Anchor" href="#apply-root-motion是否启用动画位移更新"></a> Apply Root Motion：是否启用动画位移更新</h2><h2 id="updatemode更新模式一般不修改它"><a class="markdownIt-Anchor" href="#updatemode更新模式一般不修改它"></a> UpdateMode：更新模式（一般不修改它）</h2><p>Normal：正常更新<br />Animate Physics：物理更新<br />Unscaled Time：不受时间缩放影响</p><h2 id="culling-mode裁剪剔除模式"><a class="markdownIt-Anchor" href="#culling-mode裁剪剔除模式"></a> Culling Mode：裁剪剔除模式</h2><p>Always Animate：始终播放动画，即使在屏幕外也不剔除<br />Cull Update Transforms：摄像机没有渲染该物体时，停止位置、IK的写入<br />Cull Completely：摄像机没有渲染物体时，整个动画被完全禁用</p><h1 id="animator-代码控制"><a class="markdownIt-Anchor" href="#animator-代码控制"></a> Animator 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//我们用代码控制状态机切换主要使用的就是Animator提供给我们的API</span></span><br><span class="line"><span class="comment">//我们知道一共有四种切换条件 int float bool trigger</span></span><br><span class="line"><span class="comment">//所以对应的API也是和这四种类型有关系的</span></span><br><span class="line">animator = <span class="keyword">this</span>.GetComponent&lt;Animator&gt;();</span><br></pre></td></tr></table></figure><p><strong>Animator.SetXXX方法 通过状态机条件切换动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过状态机条件切换动画</span></span><br><span class="line"><span class="comment">//设置动画参数状态</span></span><br><span class="line">animator.SetFloat(<span class="string">&quot;条件名&quot;</span>, <span class="number">1.2f</span>);</span><br><span class="line">animator.SetInteger(<span class="string">&quot;条件名&quot;</span>, <span class="number">5</span>);</span><br><span class="line">animator.SetBool(<span class="string">&quot;条件名&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">animator.SetTrigger(<span class="string">&quot;条件名&quot;</span>);</span><br></pre></td></tr></table></figure><p><strong>Animator.GetXXX方法 获得动画参数状态</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获得动画参数状态</span></span><br><span class="line">animator.GetFloat(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line">animator.GetInteger(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line">animator.GetBool(<span class="string">&quot;条件名&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//直接切换动画 除非特殊情况 不然一般不使用</span></span><br><span class="line"><span class="comment">//animator.Play(&quot;状态名&quot;);</span></span><br><span class="line"><span class="comment">//注意：状态名和动画名不一样 动画名拖进来默认名字就是状态名 但是可以修改的和动画名不一样的</span></span><br></pre></td></tr></table></figure><p>假如切换时发现有延迟，可能是因为连线切换的参数中勾选了有推出时间，注意的话会播完上个动画在继续播下个动画。取消勾选即可。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/33.AnimatorController%E5%8A%A8%E7%94%BB%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250318193600768.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建动画状态机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建动画状态机&quot;&gt;&lt;/a&gt; 创建动画状态机&lt;/h1&gt;
&lt;p&gt;直接选择场景物体后在动画窗口点Create &lt;a href=&quot;/2025/03/18/%E6%B8%B8%E6%8</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>32.有限状态机概念</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/32.%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A6%82%E5%BF%B5/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/32.%E6%9C%89%E9%99%90%E7%8A%B6%E6%80%81%E6%9C%BA%E6%A6%82%E5%BF%B5/</id>
    <published>2025-03-18T08:20:28.000Z</published>
    <updated>2025-03-18T08:23:07.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是有限状态机"><a class="markdownIt-Anchor" href="#什么是有限状态机"></a> 什么是有限状态机</h1><p>有限状态机（Finite-state machine, FSM）是表示有限个状态以及在这些状态之间的转移和动作等行为的数学模型。</p><p>有限：表示是有限度的不是无限的。<br />状态：指所拥有的所有状态。<br />举例说明：<br />假设我们人会做很多个动作，也就是有很多种状态，这些状态包括站立、走路、跑步、攻击、防守、睡觉等等。我们每天都会在这些状态中切换，而且这些状态虽然多但是是有限的。当达到某种条件时，我们就会在这些状态中进行切换，而且这种切换时随时可能发生的。</p><h1 id="有限状态机对于我们的意义"><a class="markdownIt-Anchor" href="#有限状态机对于我们的意义"></a> 有限状态机对于我们的意义</h1><p>有限状态机在游戏开发中具有重要意义，许多功能系统都是有限状态机。<br />最典型的状态机系统包括动作系统和AI（人工智能）系统。<br />例如，动作系统满足某个条件时切换一个动作，且动作是有限的；AI系统满足某个条件时切换一个状态，且状态是有限的。</p><h1 id="最简单的状态机实现"><a class="markdownIt-Anchor" href="#最简单的状态机实现"></a> 最简单的状态机实现</h1><p>最简单的状态机实现代码就是基于switch的实现。<br />假设我们只有一个值来控制当前玩家的状态：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> animName = <span class="string">&quot;idle&quot;</span>;</span><br><span class="line"><span class="keyword">switch</span> (animName)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;idle&quot;</span>:</span><br><span class="line">        <span class="comment">// 待机动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;move&quot;</span>:</span><br><span class="line">        <span class="comment">// 移动动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;run&quot;</span>:</span><br><span class="line">        <span class="comment">// 跑步动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;atk&quot;</span>:</span><br><span class="line">        <span class="comment">// 攻击动作逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结</strong><br />在游戏开发中，某些系统中存在有限种状态的切换变化时，我们可以使用有限状态机的设计思路来进行逻辑编写。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是有限状态机&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是有限状态机&quot;&gt;&lt;/a&gt; 什么是有限状态机&lt;/h1&gt;
&lt;p&gt;有限状态机（Finite-state machine, FSM）是表示有限个状态以及在这些状态之间的转移和动</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>31.老动画系统</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/</id>
    <published>2025-03-18T07:25:00.000Z</published>
    <updated>2025-03-18T08:14:24.204Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是老动画系统"><a class="markdownIt-Anchor" href="#什么是老动画系统"></a> 什么是老动画系统</h1><p>Unity中有两套动画系统：<br />新：Mecanim动画系统——主要用Animator组件控制动画。<br />老：Animation动画系统——主要用Animation组件控制动画（Unity4之前的版本可能会用到）。<br />目前我们为对象在Animation窗口创建的动画都会被新动画系统支配。有特殊需求或者针对一些简易动画，才会使用老动画系统。</p><h1 id="老动画系统控制动画播放"><a class="markdownIt-Anchor" href="#老动画系统控制动画播放"></a> 老动画系统控制动画播放</h1><p>注意：<br />在创建动画之前为对象添加Animation组件之后再制作动画。<br />这时制作出的动画和之前的动画格式是有区别的。</p><p>使用老动画系统来创建动画要先給物体添加一个Animation脚本，挂载过后Unity就会认为这个对象要使用老动画系统。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318152811435.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153242647.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153345943.png" alt="" /></p><p><strong>编辑和新动画系统一样</strong><br />动画文件格式不一样</p><h1 id="参数相关"><a class="markdownIt-Anchor" href="#参数相关"></a> 参数相关</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318153830325.png" alt="" /><br />Animation：默认播放的动画。（注意拖选的一定是老动画系统的动画文件）<br />Animations：该动画组件可以控制的所有动画<br />Play AutoMatically：是否一开始就自动播放默认动画。<br />Animate Physics：动画是否与物理交互。<br />Culling Type：决定什么时候不播放动画。</p><ul><li>Always Animate：始终播放。</li><li>Based On Renderers：基于默认动画姿势剔除，比如动画在屏幕外可能就不播了。</li></ul><p><strong>老动画文件参数</strong><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318154909074.png" alt="" /></p><p>Default：读取设置得更高的默认重复模式<br />Once：播放一次就停止<br />Loop：从头到尾不停循环播放<br />PingPong：从头到尾从尾到头不停播放<br />ClampForever：播放结束会停在最后一帧，并且会一直播放最后一帧（相当于状态不停止），表现效果和Once一样，但是逻辑处理上不同</p><h1 id="代码控制播放"><a class="markdownIt-Anchor" href="#代码控制播放"></a> 代码控制播放</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Animation animation;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    animation = <span class="keyword">this</span>.GetComponent&lt;Animation&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.Play方法 播放动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//播放没有混合的动画。</span></span><br><span class="line"><span class="comment">//会直接生硬的切换动画 假如播放到一半切换动画 回强行停止第一个播放的动画 切换到第二个播放动画的初始状态 进行播放</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha1))</span><br><span class="line">&#123;</span><br><span class="line">    animation.Play(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha2))</span><br><span class="line">&#123;</span><br><span class="line">    animation.Play(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.CrossFade方法 淡入播放,自动产生过渡效果</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在后续 time 秒的时间段内，使名称为 animation 的动画淡入，使其他动画淡出。</span></span><br><span class="line"><span class="comment">//会先淡出把状态慢慢变成要播放的动画的初始在状态，再播动画</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha3))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//当你当前的动画的状态和播放动画的开始状态不一样的时候就会产生过渡效果</span></span><br><span class="line">    animation.CrossFade(<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    <span class="comment">//animation.Play(&quot;3&quot;);</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.PlayQueued方法 前一个播完直接再播放下一个</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在先前的动画播放完毕后再播放动画。</span></span><br><span class="line"><span class="comment">//可以理解为把动画加到队列中 等上一个动画播放完再播 会生硬的切换初始状态</span></span><br><span class="line"><span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Alpha4))</span><br><span class="line">&#123;</span><br><span class="line">    animation.PlayQueued(<span class="string">&quot;2&quot;</span>);</span><br><span class="line">    <span class="comment">// animation.CrossFadeQueued(&quot;2&quot;);   // 有过渡效果</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.Stop方法 停止播放所有动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animation.Stop();</span><br></pre></td></tr></table></figure><p><strong>Animation.IsPlaying方法 是否在播放某个动画</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( animation.IsPlaying(<span class="string">&quot;1&quot;</span>) )</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Animation.wrapMode变量 播放模式设置</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">animation.wrapMode = WrapMode.Loop;<span class="comment">//设置成循环播放</span></span><br></pre></td></tr></table></figure><p><strong>其它（了解即可，新动画系统中会详细讲解）</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//层级和权重以及混合（老动画系统需要通过代码来达到动画的遮罩、融合等效果）</span></span><br><span class="line"><span class="comment">//设置层级</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].layer = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//设置权重</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].weight = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//混合模式 叠加还是混合</span></span><br><span class="line">animation[<span class="string">&quot;1&quot;</span>].blendMode = AnimationBlendMode.Additive;</span><br><span class="line"><span class="comment">//设置混组相关骨骼信息</span></span><br><span class="line">animation[<span class="string">&quot;&quot;</span>].AddMixingTransform();</span><br></pre></td></tr></table></figure><h1 id="动画事件"><a class="markdownIt-Anchor" href="#动画事件"></a> 动画事件</h1><p>动画事件主要用于处理当动画播放到某一时刻想要触发某些逻辑，比如进行伤害检测、发射子弹、特效播放等等。</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318160745637.png" alt="" /></p><p>在Animation窗口选择某一动画的某一帧下，点击添加动画事件的按钮添加动画事件。<br />添加后可以在时间轴看到一个蓝色的条。蓝色的条可以在时间轴任意拖动。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318160936777.png" alt="" /></p><p>点击可以在右侧Inspector窗口看见动画事件相关参数，现在还没有绑定任何事件。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318161048697.png" alt="" /></p><p>在挂载到执行动画对象上的代码上添加用于动画事件关联的函数。函数可以有参数，可以是int，float，GameObject类型。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AnimationEvent</span>(<span class="params">GameObject go</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;动画事件触发&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/31.%E8%80%81%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/file-20250318161142768.png" alt="" /></p><p>总结<br />老动画系统主要用于处理老版本项目和简单的一些自制动画。<br />新项目都不建议大家使用了。<br />关键组件：Animation</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是老动画系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是老动画系统&quot;&gt;&lt;/a&gt; 什么是老动画系统&lt;/h1&gt;
&lt;p&gt;Unity中有两套动画系统：&lt;br /&gt;
新：Mecanim动画系统——主要用Animator组件控制动画。</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>30.创建和编辑Animation动画文件</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/</id>
    <published>2025-03-18T02:30:47.000Z</published>
    <updated>2025-03-18T07:22:10.432Z</updated>
    
    <content type="html"><![CDATA[<h1 id="创建动画"><a class="markdownIt-Anchor" href="#创建动画"></a> 创建动画</h1><ol><li>在场景中选中想要创建动画的对象<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103615875.png" alt="" /></li><li>在Animation窗口中点击创建</li><li>选择动画文件将要保存到的位置<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103636026.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318103716509.png" alt="" /><br /><strong>保存Animation动画文件时，Unity会帮助我们完成以下操作</strong><br />创建一个 Animator Controller（动画控制器或称之为动画状态机） 资源（新动画系统）<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104106014.png" alt="" /></li></ol><p>将新创建的动画文件添加到Animator Controller动画状态机中<br />双击打开<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104134104.png" alt="" /></p><p>为场景上的对象添加Animator组件<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104243981.png" alt="" /></p><p>为Animator组件关联创建的Animator Controller文件<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318104325362.png" alt="" /></p><h1 id="面板变化"><a class="markdownIt-Anchor" href="#面板变化"></a> 面板变化</h1><h2 id="左侧面板"><a class="markdownIt-Anchor" href="#左侧面板"></a> 左侧面板</h2><p>多出一个可以选择当前动画的下拉列表<br />可以在这里创建新动画和切换动画<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318105025023.png" alt="" /><br />多出一个可以添加变化属性的按钮<br />在这里你可以任意添加你想要在动画中变化的脚本变量<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318105039893.png" alt="" /></p><h2 id="右侧面板"><a class="markdownIt-Anchor" href="#右侧面板"></a> 右侧面板</h2><p>时间轴可以拖动<br />注意： 时间轴上的单位为n秒n帧 一格代表一帧（并不是秒）</p><p>选择关键帧右键</p><h1 id="关键帧模式下编辑动画"><a class="markdownIt-Anchor" href="#关键帧模式下编辑动画"></a> 关键帧模式下编辑动画</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141159005.png" alt="" /></p><p>点击录制按钮，进入录制状态。就可以随便选择一个时间点给他添加关键帧。但是点击添加关键帧按钮会发现没有用。因为没有告诉这个动画会改变物体的哪些属性和变量。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141501712.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141326568.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318141626169.png" alt="" /><br />还有一种添加关键帧的方法，点击录制按钮后直接改Inspector窗口的值，会自动在时间轴添加关键帧<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142228306.png" alt="" /><br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142248079.png" alt="" /></p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142257477.png" alt="" /></p><h1 id="曲线模式下编辑动画"><a class="markdownIt-Anchor" href="#曲线模式下编辑动画"></a> 曲线模式下编辑动画</h1><p>曲线模式可以控制非匀速变化<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142432464.png" alt="" /></p><p>在曲线模式下可以直接右键添加关键帧，添加完关键帧后切换成关键帧模式也能看到刚刚添加的关键帧。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142514741.png" alt="" /></p><p>在关键帧模式下或者曲线模式下，选择关键帧右键<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318142712544.png" alt="" /><br />Add Key：添加关键帧<br />Delete Key：删除关键帧<br />Clamped Auto：切线模式，自动设置切线<br />Auto：旧版切线模式，和Clamped Auto基本类似，主要用于老动画系统，建议不使用除非是老动画<br />Free Smooth：自由设置切线<br />Flat：切线设置为水平<br />Broken：单独控制左右曲线切线<br />Free：自由设置<br />Linear：直线<br />Constant：常量切换<br />Weighted：权重切换，可以拉长缩短切线</p><h1 id="动画文件界面参数"><a class="markdownIt-Anchor" href="#动画文件界面参数"></a> 动画文件界面参数</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318143203185.png" alt="" /><br />Loop Time：是否是循环动画（在动画结尾时重新开始）<br />Loop Pose：无缝循环运动<br />Cycle Offset：循环动画在其他时间开始时的周期偏移</p><p>对Animation打开Debug模式，注意Sample Rate帧率（采样率），和 Wrap Mode动画播放模式（贴图间拼接模式）这两个参数<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318143444220.png" alt="" /><br />在Animation里面改和在Animation文件改一样的<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318152104533.png" alt="" /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/30.%E5%88%9B%E5%BB%BA%E5%92%8C%E7%BC%96%E8%BE%91Animation%E5%8A%A8%E7%94%BB%E6%96%87%E4%BB%B6/file-20250318152109975.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;创建动画&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建动画&quot;&gt;&lt;/a&gt; 创建动画&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;在场景中选中想要创建动画的对象&lt;br /&gt;
&lt;img src=&quot;/2025/03/18/%E6%B8%B8%E6%88%</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>29.认识Animation动画窗口</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/</id>
    <published>2025-03-18T02:11:57.000Z</published>
    <updated>2025-03-18T02:31:22.151Z</updated>
    
    <content type="html"><![CDATA[<h1 id="打开animation窗口"><a class="markdownIt-Anchor" href="#打开animation窗口"></a> 打开Animation窗口</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318101915514.png" alt="" /></p><h1 id="animation窗口是用来干嘛的"><a class="markdownIt-Anchor" href="#animation窗口是用来干嘛的"></a> Animation窗口是用来干嘛的</h1><p>Animation窗口直译就是动画窗口，主要用于在Unity内部创建和修改动画。所有在场景中的对象都可以通过Animation窗口为其制作动画。</p><p><strong>原理：</strong><br />制作动画时：记录在固定时间点对象挂载的脚本的变量变化。<br />播放动画时：将制作动画时记录的数据在固定时间点进行改变，产生动画效果。</p><h1 id="动画关键词说明"><a class="markdownIt-Anchor" href="#动画关键词说明"></a> 动画关键词说明</h1><h2 id="动画时间轴"><a class="markdownIt-Anchor" href="#动画时间轴"></a> 动画时间轴</h2><p>每一个动画文件都有自己的一个生命周期，从动画开始到结束。我们可以在动画时间轴上编辑每一个动画生命周期中的变化。</p><h2 id="动画中的帧"><a class="markdownIt-Anchor" href="#动画中的帧"></a> 动画中的帧</h2><p>假设某个动画的帧率为60帧每秒，意味着该动画1秒钟最多会有60次改变机会。每一帧的间隔时间是 1s/60 ≈ 16.67毫秒。也就是说，我们最快可以每16.67毫秒改变一次对象状态。</p><h2 id="关键帧"><a class="markdownIt-Anchor" href="#关键帧"></a> 关键帧</h2><p>动画在时间轴上的某一个时间节点上处于的状态。</p><h1 id="animation-面板功能"><a class="markdownIt-Anchor" href="#animation-面板功能"></a> Animation 面板功能</h1><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318103004792.png" alt="" /></p><h2 id="面板左侧"><a class="markdownIt-Anchor" href="#面板左侧"></a> 面板左侧</h2><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102604741.png" alt="" /><br />从左至右：<br />1.预览模式（开关）<br />2.录制模式（开关）打开后预览模式默认开启<br />3.回到动画开头<br />4.上一关键帧（快捷键：键盘逗号）<br />5.播放动画（快捷键：键盘Alt+逗号）<br />6.下一关键帧（快捷键：键盘句号）<br />7.回到动画结尾（快捷键：键盘Alt+句号）<br />8.当前处于第几帧</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102646894.png" alt="" /><br />从左至右：<br />Dopesheet：关键帧模式<br />Curves：曲线模式</p><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102745612.png" alt="" /><br />从左至右：<br />按选择筛选<br />添加关键帧<br />添加事件</p><h2 id="面板右侧"><a class="markdownIt-Anchor" href="#面板右侧"></a> 面板右侧</h2><p>动画时间轴面板：当编辑动画时，会在该面板上编辑关键帧等信息<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/29.%E8%AE%A4%E8%AF%86Animation%E5%8A%A8%E7%94%BB%E7%AA%97%E5%8F%A3/file-20250318102921286.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;打开animation窗口&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#打开animation窗口&quot;&gt;&lt;/a&gt; 打开Animation窗口&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/18/%E6%B8%B8%E6%88%8</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="核心系统" scheme="http://example.com/tags/%E6%A0%B8%E5%BF%83%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="动画系统" scheme="http://example.com/tags/%E5%8A%A8%E7%94%BB%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>28.瓦片地图代码控制</title>
    <link href="http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/"/>
    <id>http://example.com/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/</id>
    <published>2025-03-18T01:49:51.000Z</published>
    <updated>2025-03-18T02:08:34.065Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取tilemap和tilebase和grid"><a class="markdownIt-Anchor" href="#获取tilemap和tilebase和grid"></a> 获取Tilemap和TileBase和Grid</h1><p>Tilemap组件：用于管理瓦片地图。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095038664.png" alt="" /></p><p>TileBase组件：单张瓦片资源对象基类。<br />Grid组件：用于坐标转换。<br /><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095207503.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.Tilemaps;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 瓦片地图信息，可以通过它得到瓦片格子</span></span><br><span class="line"><span class="keyword">public</span> Tilemap tilemap;</span><br><span class="line"><span class="comment">// 格子位置相关控制，可以通过它进行坐标转换</span></span><br><span class="line"><span class="keyword">public</span> Grid grid;</span><br><span class="line"><span class="comment">// 瓦片资源基类，通过它可以得到瓦片资源</span></span><br><span class="line"><span class="keyword">public</span> TileBase tileBase;</span><br></pre></td></tr></table></figure><p><img src="/2025/03/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/28.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E4%BB%A3%E7%A0%81%E6%8E%A7%E5%88%B6/file-20250318095440605.png" alt="" /></p><h1 id="重要api"><a class="markdownIt-Anchor" href="#重要api"></a> 重要API</h1><h2 id="tilemapclearalltiles方法-清空瓦片地图"><a class="markdownIt-Anchor" href="#tilemapclearalltiles方法-清空瓦片地图"></a> Tilemap.ClearAllTiles方法 清空瓦片地图</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Tilemap类中的ClearAllTiles方法 清空瓦片地图</span></span><br><span class="line"><span class="comment">//清除 Tilemap 中放置的所有瓦片。</span></span><br><span class="line">tilemap.ClearAllTiles();</span><br></pre></td></tr></table></figure><h2 id="tilemapgettile方法-获取指定坐标格子的瓦片格子"><a class="markdownIt-Anchor" href="#tilemapgettile方法-获取指定坐标格子的瓦片格子"></a> Tilemap.GetTile方法 获取指定坐标格子的瓦片格子</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//传入的是Vector3Int类型</span></span><br><span class="line"><span class="comment">//根据给定的瓦片地图中某个单元格的 XYZ 坐标，获取瓦片。</span></span><br><span class="line">TileBase tempTileBase = tilemap.GetTile(Vector3Int.zero);</span><br><span class="line">print(tempTileBase);</span><br></pre></td></tr></table></figure><h2 id="tilemapsettile方法-设置瓦片和删除瓦片"><a class="markdownIt-Anchor" href="#tilemapsettile方法-设置瓦片和删除瓦片"></a> Tilemap.SetTile方法 设置瓦片和删除瓦片</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据给定的瓦片地图中某个单元格的 XYZ 坐标，设置瓦片。</span></span><br><span class="line"><span class="comment">//设置瓦片</span></span><br><span class="line">tilemap.SetTile(<span class="keyword">new</span> Vector3Int(<span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>), tileBase);</span><br><span class="line"><span class="comment">//删除瓦片</span></span><br><span class="line">tilemap.SetTile(<span class="keyword">new</span> Vector3Int(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="literal">null</span>);</span><br></pre></td></tr></table></figure><h2 id="tilemapswaptile方法-替换瓦片"><a class="markdownIt-Anchor" href="#tilemapswaptile方法-替换瓦片"></a> Tilemap.SwapTile方法 替换瓦片</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将 changeTile 的所有现有瓦片交换为 newTile 并刷新所有交换的瓦片。</span></span><br><span class="line"><span class="comment">//是将瓦片资源图片替换的意思 资源所有使用到瓦片资源的图片都会进行变化</span></span><br><span class="line">tilemap.SwapTile(tempTileBase, tileBase);</span><br></pre></td></tr></table></figure><h2 id="tilemapworldtocell方法-世界坐标转格子坐标"><a class="markdownIt-Anchor" href="#tilemapworldtocell方法-世界坐标转格子坐标"></a> Tilemap.WorldToCell方法 世界坐标转格子坐标</h2><p>将世界位置转换为单元格位置。<br />传入的参数是Vector3类型世界坐标<br />我们可以先屏幕坐标转世界坐标，再世界坐标转格子坐标</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;获取tilemap和tilebase和grid&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#获取tilemap和tilebase和grid&quot;&gt;&lt;/a&gt; 获取Tilemap和TileBase和Grid&lt;/h1&gt;
&lt;p&gt;Tilemap组件</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>27.瓦片地图扩展包</title>
    <link href="http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/"/>
    <id>http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/</id>
    <published>2025-03-16T12:42:41.000Z</published>
    <updated>2025-03-18T01:42:19.208Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导入瓦片地图扩展包"><a class="markdownIt-Anchor" href="#导入瓦片地图扩展包"></a> 导入瓦片地图扩展包</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250316204332220.png" alt="" /></p><p>Project右键<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317103308339.png" alt="" /></p><h1 id="新增瓦片类型"><a class="markdownIt-Anchor" href="#新增瓦片类型"></a> 新增瓦片类型</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/%E5%AE%98%E6%96%B9%E6%8B%93%E5%B1%95%E5%8C%85%E2%80%94%E6%96%B0%E5%A2%9E%E7%93%A6%E7%89%87%E7%B1%BB%E5%9E%8B.png" alt="" /></p><h2 id="规则瓦片-rule-tile-hexagonal-isometric"><a class="markdownIt-Anchor" href="#规则瓦片-rule-tile-hexagonal-isometric"></a> 规则瓦片 Rule Tile (Hexagonal、Isometric)</h2><h3 id="default-sprite默认图片"><a class="markdownIt-Anchor" href="#default-sprite默认图片"></a> Default Sprite：默认图片</h3><h3 id="default-gameobject-默认游戏对象"><a class="markdownIt-Anchor" href="#default-gameobject-默认游戏对象"></a> Default GameObject ：默认游戏对象</h3><h3 id="default-collider默认碰撞器规则"><a class="markdownIt-Anchor" href="#default-collider默认碰撞器规则"></a> Default Collider：默认碰撞器规则</h3><h3 id="tiling-rules平铺规则-可以自己添加删除"><a class="markdownIt-Anchor" href="#tiling-rules平铺规则-可以自己添加删除"></a> Tiling Rules：平铺规则 可以自己添加删除</h3><p>当满足x的地方没图，绿的地方有图就会使用右边选择的图<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317103845768.png" alt="" /><br />将RuleTile规则瓦片拖入到调色板中，在场景绘制时就会有相应的规则</p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104104864.png" alt="" /></p><p>对应情况的瓦片可以关联游戏对象，但是一般不会关联<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104518207.png" alt="" /></p><p>还可以更改Output来设置随机输出的图片<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104335226.png" alt="" /><br />输出类型改成动画模式的话可以关联多张图片，出现当前图片时会在多张图片按一定速度进行顺序轮播，看起来就像动画<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104414526.png" alt="" /></p><h2 id="动画瓦片-animated-tile"><a class="markdownIt-Anchor" href="#动画瓦片-animated-tile"></a> 动画瓦片 Animated Tile</h2><p>可以指定序列帧，产生可以播放序列帧动画的瓦片<br />角色一般不用这个，角色一般用2d对象去做，一般用场景上随风飘扬的小草什么的</p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317104847997.png" alt="" /></p><p>设置好了把瓦片拖拽文件拖到平铺调色板，在拖到场景里，场景里的动画瓦片就会不停的播放了。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111606786.png" alt="" /></p><h3 id="number-of-animated-sprites动画有多少张图构成"><a class="markdownIt-Anchor" href="#number-of-animated-sprites动画有多少张图构成"></a> Number Of Animated Sprites：动画有多少张图构成</h3><h3 id="minimum-speed最小播放速度"><a class="markdownIt-Anchor" href="#minimum-speed最小播放速度"></a> Minimum Speed：最小播放速度</h3><h3 id="maximum-speed最大播放速度"><a class="markdownIt-Anchor" href="#maximum-speed最大播放速度"></a> Maximum Speed：最大播放速度</h3><h3 id="start-time开始播放的时间"><a class="markdownIt-Anchor" href="#start-time开始播放的时间"></a> Start Time：开始播放的时间</h3><h3 id="strat-frame从那一帧开始播放"><a class="markdownIt-Anchor" href="#strat-frame从那一帧开始播放"></a> Strat Frame：从那一帧开始播放</h3><h2 id="管道瓦片-pipeline-tile"><a class="markdownIt-Anchor" href="#管道瓦片-pipeline-tile"></a> 管道瓦片 Pipeline Tile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317110443035.png" alt="" /><br />None：一个都不相邻时使用的图片<br />One——Four：相邻1~4个时使用的图片</p><h2 id="随机瓦片-random-tile"><a class="markdownIt-Anchor" href="#随机瓦片-random-tile"></a> 随机瓦片 Random Tile</h2><p>Number Of Sprites：随机图片数量（之后会随机取一个图片来使用）<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111642134.png" alt="" /></p><h2 id="地形瓦片-terraintile"><a class="markdownIt-Anchor" href="#地形瓦片-terraintile"></a> 地形瓦片 TerrainTile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111651556.png" alt="" /></p><p>跟规则瓦片差不多一样<br />Filled:填满<br />Three Sides:三个面<br />Two Sides and One Corner:两面一角<br />Two Adjacent Sides:相邻两侧<br />Two Opposite Sides:两个相对的侧面<br />One Side and Two Corners:一侧和两个角<br />One Side and One Upper Corner:一边和上角<br />One Side:一面 Four Corners:四个角<br />Three Corners:三个角<br />Two Adjacent Corners:两个相邻角<br />Two Opposite Corners：两个相反的角<br />One Corner：一个角<br />Empty：空</p><h2 id="权重随机瓦片-weightedrandomtile"><a class="markdownIt-Anchor" href="#权重随机瓦片-weightedrandomtile"></a> 权重随机瓦片 WeightedRandomTile</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111700906.png" alt="" /></p><h2 id="规则覆盖瓦片-rule-override-tile"><a class="markdownIt-Anchor" href="#规则覆盖瓦片-rule-override-tile"></a> 规则覆盖瓦片 Rule Override Tile</h2><p><strong>在规则瓦片的基础上</strong>，改变图片或指定启用的规则<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317111717305.png" alt="" /></p><h1 id="新增笔刷类型"><a class="markdownIt-Anchor" href="#新增笔刷类型"></a> 新增笔刷类型</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317112012594.png" alt="" /></p><h2 id="gameobject-brush"><a class="markdownIt-Anchor" href="#gameobject-brush"></a> GameObject Brush</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250317112647348.png" alt="" /></p><h2 id="random-brush"><a class="markdownIt-Anchor" href="#random-brush"></a> Random Brush</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091047851.png" alt="" /></p><p>Tile Set Size<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091130182.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318091254320.png" alt="" /></p><h2 id="coordinate-brush-坐标笔刷"><a class="markdownIt-Anchor" href="#coordinate-brush-坐标笔刷"></a> Coordinate Brush* 坐标笔刷</h2><p>可以实时的看到格子的坐标<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318092425775.png" alt="" /></p><h2 id="group-brush-组合笔刷"><a class="markdownIt-Anchor" href="#group-brush-组合笔刷"></a> Group Brush 组合笔刷</h2><p>可以设置参数，当点击一个瓦片样式时，会自动取出一个范围内的瓦片。</p><p>Gap决定x、y、z遇到几个空格之后就不继续扩充吸取的范围。<br />Limit决定最大的吸取范围，从0开始。</p><h2 id="line-brush-线性笔刷"><a class="markdownIt-Anchor" href="#line-brush-线性笔刷"></a> Line Brush 线性笔刷</h2><p>决定起点和终点画一条线出来。<br />选择线性笔刷后点击画笔可以在瓦片地图中点击确定起点和终点，会用选择的瓦片连成线。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318093542365.png" alt="" /></p><p>Line Start Active 是否以上一次绘制的起点作为新的起点。<br />Fill Gaps 自动填充，会把线画的更粗。</p><h2 id="tint-brush-着色笔刷"><a class="markdownIt-Anchor" href="#tint-brush-着色笔刷"></a> Tint Brush* 着色笔刷</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318093849202.png" alt="" /><br />可以给瓦片着色，瓦片的颜色锁要开启（Inspector窗口切换Debug模式 修改Flags）。<br />不开启颜色锁没有作用。<br />找到瓦片资源图片，右上角把图片设置成Debug模式，修改Flag为None。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318094008803.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/27.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E6%89%A9%E5%B1%95%E5%8C%85/file-20250318094029843.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导入瓦片地图扩展包&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导入瓦片地图扩展包&quot;&gt;&lt;/a&gt; 导入瓦片地图扩展包&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>26.瓦片地图关键脚本和碰撞器</title>
    <link href="http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/"/>
    <id>http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/</id>
    <published>2025-03-16T10:35:30.000Z</published>
    <updated>2025-03-16T12:33:42.883Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回顾瓦片地图编辑"><a class="markdownIt-Anchor" href="#回顾瓦片地图编辑"></a> 回顾瓦片地图编辑</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316183854832.png" alt="" /></p><h1 id="瓦片地图关键脚本和碰撞器参数"><a class="markdownIt-Anchor" href="#瓦片地图关键脚本和碰撞器参数"></a> 瓦片地图关键脚本和碰撞器参数</h1><h2 id="grid"><a class="markdownIt-Anchor" href="#grid"></a> Grid</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316184247014.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316184158040.png" alt="" /></p><h3 id="cell-size网格单元格的大小"><a class="markdownIt-Anchor" href="#cell-size网格单元格的大小"></a> Cell Size：网格单元格的大小</h3><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316184319447.png" alt="" /></p><h3 id="cell-gap网格之间的间隔大小"><a class="markdownIt-Anchor" href="#cell-gap网格之间的间隔大小"></a> Cell Gap：网格之间的间隔大小</h3><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316184350844.png" alt="" /></p><p>改图片的Pixels Per Unit也可以达成影响效果<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316184536972.png" alt="" /></p><h3 id="cell-layout网格单元的形状和排列"><a class="markdownIt-Anchor" href="#cell-layout网格单元的形状和排列"></a> Cell Layout：网格单元的形状和排列</h3><p>Rectangle：矩形<br />Hexagon：六边形<br />Isometric：等距布局，单元格为菱形<br />Isometric Z as Y：等距布局，但Unity将单元格Z轴转换为局部Y坐标</p><h3 id="cell-swizzle"><a class="markdownIt-Anchor" href="#cell-swizzle"></a> Cell Swizzle*：</h3><p>Unity将XYZ单元格坐标重新排序为你选择的类型</p><h2 id="tilemap"><a class="markdownIt-Anchor" href="#tilemap"></a> Tilemap*</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316185105790.png" alt="" /></p><h3 id="animation-frame-rate动画的速率"><a class="markdownIt-Anchor" href="#animation-frame-rate动画的速率"></a> Animation Frame Rate：动画的速率</h3><p>Unity播放瓦片动画的速率。相当于倍速</p><h3 id="color瓦片色调颜色"><a class="markdownIt-Anchor" href="#color瓦片色调颜色"></a> Color：瓦片色调颜色</h3><h3 id="tile-anchor瓦片的锚点偏移"><a class="markdownIt-Anchor" href="#tile-anchor瓦片的锚点偏移"></a> Tile Anchor：瓦片的锚点偏移</h3><h3 id="orientation瓦片地图上瓦片的方向"><a class="markdownIt-Anchor" href="#orientation瓦片地图上瓦片的方向"></a> Orientation：瓦片地图上瓦片的方向。</h3><p>相当于2D平面使用的是Unity中的哪两个轴</p><h2 id="tilemap-renderer"><a class="markdownIt-Anchor" href="#tilemap-renderer"></a> Tilemap Renderer</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316185113250.png" alt="" /></p><h3 id="sort-order排序方向"><a class="markdownIt-Anchor" href="#sort-order排序方向"></a> Sort Order：排序方向</h3><p>设置所选瓦片地图上的瓦片排序方向</p><h3 id="mode渲染模式"><a class="markdownIt-Anchor" href="#mode渲染模式"></a> Mode：渲染模式</h3><p>Chunk：按位置对瓦片进行分组，并将瓦片精灵一起批处理进行渲染，性能较好<br />Individual：单独渲染每个瓦片，会考虑他们的位置和排序顺序。会让瓦片精灵和场景中其它渲染器或自定义排序轴进行交互</p><h3 id="detect-chunk-culling渲染器如何剔除瓦片地图的边界"><a class="markdownIt-Anchor" href="#detect-chunk-culling渲染器如何剔除瓦片地图的边界"></a> Detect Chunk Culling*：渲染器如何剔除瓦片地图的边界</h3><p>Auto：自动检测<br />Manual：手动设置拓展边界</p><h3 id="chunk-culling-bounds"><a class="markdownIt-Anchor" href="#chunk-culling-bounds"></a> Chunk Culling Bounds*：</h3><p>当选择手动设置剔除拓展边界时，可以在这里自己填写拓展的值</p><h1 id="瓦片地图碰撞器"><a class="markdownIt-Anchor" href="#瓦片地图碰撞器"></a> 瓦片地图碰撞器</h1><p>为挂载TilemapRenerer脚本的对象添加Tilemap Collider2D脚本，会自动添加碰撞器。注意：想要生成碰撞器的瓦片Collider Type类型要进行设置。</p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316190015815.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316185928649.png" alt="" /></p><p>可以添加个复合碰撞器来合并碰撞器<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316190115158.png" alt="" /></p><h1 id="练习题"><a class="markdownIt-Anchor" href="#练习题"></a> 练习题</h1><h2 id="横版通关的地图"><a class="markdownIt-Anchor" href="#横版通关的地图"></a> 横版通关的地图</h2><p>请用TileMap制作一个横版通关的地图 让一个角色可以在其中移动</p><p>创建一个2D精灵作为玩家，给他添加碰撞器和刚体。注意调整两个瓦片地图和玩家对象的层级。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316192139444.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObject1</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr;</span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rigidBody2D;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> h;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rigidBody2D = <span class="keyword">this</span>.GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        rigidBody2D.velocity = <span class="keyword">new</span> Vector2(h * moveSpeed, rigidBody2D.velocity.y);</span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            rigidBody2D.AddForce(Vector2.up * <span class="number">300</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果想要左上红框做平台效用器的话，可以重新在瓦片调色板中在添加一个一模一样的图片，可以把新生成的瓦片图片资源设置碰撞器类型为None。我们可以创建空物体添加平台碰撞器，调整位置和大小放到瓦片碰撞器的位置。这样就做成瓦片碰撞器了。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316191810310.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316192432208.png" alt="" /></p><p>不要局限于瓦片碰撞器。假如做一个可以被跳跃销毁的顶箱子或者踩怪，可以直接拖入图片作为2D对象，然后写逻辑，不使用瓦片相关也没问题。</p><h2 id="伪z轴的地图"><a class="markdownIt-Anchor" href="#伪z轴的地图"></a> 伪Z轴的地图</h2><p>请用TileMap制作一个有伪Z轴的地图 让一个角色可以在其中移动<br /><strong>伪Z轴：将Y轴有跳跃功能，也有前进功能</strong></p><h3 id="等距瓦片的两项重要设置"><a class="markdownIt-Anchor" href="#等距瓦片的两项重要设置"></a> 等距瓦片的两项重要设置</h3><p>首先<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316192838338.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316193116540.png" alt="" /></p><h3 id="等距瓦片和等距瓦片z和y的区别"><a class="markdownIt-Anchor" href="#等距瓦片和等距瓦片z和y的区别"></a> 等距瓦片和等距瓦片z和y的区别</h3><p>开启了下面改变Z轴的选项。等距瓦片把瓦片丢到场景里按-和+不会调整伪Z轴的距离，等距瓦片z和y会改变。（一般不用zy，会有排序啥的问题）<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316193421800.png" alt="" /></p><p>设置轴心点<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316193848645.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316193925343.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194037452.png" alt="" /></p><h3 id="等距瓦片的排序问题"><a class="markdownIt-Anchor" href="#等距瓦片的排序问题"></a> 等距瓦片的排序问题</h3><h4 id="轴心点排序"><a class="markdownIt-Anchor" href="#轴心点排序"></a> 轴心点排序</h4><p>设置角色渲染器按照轴心排序<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194118531.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194140560.png" alt="" /></p><p>还是有问题？<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194208349.png" alt="" /><br />规则是什么？y轴<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194254793.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194315252.png" alt="" /></p><h4 id="排序层排序"><a class="markdownIt-Anchor" href="#排序层排序"></a> 排序层排序</h4><p>更改角色的排序层<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194707385.png" alt="" /></p><p>有产生新的问题<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194729094.png" alt="" /></p><p>可以利用Tilemap可以加多个情况来解决<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316194832931.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316195059414.png" alt="" /></p><p>又又又有新问题<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316195305747.png" alt="" /></p><p>还可以创建一个不同层级的和玩家同一排序层的Tilemap，通过轴心点排序<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316200215971.png" alt="" /></p><p>自己添加的图的排序点一定要选泽pivot排序<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316200459366.png" alt="" /></p><p>可以用自己拖精灵来制作场景，和Tilemap区别如下<br />2d精灵图片对象可以密集的放很多个对象。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316200704883.png" alt="" /></p><h3 id="等距瓦片地图角色不使用重力"><a class="markdownIt-Anchor" href="#等距瓦片地图角色不使用重力"></a> 等距瓦片地图角色不使用重力</h3><p>控制移动不应该用刚体来移动，要用transform来移动<br />玩家Rigidbody组件设置如下<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201122964.png" alt="" /></p><h3 id="等距瓦片碰撞器相关问题"><a class="markdownIt-Anchor" href="#等距瓦片碰撞器相关问题"></a> 等距瓦片碰撞器相关问题</h3><p>中间黄色地面是不产生碰撞的<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201254933.png" alt="" /><br />将中间的图片资源的碰撞模式改为空<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201358583.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201432951.png" alt="" /></p><p>对于等距瓦片围墙这种一般不按照碰撞类型不按Sprite来生成，一般按照Grid来生成<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201524990.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316201624136.png" alt="" /></p><p>编写角色脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObject2</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> h;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> v;</span><br><span class="line">    <span class="keyword">public</span> SpriteRenderer sr;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        v = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        <span class="keyword">this</span>.transform.Translate(Vector3.right * moveSpeed * Time.deltaTime * h);</span><br><span class="line">        <span class="keyword">this</span>.transform.Translate(Vector3.up * moveSpeed * Time.deltaTime * v);</span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想将围墙的碰撞范围往外一点，以达到更好的角色移动视觉效果<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316202204440.png" alt="" /></p><p>在拿同样的图再次拖到TilePalette中生成右侧红框的，将其碰撞类型改为None，再用其覆盖掉里面那一圈<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316202824487.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316203018131.png" alt="" /></p><h3 id="等距瓦片的角色跳跃问题"><a class="markdownIt-Anchor" href="#等距瓦片的角色跳跃问题"></a> 等距瓦片的角色跳跃问题</h3><p>创建一个空物体Root，将角色设置为其子对象，然后将角色身上的Collider和rigidbody脚本移动到Root中<br />通过设置角色的y轴（相对root）来控制跳跃<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/26.%E7%93%A6%E7%89%87%E5%9C%B0%E5%9B%BE%E5%85%B3%E9%94%AE%E8%84%9A%E6%9C%AC%E5%92%8C%E7%A2%B0%E6%92%9E%E5%99%A8/file-20250316203215042.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;回顾瓦片地图编辑&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#回顾瓦片地图编辑&quot;&gt;&lt;/a&gt; 回顾瓦片地图编辑&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%9</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>25.TilePalette瓦片调色板窗口</title>
    <link href="http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/"/>
    <id>http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/</id>
    <published>2025-03-16T07:17:41.000Z</published>
    <updated>2025-03-16T10:32:08.201Z</updated>
    
    <content type="html"><![CDATA[<h1 id="瓦片调色板窗口使用"><a class="markdownIt-Anchor" href="#瓦片调色板窗口使用"></a> 瓦片调色板窗口使用</h1><h2 id="创建相关"><a class="markdownIt-Anchor" href="#创建相关"></a> 创建相关</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316153627139.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316153645072.png" alt="" /></p><h3 id="name瓦片调色器名称"><a class="markdownIt-Anchor" href="#name瓦片调色器名称"></a> Name：瓦片调色器名称</h3><h3 id="grid瓦片的网格布局"><a class="markdownIt-Anchor" href="#grid瓦片的网格布局"></a> Grid：瓦片的网格布局</h3><ul><li>Rectangle：矩形瓦片<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316154043813.png" alt="" /></li><li>Hexagon：六边形瓦片<br />Hexagon Type：六边形瓦片地图类型<ul><li>Point Top：点朝顶部的六边形<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316154203972.png" alt="" /></li><li>Flat Top：面朝顶部的六边形<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316154226652.png" alt="" /></li></ul></li><li>Isometric：等距瓦片，单元格为菱形</li><li>Isometric Z as Y：等距瓦片并且Unity将单元格Z轴转换为局部Y坐标  （伪z轴）</li></ul><h3 id="cell-size瓦片绘制到单元格的大小"><a class="markdownIt-Anchor" href="#cell-size瓦片绘制到单元格的大小"></a> Cell Size：瓦片绘制到单元格的大小</h3><ul><li>Automatic：基于瓦片资源的精灵大小自动设置</li><li>Manual：自定义大小</li></ul><h2 id="操作技巧"><a class="markdownIt-Anchor" href="#操作技巧"></a> 操作技巧</h2><h3 id="单击瓦片选择瓦片"><a class="markdownIt-Anchor" href="#单击瓦片选择瓦片"></a> 单击瓦片——选择瓦片</h3><h3 id="在多个瓦片上移动选择多个瓦片"><a class="markdownIt-Anchor" href="#在多个瓦片上移动选择多个瓦片"></a> 在多个瓦片上移动——选择多个瓦片</h3><h3 id="alt左键拖动平移"><a class="markdownIt-Anchor" href="#alt左键拖动平移"></a> Alt+左键拖动——平移</h3><h3 id="滚轮键拖动平移"><a class="markdownIt-Anchor" href="#滚轮键拖动平移"></a> 滚轮键拖动——平移</h3><h3 id="旋转滚轮键放大缩小"><a class="markdownIt-Anchor" href="#旋转滚轮键放大缩小"></a> 旋转滚轮键——放大/缩小</h3><h2 id="面板相关"><a class="markdownIt-Anchor" href="#面板相关"></a> 面板相关</h2><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316163109437.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316163123612.png" alt="" /></p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=492255944&bvid=BV13N411t76k&cid=1316657838&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" ></iframe><h1 id="编辑瓦片地图"><a class="markdownIt-Anchor" href="#编辑瓦片地图"></a> 编辑瓦片地图</h1><p>现在场景中创建瓦片地图<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316175210717.png" alt="" /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316175345077.png" alt="" /></p><p>可以在场景中再创建一个瓦片地图，作为天空层，设置层级比原来那层低。激活的瓦片地图要选择成天空层。可以框选天空的图片上去。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316175910082.png" alt="" /></p><p>创建等距瓦片地图ISOmetric x y，拖拽资源进去，会发现资源和瓦片格子不适配。是因为原图片中心点造成的。把原图片中心点调成菱形的中心点。就对准了。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316180347931.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316180420422.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316180440237.png" alt="" /></p><p>改为<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316180522197.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316180541833.png" alt="" /></p><p>在场景创建一个z和y的等距瓦片地图，直接把z和y等距的瓦片放上去会发现有点奇怪。<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316182040028.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316182228299.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316182328080.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316182337759.png" alt="" /></p><p>可以不改图片的轴心点来调整高低，关掉下面的锁定z位置然后按±来调整<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/25.TilePalette%E7%93%A6%E7%89%87%E8%B0%83%E8%89%B2%E6%9D%BF%E7%AA%97%E5%8F%A3/file-20250316182551356.png" alt="" /></p><p><strong>不同的瓦片地图的作用</strong><br />矩形瓦片地图用于做横版游戏地图<br />六边形瓦片地图用于做策略游戏地图<br />等距瓦片地图用于做有”Z”轴的2D游戏</p><p><strong>注意：</strong><br />在编辑等距瓦片地图时：</p><ol><li>需要修改工程的自定义轴排序以Y轴决定渲染顺序。</li><li>如果地图存在前后关系需要修改TileRenderer的渲染模式。</li><li>可以通过Z轴偏移来控制绘制单个瓦片时的高度。（±）</li><li>精灵纹理的中心点会影响最终的显示效果。</li></ol><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;瓦片调色板窗口使用&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#瓦片调色板窗口使用&quot;&gt;&lt;/a&gt; 瓦片调色板窗口使用&lt;/h1&gt;
&lt;h2 id=&quot;创建相关&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#创建相关</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>24.Tilemap瓦片资源</title>
    <link href="http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/"/>
    <id>http://example.com/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/</id>
    <published>2025-03-16T06:45:40.000Z</published>
    <updated>2025-03-16T07:17:02.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是tilemap"><a class="markdownIt-Anchor" href="#什么是tilemap"></a> 什么是Tilemap</h1><p>Tilemap，通常称为瓦片地图或平铺地图，是Unity2017中新增的功能。<br />Tilemap主要用于快速编辑2D游戏中的场景，通过复用资源的形式提升地图多样性。<br />Tilemap工作原理就是用一张张的小图排列组合为一张大地图。</p><p><strong>Tilemap和SpriteShape的异同：</strong><br />共同点：他们都是用于制作2D游戏的场景或地图的。<br />不同点：<br />SpriteShape可以让地形有弧度，TileMap不行。<br />TileMap可以快捷制作有伪“Z”轴的地图，SpriteShape不行。</p><h1 id="从packagemanager中引入tilemap包"><a class="markdownIt-Anchor" href="#从packagemanager中引入tilemap包"></a> 从PackageManager中引入Tilemap包</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316144902661.png" alt="" /></p><h1 id="tilemap的最小单位瓦片资源"><a class="markdownIt-Anchor" href="#tilemap的最小单位瓦片资源"></a> Tilemap的最小单位——“瓦片资源”</h1><p>在Tile Palette瓦片调色板窗口创建。<br />打开Tile Palete平铺调色板<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316145626852.png" alt="" /><br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316145830149.png" alt="" /></p><p>新建一个Palette<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316145953900.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316150133137.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316150127328.png" alt="" /></p><p>把Sprite直接拖到平铺调色板中，并选择保存的路径<br /><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316150709440.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316150841429.png" alt="" /></p><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316150902633.png" alt="" /></p><h1 id="参数相关"><a class="markdownIt-Anchor" href="#参数相关"></a> 参数相关</h1><p><img src="/2025/03/16/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/24.Tilemap%E7%93%A6%E7%89%87%E8%B5%84%E6%BA%90/file-20250316151328433.png" alt="" /></p><p>Preview：预览图<br />Sprite：瓦片关联的精灵纹理<br />Color：瓦片色调颜色<br />Collider Type：碰撞器类型<br />None：不生成碰撞器<br />Sprite精灵：基于精灵轮廓生成碰撞器形状<br />Grid网格：基于瓦片单元格生成碰撞器形状</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是tilemap&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是tilemap&quot;&gt;&lt;/a&gt; 什么是Tilemap&lt;/h1&gt;
&lt;p&gt;Tilemap，通常称为瓦片地图或平铺地图，是Unity2017中新增的功能。&lt;br /&gt;
Ti</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Tilemap" scheme="http://example.com/tags/Tilemap/"/>
    
  </entry>
  
  <entry>
    <title>23.SpriteShapeRenderer精灵形状渲染器和SpriteShapeController精灵形状控制器</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/</id>
    <published>2025-03-14T14:23:52.000Z</published>
    <updated>2025-03-16T06:43:17.900Z</updated>
    
    <content type="html"><![CDATA[<h1 id="回顾怎么使用精灵形状概述文件"><a class="markdownIt-Anchor" href="#回顾怎么使用精灵形状概述文件"></a> 回顾怎么使用精灵形状概述文件</h1><p>创建一个关闭的精灵形状概述文件，设置好四个角度的图和下面八个角列表的图，直接拖拽到场景里。<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314222612090.png" alt="" /></p><h1 id="精灵形状渲染器和控制器参数"><a class="markdownIt-Anchor" href="#精灵形状渲染器和控制器参数"></a> 精灵形状渲染器和控制器参数</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/Sprite%20Shape%20Renderer%20Sprite%20Shape%20Controller%20%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8C%E6%8E%A7%E5%88%B6%E5%99%A8.png" alt="" /></p><h2 id="sprite-shape-renderer"><a class="markdownIt-Anchor" href="#sprite-shape-renderer"></a> Sprite Shape Renderer</h2><p>精灵形状渲染器<br />该控件主要是控制 材质 颜色 以及和其它Sprite交互时的排序等等信息</p><h3 id="color颜色"><a class="markdownIt-Anchor" href="#color颜色"></a> Color：颜色</h3><h3 id="mask-interaction遮罩相互作用规则设置"><a class="markdownIt-Anchor" href="#mask-interaction遮罩相互作用规则设置"></a> Mask Interaction：遮罩相互作用规则设置</h3><h3 id="fill-material和edge-material填充材质和边缘材质"><a class="markdownIt-Anchor" href="#fill-material和edge-material填充材质和边缘材质"></a> Fill Material和Edge Material：填充材质和边缘材质</h3><h3 id="sorting-layer和order-in-layer排序相关"><a class="markdownIt-Anchor" href="#sorting-layer和order-in-layer排序相关"></a> Sorting Layer和Order in Layer：排序相关</h3><h2 id="sprite-shape-controller"><a class="markdownIt-Anchor" href="#sprite-shape-controller"></a> Sprite Shape Controller</h2><p>精灵形状控制器</p><h3 id="profile使用的精灵形状概述文件"><a class="markdownIt-Anchor" href="#profile使用的精灵形状概述文件"></a> Profile：使用的精灵形状概述文件</h3><h3 id="detail精灵形状的质量"><a class="markdownIt-Anchor" href="#detail精灵形状的质量"></a> Detail：精灵形状的质量</h3><p>高中低三种质量</p><h3 id="is-open-ended是否是开放的不封闭的"><a class="markdownIt-Anchor" href="#is-open-ended是否是开放的不封闭的"></a> Is Open Ended：是否是开放的，不封闭的</h3><p>封闭的<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314223453690.png" alt="" /><br />开放的<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314223502847.png" alt="" /></p><h3 id="adaptive-uv自适应uv"><a class="markdownIt-Anchor" href="#adaptive-uv自适应uv"></a> Adaptive UV：自适应UV</h3><p>如果开启，会自动帮助我们判断是平铺还是拉伸<br />开启后只有宽度够才会平铺，如果宽度不够会拉伸<br />先拉伸<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314223644317.png" alt="" /><br />后平铺<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314223656237.png" alt="" /></p><p>不开启始终平铺，但是可能会出现裁剪效果 一般根据你的实际效果进行选择<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314223720297.png" alt="" /></p><h3 id="optimize-geometry优化三角形数量"><a class="markdownIt-Anchor" href="#optimize-geometry优化三角形数量"></a> Optimize Geometry：优化三角形数量</h3><p>勾选后会最小化精灵图形中的三角形数量</p><h3 id="enable-tangents是否启用切线计算功能"><a class="markdownIt-Anchor" href="#enable-tangents是否启用切线计算功能"></a> Enable Tangents*：是否启用切线计算功能</h3><p>如果你的着色器中需要切线信息参与计算，则勾选</p><h3 id="cache-geometry缓存几何体"><a class="markdownIt-Anchor" href="#cache-geometry缓存几何体"></a> Cache Geometry*：缓存几何体</h3><p>一般不开启</p><h3 id="corner-threshold角阈值"><a class="markdownIt-Anchor" href="#corner-threshold角阈值"></a> Corner Threshold：角阈值</h3><p>当拐角处的角度达到这个阈值（a）时将使用角图片<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314224402278.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314224259598.png" alt="" /></p><h3 id="stretch-uv是否拉伸uv"><a class="markdownIt-Anchor" href="#stretch-uv是否拉伸uv"></a> Stretch UV*：是否拉伸UV</h3><p>如果勾选纹理的UV将伸展到整个精灵形状的直线上<br />在封闭里面拉伸<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314224707050.png" alt="" /></p><p>封闭区域里面平铺<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314224730542.png" alt="" /></p><h3 id="pixel-per-unitunity单位对应多少像素"><a class="markdownIt-Anchor" href="#pixel-per-unitunity单位对应多少像素"></a> Pixel Per Unit*：Unity单位对应多少像素</h3><p>禁用拉伸UV时才有<br />较高的值会较少纹理的大小</p><h3 id="worldspace-uv根据世界控件的uv填充纹理"><a class="markdownIt-Anchor" href="#worldspace-uv根据世界控件的uv填充纹理"></a> Worldspace UV*：根据世界控件的UV填充纹理</h3><h3 id="启用编辑状态后"><a class="markdownIt-Anchor" href="#启用编辑状态后"></a> 启用编辑状态后</h3><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314224957637.png" alt="" /></p><ul><li><p>Tangent Mode ：切线模式<br />从左至右依次是：<br /><strong>顶点模式</strong>-点两侧不构成曲线<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225203422.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225210302.png" alt="" /><br /><strong>切线模式</strong>-点两侧构成曲线，并且可以控制切线弧度<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225235595.png" alt="" /><br /><strong>左右切线模式</strong>-点两侧构成曲线，并且可以分别控制左右两侧切线弧度<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225307170.png" alt="" /></p></li><li><p>Position：选中点的局部坐标位置</p></li><li><p>Height：控制点左右两侧精灵图片的高度<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225425449.png" alt="" /></p></li><li><p>Corner：是否使用角度图片<br />Disabled：不使用角度图片<br />Automatic：自动</p></li><li><p>Sprite Variant：选择使用的精灵图片</p></li><li><p>Snapping*：是否开启捕捉设置控制点</p></li></ul><h1 id="生成碰撞器"><a class="markdownIt-Anchor" href="#生成碰撞器"></a> 生成碰撞器</h1><ol><li><p>使用边界碰撞器<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314225914165.png" alt="" /></p></li><li><p>使用多边形碰撞器 配合复合碰撞器<br />先添加多边形碰撞器<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314230041529.png" alt="" /></p></li></ol><p>再添加复合碰撞器，并把多边形碰撞器应用于复合碰撞器<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/23.SpriteShapeRenderer%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%B8%B2%E6%9F%93%E5%99%A8%E5%92%8CSpriteShapeController%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250314230144801.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;回顾怎么使用精灵形状概述文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#回顾怎么使用精灵形状概述文件&quot;&gt;&lt;/a&gt; 回顾怎么使用精灵形状概述文件&lt;/h1&gt;
&lt;p&gt;创建一个关闭的精灵形状概述文件，设置好四个角度的图和下面八个角列表的图，</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Sprite" scheme="http://example.com/tags/Sprite/"/>
    
  </entry>
  
  <entry>
    <title>22.SpriteShapeProfile精灵形状概述文件</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/</id>
    <published>2025-03-14T13:49:03.000Z</published>
    <updated>2025-03-16T06:43:08.837Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spriteshape是用来做什么的"><a class="markdownIt-Anchor" href="#spriteshape是用来做什么的"></a> SpriteShape是用来做什么的</h1><p>顾名思义，SpriteShape是用于定义精灵的形状。<br />从名称上难以确定其具体功能。<br />它主要用于节约美术资源，方便制作<strong>2D游戏场景地形或背景</strong>。</p><h1 id="导入spriteshape工具"><a class="markdownIt-Anchor" href="#导入spriteshape工具"></a> 导入SpriteShape工具</h1><p>在Package Manager中导入相关工具<br />可以选择性导入示例和拓展资源</p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314215201070.png" alt="" /></p><h1 id="准备并创建精灵形状概括资源"><a class="markdownIt-Anchor" href="#准备并创建精灵形状概括资源"></a> 准备并创建精灵形状概括资源</h1><p>在Asset右键<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314215641595.png" alt="" /></p><h1 id="sprite-shape-profile参数"><a class="markdownIt-Anchor" href="#sprite-shape-profile参数"></a> Sprite Shape Profile参数</h1><p>精灵形状概述文件配置<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314220036100.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/Sprite%20Shape%20Profile%20%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6%E9%85%8D%E7%BD%AE.png" alt="" /></p><h2 id="use-sprite-borders是否使用精灵边框"><a class="markdownIt-Anchor" href="#use-sprite-borders是否使用精灵边框"></a> Use Sprite Borders：是否使用精灵边框</h2><p>用于九宫格拉伸，默认勾选就行</p><h2 id="texture用于填充实心部分的纹理"><a class="markdownIt-Anchor" href="#texture用于填充实心部分的纹理"></a> Texture：用于填充实心部分的纹理</h2><p>（使用的纹理的平铺模式必须是Repeat重复模式）</p><h2 id="offset纹理偏移量"><a class="markdownIt-Anchor" href="#offset纹理偏移量"></a> Offset：纹理偏移量</h2><p>一般不修改<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221745146.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221800153.png" alt="" /></p><h2 id="angle-ranges"><a class="markdownIt-Anchor" href="#angle-ranges"></a> Angle Ranges</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221400896.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221415590.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221435649.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221446849.png" alt="" /><br />拖入场景后<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221526958.png" alt="" /><br />稍微改变一下<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221708449.png" alt="" /></p><p>这里的设置主要用于封闭图形<br />在不同角度范围内使用的图片不同 可以达到一个封闭效果<br />Angle Ranges：角度范围<br />Start：起始角度<br />End：结束角度<br />Order：Sprite相交时的优先级，优先级高的显示在前面</p><h2 id="sprites指定角度范围内的精灵列表"><a class="markdownIt-Anchor" href="#sprites指定角度范围内的精灵列表"></a> Sprites：指定角度范围内的精灵列表</h2><p>在该角度范围内，可以选择使用的图片资源</p><h2 id="corners指定角显示的精灵图片"><a class="markdownIt-Anchor" href="#corners指定角显示的精灵图片"></a> Corners：指定角显示的精灵图片</h2><p>主要用于封闭图形<br />外部四个角用的图片 内部四个角用的图片<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314222220288.png" alt="" /></p><h1 id="使用精灵形状概述资源创建地形"><a class="markdownIt-Anchor" href="#使用精灵形状概述资源创建地形"></a> 使用精灵形状概述资源创建地形</h1><p>直接拖入到场景中就行</p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314220733070.png" alt="" /></p><p>点右边的红框<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314221933157.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314222023497.png" alt="" /></p><p>选择一个起点可以改图<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/22.SpriteShapeProfile%E7%B2%BE%E7%81%B5%E5%BD%A2%E7%8A%B6%E6%A6%82%E8%BF%B0%E6%96%87%E4%BB%B6/file-20250314222057019.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;spriteshape是用来做什么的&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#spriteshape是用来做什么的&quot;&gt;&lt;/a&gt; SpriteShape是用来做什么的&lt;/h1&gt;
&lt;p&gt;顾名思义，SpriteShape是用于定义精灵的</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Sprite" scheme="http://example.com/tags/Sprite/"/>
    
  </entry>
  
  <entry>
    <title>21.Effector2D效应器组件</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-14T12:40:49.000Z</published>
    <updated>2025-03-14T13:44:59.881Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2d效应器是什么"><a class="markdownIt-Anchor" href="#2d效应器是什么"></a> 2d效应器是什么</h1><p>2D效应器是配合2D碰撞器一起使用，可以让游戏对象在相互接触时产生一些特殊的物理作用力。<br />通过2D效应器，可以快捷的实现一些传送带、互斥、吸引、漂浮、单向碰撞等等效果。</p><h1 id="各种2d效应器参数"><a class="markdownIt-Anchor" href="#各种2d效应器参数"></a> 各种2d效应器参数</h1><p>要想将一个Sprite的表示成一个效应器，要添加一个Collider和任意一个Effector2d，<strong>isTrigger和used by Effector</strong>都要打开<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314205148981.png" alt="" /></p><h2 id="area-effector区域效应器"><a class="markdownIt-Anchor" href="#area-effector区域效应器"></a> Area Effector区域效应器</h2><p>主要作用：在一个区域内让游戏对象受到力和扭矩力的作用<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314210035925.png" alt="" /></p><h3 id="use-collider-mask是否启用碰撞器遮罩"><a class="markdownIt-Anchor" href="#use-collider-mask是否启用碰撞器遮罩"></a> Use Collider Mask：是否启用碰撞器遮罩</h3><p>如果开启才会出现下面的Collider Mask，可以通过选择层，决定该效应器只会作用于哪些层的对象</p><h3 id="use-global-angle是否使用世界坐标系角度"><a class="markdownIt-Anchor" href="#use-global-angle是否使用世界坐标系角度"></a> Use Global Angle：是否使用世界坐标系角度</h3><p>如果不勾选，角度为局部角度</p><h3 id="force-angle施加力的角度"><a class="markdownIt-Anchor" href="#force-angle施加力的角度"></a> Force Angle：施加力的角度</h3><h3 id="force-magnitude施加力的大小"><a class="markdownIt-Anchor" href="#force-magnitude施加力的大小"></a> Force Magnitude：施加力的大小</h3><h3 id="force-variation施加力的随机大小变化"><a class="markdownIt-Anchor" href="#force-variation施加力的随机大小变化"></a> Force Variation：施加力的随机大小变化</h3><p>会在 ± Force Magnitude基础上根据该值进行随机变化</p><h3 id="forcetarget效应器在目标对象上施加力的作用点"><a class="markdownIt-Anchor" href="#forcetarget效应器在目标对象上施加力的作用点"></a> ForceTarget：效应器在目标对象上施加力的作用点</h3><p>Collider：以碰撞器的当前位置（如果碰撞器有偏移，没有位于质心，可能会产生扭矩力，带来旋转）<br />Rigidbody：以刚体的当前质心（不会产生扭矩力）</p><p>Drag：阻力<br />Angular Drag：扭矩阻力</p><h2 id="buoyancy-effector浮力效应器"><a class="markdownIt-Anchor" href="#buoyancy-effector浮力效应器"></a> Buoyancy Effector浮力效应器</h2><p>主要作用：模拟流体行为，浮动和阻力相关设置，让玩家在该区域看起来像在水里移动<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314210958288.png" alt="" /></p><h3 id="density流体密度"><a class="markdownIt-Anchor" href="#density流体密度"></a> Density：流体密度</h3><p>密度较大，碰撞体会下沉，密度越小碰撞体会上浮 密度和流体相同的碰撞体会浮在流体中</p><h3 id="surface-level定义浮力流体的表面位置"><a class="markdownIt-Anchor" href="#surface-level定义浮力流体的表面位置"></a> Surface Level：定义浮力流体的表面位置</h3><p>对象高于此线时，不会对其施加浮力，以下或者相交会施加浮力。沿世界Y轴偏移</p><h3 id="linear-drag对象在水中移动的阻力系数"><a class="markdownIt-Anchor" href="#linear-drag对象在水中移动的阻力系数"></a> Linear Drag：对象在水中移动的阻力系数</h3><h3 id="angular-drag对象在水中旋转的阻力系数"><a class="markdownIt-Anchor" href="#angular-drag对象在水中旋转的阻力系数"></a> Angular Drag：对象在水中旋转的阻力系数</h3><h3 id="flow-angle"><a class="markdownIt-Anchor" href="#flow-angle"></a> Flow Angle：</h3><p>流体流动方向相对世界控件的角度，沿指定方向施加浮力</p><h3 id="flow-magnitude"><a class="markdownIt-Anchor" href="#flow-magnitude"></a> Flow Magnitude：</h3><p>与FlowAngle结合使用，前者决定力的角度，该值确定浮力大小</p><h3 id="flow-variation"><a class="markdownIt-Anchor" href="#flow-variation"></a> Flow Variation：</h3><p>随机改变流体力的值</p><h2 id="point-effector-点效应器"><a class="markdownIt-Anchor" href="#point-effector-点效应器"></a> Point Effector 点效应器</h2><p>主要作用：模拟磁铁 吸引或者排斥的效果<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314211601366.png" alt="" /></p><h3 id="force-magnitude力的大小"><a class="markdownIt-Anchor" href="#force-magnitude力的大小"></a> Force Magnitude：力的大小</h3><h3 id="force-variation力的大小变化"><a class="markdownIt-Anchor" href="#force-variation力的大小变化"></a> Force Variation：力的大小变化</h3><h3 id="distance-scale效应器和目标之间距离的缩放"><a class="markdownIt-Anchor" href="#distance-scale效应器和目标之间距离的缩放"></a> Distance Scale：效应器和目标之间距离的缩放。</h3><p>计算距离时，会按该比值对距离进行缩放</p><h3 id="force-source力来源"><a class="markdownIt-Anchor" href="#force-source力来源"></a> Force Source：力来源</h3><p>从该点计算距离。<br />Collider：碰撞器的位置<br />Rigidbody：刚体的位置</p><h3 id="force-target作用力目标位置"><a class="markdownIt-Anchor" href="#force-target作用力目标位置"></a> Force Target：作用力目标位置</h3><p>用改点计算位置<br />Collider：碰撞器的位置，如果碰撞器有偏移，可能会产生扭矩力<br />Rigidbody：刚体的位置，不会产生扭矩力</p><h3 id="force-mode计算力的模式"><a class="markdownIt-Anchor" href="#force-mode计算力的模式"></a> Force Mode：计算力的模式</h3><p>Constant：忽略源和目标之间相隔的距离<br />Inverse Linear：反线性距离计算，距离越远，力的大小呈线性减小<br />Inverse Squared：反平方距离计算，力的大小呈指数减小（按平方下降），类似现实世界重力</p><h2 id="platform-effector平台效应器"><a class="markdownIt-Anchor" href="#platform-effector平台效应器"></a> Platform Effector平台效应器</h2><p><strong>平台效应器的碰撞器可以不做成Trigger</strong></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314212645968.png" alt="" /></p><p>主要作用：2D游戏当中的平台或可往上跳跃的墙壁<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314212940778.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314212452153.png" alt="" /></p><h3 id="rotational-offset旋转偏移量"><a class="markdownIt-Anchor" href="#rotational-offset旋转偏移量"></a> Rotational Offset：旋转偏移量</h3><p>控制平台角度偏移<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314213040558.png" alt="" /></p><h3 id="use-one-way是否使用单向碰撞行为"><a class="markdownIt-Anchor" href="#use-one-way是否使用单向碰撞行为"></a> Use One Way：是否使用单向碰撞行为</h3><p>一般勾选，不勾选的话从下面跳不上去</p><h3 id="use-one-way-grouping"><a class="markdownIt-Anchor" href="#use-one-way-grouping"></a> Use One Way Grouping：</h3><p>当平台式有多个碰撞器组合时，可以通过它将所有碰撞器设置为单向碰撞行为</p><p>Surface Arc：以局部坐标系下向上的方向为中心，填写一个角度值，定义不允许通过的表面，该角度外的其它地方视为单向碰撞<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314213422595.png" alt="" /></p><p>Use Side Friction：是否应该在平台两侧使用摩擦<br />Use Side Bounce：是否应该在平台两侧使用弹性<br />Side Arc：用于定义左右两侧平台的响应弧度<br />下面红弧就是平台两侧的作用范围<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314213644586.png" alt="" /></p><h2 id="surface-effector-表面效应器"><a class="markdownIt-Anchor" href="#surface-effector-表面效应器"></a> Surface Effector 表面效应器</h2><p>表面效应器也不用开Trigger<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314213932378.png" alt="" /></p><p>主要作用：模拟传送带<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/21.Effector2D%E6%95%88%E5%BA%94%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250314213825936.png" alt="" /></p><h3 id="speed表面保持的速度"><a class="markdownIt-Anchor" href="#speed表面保持的速度"></a> Speed：表面保持的速度</h3><h3 id="speed-variation速度的随机增加值"><a class="markdownIt-Anchor" href="#speed-variation速度的随机增加值"></a> Speed Variation：速度的随机增加值</h3><h3 id="force-scale缩放沿表面移动时施加的力"><a class="markdownIt-Anchor" href="#force-scale缩放沿表面移动时施加的力"></a> Force Scale：缩放沿表面移动时施加的力。</h3><p>如果是0表示不施加力，相当于禁用。值越低越慢，值越高越快，建议不要设置为1，因为当设置为1时可能会抵消施加在物体上的其它力，比如跳跃的力</p><h3 id="use-contact-force是否对接触物体表面的出点施加力"><a class="markdownIt-Anchor" href="#use-contact-force是否对接触物体表面的出点施加力"></a> Use Contact Force：是否对接触物体表面的出点施加力</h3><p>如果选择会让对象旋转（打滚），如果不开启则不会旋转</p><h3 id="use-friction是否使用摩擦力"><a class="markdownIt-Anchor" href="#use-friction是否使用摩擦力"></a> Use Friction：是否使用摩擦力</h3><h3 id="use-bounce是否使用弹力"><a class="markdownIt-Anchor" href="#use-bounce是否使用弹力"></a> Use Bounce：是否使用弹力</h3><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p>效应器其实只是Unity为我们写好的一些2D游戏中常用功能的一些代码。在实际开发中我们不应该过于依赖效应器。如果发现效应器和自己的游戏需求不太匹配时，我们完全可以自己实现符合需求的“效应器”。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2d效应器是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#2d效应器是什么&quot;&gt;&lt;/a&gt; 2d效应器是什么&lt;/h1&gt;
&lt;p&gt;2D效应器是配合2D碰撞器一起使用，可以让游戏对象在相互接触时产生一些特殊的物理作用力。&lt;br /&gt;
通过2</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="物理系统" scheme="http://example.com/tags/%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="2d物理系统" scheme="http://example.com/tags/2d%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>20.ConstantForce2D恒定力组件</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/20.ConstantForce2D%E6%81%92%E5%AE%9A%E5%8A%9B%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/20.ConstantForce2D%E6%81%92%E5%AE%9A%E5%8A%9B%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-14T12:33:05.000Z</published>
    <updated>2025-03-14T12:39:56.505Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是恒定力"><a class="markdownIt-Anchor" href="#什么是恒定力"></a> 什么是恒定力</h1><p>恒定力是一个特殊的脚本。<br />它可以给一个2D刚体持续添加一个力。<br />在做一些随着时间推移而加速的对象时很适用，比如类似火箭发射等效果。<br />恒定力脚本会线性地为对象添加力和扭矩力，让其移动和旋转。</p><h1 id="恒定力脚本参数"><a class="markdownIt-Anchor" href="#恒定力脚本参数"></a> 恒定力脚本参数</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/20.ConstantForce2D%E6%81%92%E5%AE%9A%E5%8A%9B%E7%BB%84%E4%BB%B6/file-20250314203752032.png" alt="" /></p><p>Force：物理更新时施加于2D刚体上的线性力。<br />Relative Force：物理更新时施加的线性力（相对刚体对象坐标系）。<br />Torque：物理更新时施加于2D刚体的扭矩力。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是恒定力&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是恒定力&quot;&gt;&lt;/a&gt; 什么是恒定力&lt;/h1&gt;
&lt;p&gt;恒定力是一个特殊的脚本。&lt;br /&gt;
它可以给一个2D刚体持续添加一个力。&lt;br /&gt;
在做一些随着时间推移而加速的对象</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="物理系统" scheme="http://example.com/tags/%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="2d物理系统" scheme="http://example.com/tags/2d%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>19.PhysicsMaterial2D物理材质</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/19.PhysicsMaterial2D%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/19.PhysicsMaterial2D%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8/</id>
    <published>2025-03-14T12:22:17.000Z</published>
    <updated>2025-03-14T12:30:27.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是物理材质"><a class="markdownIt-Anchor" href="#什么是物理材质"></a> 什么是物理材质</h1><p>物理材质是用于决定在物体产生碰撞时这些物体之间的摩擦和弹性表现的。<br />通过物理材质，我们可以做出类似斜坡不滑落，小球反弹等效果。</p><h1 id="创建物理材质"><a class="markdownIt-Anchor" href="#创建物理材质"></a> 创建物理材质</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/19.PhysicsMaterial2D%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8/file-20250314202519023.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/19.PhysicsMaterial2D%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8/file-20250314202323254.png" alt="" /></p><h1 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> 参数</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/19.PhysicsMaterial2D%E7%89%A9%E7%90%86%E6%9D%90%E8%B4%A8/file-20250314203025635.png" alt="" /><br />Dynamic Friction 动摩擦，为0表示没摩擦<br />Static Friction 静摩擦<br />Bounciness 反弹程度，0表示没有弹力，1表示完美弹力无能量损失<br />Friction Combine 决定了两个碰撞体接触时，它们之间动摩擦力（Dynamic Friction）和静摩擦力（Static Friction）的组合方式。<br />Bounce Combine  确定两个碰撞体接触时，它们之间弹力（Bounciness）的组合方式。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是物理材质&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是物理材质&quot;&gt;&lt;/a&gt; 什么是物理材质&lt;/h1&gt;
&lt;p&gt;物理材质是用于决定在物体产生碰撞时这些物体之间的摩擦和弹性表现的。&lt;br /&gt;
通过物理材质，我们可以做出类似斜坡</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="物理系统" scheme="http://example.com/tags/%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="2d物理系统" scheme="http://example.com/tags/2d%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>18.Collision2D碰撞器和碰撞检测函数</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/</id>
    <published>2025-03-14T08:11:14.000Z</published>
    <updated>2025-03-14T12:21:23.295Z</updated>
    
    <content type="html"><![CDATA[<h1 id="碰撞器是用来干嘛的"><a class="markdownIt-Anchor" href="#碰撞器是用来干嘛的"></a> 碰撞器是用来干嘛的</h1><p>碰撞器是用于在物理系统中表示物体体积的的（形状或范围）。<br />刚体通过得到碰撞器的范围信息进行计算，判断两个物体的范围是否接触。<br />如果接触，刚体就会模拟力的效果产生速度和旋转。</p><h1 id="2d碰撞器参数"><a class="markdownIt-Anchor" href="#2d碰撞器参数"></a> 2d碰撞器参数</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/2d%E7%A2%B0%E6%92%9E%E5%99%A8%E5%8F%82%E6%95%B0.png" alt="" /></p><h2 id="圆形碰撞器"><a class="markdownIt-Anchor" href="#圆形碰撞器"></a> 圆形碰撞器</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314161831101.png" alt="" /></p><h3 id="material物理材质"><a class="markdownIt-Anchor" href="#material物理材质"></a> Material：物理材质</h3><p>用于确定碰撞的属性，控制摩擦和弹性</p><h3 id="is-trigger是否是触发器"><a class="markdownIt-Anchor" href="#is-trigger是否是触发器"></a> Is Trigger：是否是触发器</h3><h3 id="used-by-effector是否被附加的2d效应器使用"><a class="markdownIt-Anchor" href="#used-by-effector是否被附加的2d效应器使用"></a> Used By Effector：是否被附加的2D效应器使用</h3><h3 id="offset圆心偏移位置"><a class="markdownIt-Anchor" href="#offset圆心偏移位置"></a> Offset：圆心偏移位置</h3><h3 id="radius圆形的半径"><a class="markdownIt-Anchor" href="#radius圆形的半径"></a> Radius：圆形的半径</h3><h2 id="2盒状碰撞器"><a class="markdownIt-Anchor" href="#2盒状碰撞器"></a> 2.盒状碰撞器</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314161847399.png" alt="" /></p><h3 id="use-by-composite-由复合使用"><a class="markdownIt-Anchor" href="#use-by-composite-由复合使用"></a> Use by Composite 由复合使用</h3><p>如果勾选，则该碰撞器将附加到2D复合碰撞器中使用。<br />勾选后将消失一些属性，这些属性将在复合碰撞器中配置。</p><h3 id="auto-tiling-自动拼接"><a class="markdownIt-Anchor" href="#auto-tiling-自动拼接"></a> Auto Tiling 自动拼接</h3><p>如果SpriteRender精灵渲染器组件中的DrawMode设置为Tiled平铺模式。勾选该选项后，当改变精灵大小时将自动更新碰撞器的尺寸。</p><h3 id="edge-radius-边缘半径"><a class="markdownIt-Anchor" href="#edge-radius-边缘半径"></a> Edge Radius 边缘半径</h3><p>使四个定点为圆角。<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314162231451.png" alt="" /></p><h2 id="3多边形碰撞器"><a class="markdownIt-Anchor" href="#3多边形碰撞器"></a> 3.多边形碰撞器</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314162357671.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314162956971.png" alt="" /></p><p>虽然可以手动修改，但是一般情况下 我们通过数值编辑太复杂了<br /><strong>都通过Edit Collider编辑，或者让Unity自动识别创建</strong></p><h2 id="4边界碰撞器"><a class="markdownIt-Anchor" href="#4边界碰撞器"></a> 4.边界碰撞器</h2><p>由线段组成的范围<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163244770.png" alt="" /><br />一般用来做地形<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163309171.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163159692.png" alt="" /><br />边界碰撞器的编辑主要还是通过Edit Collider<br />一般不会手动去通过数值加点</p><h2 id="5胶囊碰撞器"><a class="markdownIt-Anchor" href="#5胶囊碰撞器"></a> 5.胶囊碰撞器</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163441884.png" alt="" /></p><h3 id="size胶囊的宽高"><a class="markdownIt-Anchor" href="#size胶囊的宽高"></a> Size：胶囊的宽高</h3><h3 id="direction竖直还是水平胶囊"><a class="markdownIt-Anchor" href="#direction竖直还是水平胶囊"></a> Direction：竖直还是水平胶囊</h3><h2 id="6复合碰撞器"><a class="markdownIt-Anchor" href="#6复合碰撞器"></a> 6.复合碰撞器</h2><p>由复数个碰撞器组成，一定要有个刚体组件<br />给他们添加一个父物体，并添加复合碰撞器<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163528392.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163639554.png" alt="" /><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163721939.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163446773.png" alt="" /></p><h3 id="geometry-type几何学类型"><a class="markdownIt-Anchor" href="#geometry-type几何学类型"></a> Geometry Type：几何学类型</h3><p>合并碰撞体时，碰撞体顶点将组合为两种不同的几何体类型</p><p>Outlines：空心轮廓，类似边界碰撞器<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314163947403.png" alt="" /><br />Polygons：实心多边形，类似多边形碰撞器</p><h3 id="generation-type生成类型"><a class="markdownIt-Anchor" href="#generation-type生成类型"></a> Generation Type：生成类型</h3><p>复合碰撞器在何时生成新几何体</p><p>Synchronous：对2D复合碰撞器或使用的其它碰撞器修改时，Unity立即生成新几何体<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314164134343.png" alt="" /><br />Manual：手动生成新几何体，通过代码生成或者点击下发的Regenerate Geometry生成按钮<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/18.Collision2D%E7%A2%B0%E6%92%9E%E5%99%A8%E5%92%8C%E7%A2%B0%E6%92%9E%E6%A3%80%E6%B5%8B%E5%87%BD%E6%95%B0/file-20250314164117890.png" alt="" /></p><h3 id="vertex-distance最小间距值"><a class="markdownIt-Anchor" href="#vertex-distance最小间距值"></a> Vertex Distance：最小间距值</h3><p>从复合碰撞器收集顶点时允许的最小间距值</p><h1 id="碰撞检测函数"><a class="markdownIt-Anchor" href="#碰撞检测函数"></a> 碰撞检测函数</h1><p>碰撞检测函数和3D碰撞检测函数除了名字不同外其他基本一致。<br />在这里只简单讲解不赘述，它是非常重要的知识点。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter2D</span>(<span class="params">Collision2D collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionExit2D</span>(<span class="params">Collision2D collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionStay2D</span>(<span class="params">Collision2D collision</span>)</span></span><br><span class="line">&#123; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter2D</span>(<span class="params">Collider2D collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit2D</span>(<span class="params">Collider2D collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerStay2D</span>(<span class="params">Collider2D collision</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在之前练习题的基础上，请用2D刚体和碰撞器制作一个玩家，它可以在一个平台上移动跳跃。（注意：移动和跳跃都通过刚体的API进行制作，类似3D物理系统中刚体加力和给速度，之前练习题是通过直接改变坐标移动位置的）</p><p>给Player添加碰撞体和刚体，创建几个方形精灵图片添加盒型碰撞器作为要跳跃的平台<br />记得把角色的z轴旋转关了</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 玩家移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> h;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> SpriteRenderer sr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Rigidbody2D rb;     </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        sr = <span class="keyword">this</span>.GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取水平方向输入值</span></span><br><span class="line">        h = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line"></span><br><span class="line">        rb = GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line"></span><br><span class="line">        rb.velocity = <span class="keyword">new</span> Vector2(h * moveSpeed, rb.velocity.y); <span class="comment">//改变刚体速度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果h小于0，则设置sr.flipX为true，否则如果h大于0，则设置sr.flipX为false</span></span><br><span class="line">        <span class="keyword">if</span> (h &lt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (h &gt; <span class="number">0</span>)</span><br><span class="line">            sr.flipX = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 检查是否按下了空格键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//创建子弹预设体</span></span><br><span class="line">            GameObject obj = Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;BulletObj&quot;</span>), <span class="keyword">this</span>.transform.position + <span class="keyword">new</span> Vector3(sr.flipX ? <span class="number">-0.3f</span> : <span class="number">0.3f</span>, <span class="number">0.5f</span>, <span class="number">0</span>), Quaternion.identity);</span><br><span class="line">            <span class="comment">//告诉子弹应该朝哪里动</span></span><br><span class="line">            obj.GetComponent&lt;BulletObj&gt;().ChangeMoveDir(sr.flipX ? Vector3.left : Vector3.right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;碰撞器是用来干嘛的&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#碰撞器是用来干嘛的&quot;&gt;&lt;/a&gt; 碰撞器是用来干嘛的&lt;/h1&gt;
&lt;p&gt;碰撞器是用于在物理系统中表示物体体积的的（形状或范围）。&lt;br /&gt;
刚体通过得到碰撞器的范围信息进行</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="物理系统" scheme="http://example.com/tags/%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="2d物理系统" scheme="http://example.com/tags/2d%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>17.Rigidbody2D刚体</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/</id>
    <published>2025-03-14T07:34:15.000Z</published>
    <updated>2025-03-14T08:07:16.054Z</updated>
    
    <content type="html"><![CDATA[<h1 id="学习2d物理系统的前提"><a class="markdownIt-Anchor" href="#学习2d物理系统的前提"></a> 学习2D物理系统的前提</h1><p>学习2D物理系统之前建议先学习Unity入门当中的3D物理系统，因为它们非常的类似。<br />由于我们之前详细讲解了3D物理系统，所以在讲解2D物理系统时会相对简洁一些，一些讲过的知识点就不过多赘述了。</p><h1 id="2d物理系统中的刚体组件"><a class="markdownIt-Anchor" href="#2d物理系统中的刚体组件"></a> 2D物理系统中的刚体组件</h1><p>刚体是物理系统中用于帮助我们进行模拟物理碰撞中力的效果的。<br />2D物理系统中的刚体和3D中的刚体基本是一样的，最大的区别是对象只会在XY平面中移动，并且只在垂直于该平面的轴上旋转。<br />碰撞产生的条件和3D是一样的，都是必须要两个碰撞器，和至少一个刚体rigidbody2d</p><h1 id="刚体组件"><a class="markdownIt-Anchor" href="#刚体组件"></a> 刚体组件</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/%E5%88%9A%E4%BD%93.png" alt="" /></p><h2 id="dynamic动态类型"><a class="markdownIt-Anchor" href="#dynamic动态类型"></a> Dynamic：动态类型</h2><p>受重力和力的影响移动和旋转<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314154317813.png" alt="" /></p><h3 id="material物理材质"><a class="markdownIt-Anchor" href="#material物理材质"></a> Material：物理材质</h3><p>在刚体上设置了物理材质，如果子物体有碰撞器但是没有设置材质则会通用刚体的物理材质<br />如果不设置，将使用在Physics 2D窗口中设置的默认材质<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314154552116.png" alt="" /><br />碰撞器Collider和刚体rigidbody都有Material物理材质？<br /><strong>一般在碰撞器上设置</strong><br />rigidbody有子物体，子物体就默认使用父物体刚体的材质<br /><strong>物理材质的使用优先级</strong></p><ol><li>2D碰撞器上指定的2D物理材质</li><li>2D刚体上指定的2D物理材质</li><li>Physics 2D窗口指定的2D默认物理材质</li></ol><h3 id="simulated模拟的"><a class="markdownIt-Anchor" href="#simulated模拟的"></a> Simulated：模拟的</h3><p>默认开启就行<br />如果希望2D刚体以及所有子对象2D碰撞器和2D关节都能模拟物理效果 需要启用该选项</p><h3 id="use-auto-mass是否使用自动质量"><a class="markdownIt-Anchor" href="#use-auto-mass是否使用自动质量"></a> Use Auto Mass：是否使用自动质量</h3><p>一般不开，不准</p><h3 id="mass质量"><a class="markdownIt-Anchor" href="#mass质量"></a> Mass：质量</h3><h3 id="linear-dray影响位置移动的阻力系数"><a class="markdownIt-Anchor" href="#linear-dray影响位置移动的阻力系数"></a> Linear Dray：影响位置移动的阻力系数</h3><h3 id="angular-drag影响旋转移动的阻力系数"><a class="markdownIt-Anchor" href="#angular-drag影响旋转移动的阻力系数"></a> Angular Drag：影响旋转移动的阻力系数</h3><h3 id="gravity-scale受重力影响的程度"><a class="markdownIt-Anchor" href="#gravity-scale受重力影响的程度"></a> Gravity Scale：受重力影响的程度</h3><h3 id="collision-detection碰撞检测算法"><a class="markdownIt-Anchor" href="#collision-detection碰撞检测算法"></a> Collision Detection：碰撞检测算法</h3><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314160136032.png" alt="" /></p><ul><li><p>Discrete：离散检测算法，只会用新位置进行计算，速度过快时会穿过</p></li><li><p>Continuous：连续检测算法，计算量更大，但是不会发生穿过的情况</p></li></ul><h3 id="sleeping-mode对象处于静止状态时进入睡眠模式"><a class="markdownIt-Anchor" href="#sleeping-mode对象处于静止状态时进入睡眠模式"></a> Sleeping Mode：对象处于静止状态时进入睡眠模式</h3><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314160142440.png" alt="" /></p><ul><li><p>Never Sleep：从不休眠，会一直进行检测计算，性能消耗较大</p></li><li><p>Start Awake：最初处于唤醒状态</p></li><li><p>Start Asleep：最初处于睡眠状态，但是可以被碰撞唤醒</p></li></ul><h3 id="interpolate物理更新间隔之间的插值运算"><a class="markdownIt-Anchor" href="#interpolate物理更新间隔之间的插值运算"></a> Interpolate：物理更新间隔之间的插值运算</h3><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314160147280.png" alt="" /></p><ul><li><p>None：不应用移动平滑</p></li><li><p>Interpolate：根据前一帧进行平滑处理</p></li><li><p>Extrapolate：根据后一帧位置进行平滑处理</p></li></ul><h3 id="constraints约束限制"><a class="markdownIt-Anchor" href="#constraints约束限制"></a> Constraints：约束限制</h3><p>可以让某一个轴不受力影响位移或者旋转</p><h2 id="kinematic运动学类型"><a class="markdownIt-Anchor" href="#kinematic运动学类型"></a> Kinematic：运动学类型</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314160156602.png" alt="" /><br />不受力的影响，只能通过代码让其动起来<br />能和Dynamic 2D刚体产生碰撞，但是不会动，只会进入碰撞检测函数 因此它没有了质量莫摩擦系数等属性<br />因此它的性能能消耗较低，主要会通过代码来处理其移动旋转</p><h3 id="simulated模拟的-2"><a class="markdownIt-Anchor" href="#simulated模拟的-2"></a> Simulated：模拟的</h3><p>如果希望2D刚体以及所有子对象2D碰撞器和2D关节都能模拟物理效果 需要启用该选项<br /><strong>当启用时，会充当一个无限质量的不可移动对象，可以和所有2D刚体产生碰撞</strong><br />如果Use Full Kinematic Contacts禁用，它只会和Dynamic 2D刚体碰撞</p><h3 id="use-full-kinematic-contacts"><a class="markdownIt-Anchor" href="#use-full-kinematic-contacts"></a> Use Full Kinematic Contacts：</h3><p>如果希望能和所有2D刚体碰撞，启用它<br />如果不启用，它不会和Kinematic 2D和Static 2D刚体碰撞</p><h2 id="static静态类型"><a class="markdownIt-Anchor" href="#static静态类型"></a> Static：静态类型</h2><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/17.Rigidbody2D%E5%88%9A%E4%BD%93/file-20250314160207171.png" alt="" /><br />完全不动的需要检测碰撞的对象 相当于是无限质量不可移动的对象 它的性能消耗最小，它只能和Dynamic 2D刚体碰撞<br />和它类似的有只加碰撞器而不加刚体的物体 它们会和刚体物体产生碰撞，但是自己不会动</p><h1 id="如何选择不同类型的刚体"><a class="markdownIt-Anchor" href="#如何选择不同类型的刚体"></a> 如何选择不同类型的刚体</h1><p>Dynamic动态刚体：受力的作用，要动要碰撞的对象。<br />Kinematic运动学刚体：通过刚体API移动的对象，不受力的作用，但是想要进行碰撞检测。<br />Static静态刚体：不动不受力作用的静态物体，但是想要进行碰撞检测（只能和Dynamic动态刚体进行检测）。</p><h1 id="刚体api"><a class="markdownIt-Anchor" href="#刚体api"></a> 刚体API</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GetComponent() 得到 2D 刚体</span></span><br><span class="line">Rigidbody2D rigid = <span class="keyword">this</span>.GetComponent&lt;Rigidbody2D&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// Rigidbody2D.AddForce方法 加力</span></span><br><span class="line">rigid.AddForce(<span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">100</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Rigidbody2D.velocity属性 刚体速度</span></span><br><span class="line">rigid.velocity = <span class="keyword">new</span> Vector2(<span class="number">1</span>, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;学习2d物理系统的前提&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#学习2d物理系统的前提&quot;&gt;&lt;/a&gt; 学习2D物理系统的前提&lt;/h1&gt;
&lt;p&gt;学习2D物理系统之前建议先学习Unity入门当中的3D物理系统，因为它们非常的类似。&lt;br</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="物理系统" scheme="http://example.com/tags/%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="2d物理系统" scheme="http://example.com/tags/2d%E7%89%A9%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>16.SpriteAtlas精灵图集</title>
    <link href="http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/"/>
    <id>http://example.com/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/</id>
    <published>2025-03-14T06:38:40.000Z</published>
    <updated>2025-03-14T07:30:53.090Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要打图集"><a class="markdownIt-Anchor" href="#为什么要打图集"></a> 为什么要打图集</h1><p>打图集的目的就是减少<a href="/2025/03/12/UI%E7%B3%BB%E7%BB%9F/NGUI/NGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/19.Drawcall/" title="19.Drawcall">DrawCall</a> 提高性能<br />在2D游戏开发，以及UI开发中是会频繁使用的功能</p><p>平时做游戏直接用，到最后游戏要打包的时候做图集就行了</p><p>ps：打图集是将小图合并成图集，和使用图集不同<a href="/2025/03/13/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/10.SpriteEditor%E4%B9%8BMultiple/" title="10.SpriteEditor之Multiple">10.SpriteEditor之Multiple</a></p><h1 id="在unity中打开自带的打图集功能"><a class="markdownIt-Anchor" href="#在unity中打开自带的打图集功能"></a> 在Unity中打开自带的打图集功能</h1><p>在工程设置面板中选择Edit -&gt; Project Setting -&gt; Editor来打开Sprite Packer。</p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314144416397.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314144719787.png" alt="" /></p><p>Disabled：默认设置，不会打包图集。假如创建不是2D项目可能就是这个选项。<br />Enabled For Builds（Legacy Sprite Packer）：Unity仅在构建时打包图集，在编辑模式下不会打包图集。<br />Always Enabled（Legacy Sprite Packer）：Unity在构建时打包图集，在编辑模式下运行前会打包图集。<br />Legacy Sprite Packer传统打包模式相对于下面两种模式来说，多了一个设置图片之间的Padding Power间隔距离。Padding Power选项用于选择打包算法在计算打包的精灵之间以及精灵与生成的图集边缘之间的间隔距离。这里的数字代表2的n次方。<br />Enabled For Build：Unity仅在构建时打包图集，在编辑器模式下不会打包。<br />Always Enabled：Unity在构建时打包图集，在编辑模式下运行前会打包图集。</p><p><strong>创建图集</strong><br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314145027865.png" alt="" /></p><h1 id="图集参数"><a class="markdownIt-Anchor" href="#图集参数"></a> 图集参数</h1><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/%E5%9B%BE%E9%9B%86%E5%8F%82%E6%95%B0.png" alt="" /></p><h2 id="type图集类型"><a class="markdownIt-Anchor" href="#type图集类型"></a> Type：图集类型</h2><p>Master：主图集<br />Variant：变体类型的图集<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314150245931.png" alt="" /></p><h2 id="include-in-build选中可以在当前构建中包含图集"><a class="markdownIt-Anchor" href="#include-in-build选中可以在当前构建中包含图集"></a> Include in Build：选中可以在当前构建中包含图集</h2><p>一般默认勾选就行</p><h2 id="allow-rotation允许图片旋转"><a class="markdownIt-Anchor" href="#allow-rotation允许图片旋转"></a> Allow Rotation：允许图片旋转</h2><p>选中此选项将在打包图集时对图片元素进行旋转，可以最大限度提高组合后的图集密度；<br /><strong>注意！！！如果是UI图集，请禁用此选项，因为打包时会将场景中UI元素旋转</strong></p><h2 id="tight-packing紧密包装"><a class="markdownIt-Anchor" href="#tight-packing紧密包装"></a> Tight Packing：紧密包装</h2><p>选中此选项在打包图集时使用图片轮廓来打包而不是根据矩形，可以最大限度提高组合后的图集密度<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314145911994.png" alt="" /></p><h2 id="padding-填充图集中各图片的间隔像素"><a class="markdownIt-Anchor" href="#padding-填充图集中各图片的间隔像素"></a> Padding 填充：图集中各图片的间隔像素</h2><hr /><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314150343069.png" alt="" /></p><h2 id="variant变体类型的图集用很少"><a class="markdownIt-Anchor" href="#variant变体类型的图集用很少"></a> Variant*：变体类型的图集（用很少）</h2><p>就是在一个图集之上产生的变体副本，<strong>一般用的很少</strong></p><p>Master Atlas：关联的主图集（图集类型必须是Master）</p><p>Include in Build：选中可以在当前构建中包含图集</p><p>Scale：设置变体图集的缩放因子（0~1），变体图集的大小是主图集乘以Scale的结果</p><p>变体图集的主要作用是以主图集为基础，对它进行缩放产生一个新的图集副本。如果想使用变体图集中的内容，只需要勾选变体图集的Include in build选项，而主图集禁用此选项即可</p><h2 id="readwrite-enabled"><a class="markdownIt-Anchor" href="#readwrite-enabled"></a> Read/Write Enabled：</h2><a href="/2025/03/13/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/6.%E7%BA%B9%E7%90%86%E9%AB%98%E7%BA%A7%E8%AE%BE%E7%BD%AE/#read/write-enabled-%E7%BA%B9%E7%90%86%E4%B8%AD%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE" title="6.纹理高级设置">6.纹理高级设置</a><p>允许通过脚本访问纹理数据。如果启用，会创建纹理数据的副本。会让内存翻倍，一般情况下不需要开启它</p><h2 id="generate-mip-maps生成mipmap"><a class="markdownIt-Anchor" href="#generate-mip-maps生成mipmap"></a> Generate Mip Maps：生成Mipmap</h2><p>Mipmap是一种性能优化手段，用内存换性能。一般情况下不用开启</p><h2 id="srgb伽马矫正"><a class="markdownIt-Anchor" href="#srgb伽马矫正"></a> SRGB：伽马矫正</h2><p>启用此属性可指定将纹理存储在伽马空间中。对于非 HDR 颜色纹理（例如反照率和镜面反射颜色），应始终选中此复选框。如果纹理存储了有特定含义的信息，并且您需要着色器中的确切值（例如，平滑度或金属度），请禁用此属性。<br />默认情况下会启用此属性。</p><h2 id="filter-mode纹理在3d变化拉伸时如何进行过滤"><a class="markdownIt-Anchor" href="#filter-mode纹理在3d变化拉伸时如何进行过滤"></a> Filter Mode：纹理在3D变化拉伸时如何进行过滤</h2><a href="/2025/03/13/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/7.%E7%BA%B9%E7%90%86%E5%B9%B3%E9%93%BA%E6%8B%89%E4%BC%B8%E8%AE%BE%E7%BD%AE/#Filter-Mode%EF%BC%9A%E7%BA%B9%E7%90%86%E5%9C%A8%E9%80%9A%E8%BF%873D%E5%8F%98%E5%8C%96%E6%8B%89%E4%BC%B8%E6%97%B6%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C%E8%BF%87%E5%BA%A6" title="7.纹理平铺拉伸设置">7.纹理平铺拉伸设置</a><p>Point：纹理靠近时变为块状<br />Bilinear：纹理靠近时变得模糊<br />Trilinear：与Bilinear类似，但是纹理在不同的MIP级别之间模糊</p><h2 id="objects-for-packing关联打图集的图片们"><a class="markdownIt-Anchor" href="#objects-for-packing关联打图集的图片们"></a> Objects for Packing：关联打图集的图片们</h2><p>注意：<br />一定是Sprite类型的图片<br />可以直接拖一个文件夹<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314151536271.png" alt="" /></p><h2 id="default"><a class="markdownIt-Anchor" href="#default"></a> Default</h2><h3 id="max-texture-size纹理的最大尺寸像素为单位"><a class="markdownIt-Anchor" href="#max-texture-size纹理的最大尺寸像素为单位"></a> Max Texture Size：纹理的最大尺寸，像素为单位</h3><h3 id="format指定纹理的内部表示"><a class="markdownIt-Anchor" href="#format指定纹理的内部表示"></a> Format：指定纹理的内部表示</h3><p>在不同平台上会有不同的参数<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314151652631.png" alt="" /></p><h3 id="compression纹理压缩类型"><a class="markdownIt-Anchor" href="#compression纹理压缩类型"></a> Compression：纹理压缩类型</h3><p>不压缩<br />低质量<br />普通质量<br />高质量<br />质量越高占用内存越多，不压缩质量最好</p><h3 id="use-crunch-compression使用crunch压缩"><a class="markdownIt-Anchor" href="#use-crunch-compression使用crunch压缩"></a> Use Crunch Compression：使用Crunch压缩</h3><p>是一种有损压缩格式，压缩耗时长，但是运行时解压速度快<br />Compressor Quality：压缩质量，质量越高纹理越大，耗时越长</p><h1 id="观察drawcall数量"><a class="markdownIt-Anchor" href="#观察drawcall数量"></a> 观察Drawcall数量</h1><p>带卡Stats状态面板来观察Batches<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314151824460.png" alt="" /></p><p><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314152111911.png" alt="" /><br />运行后<br /><img src="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/file-20250314152150729.png" alt="" /></p><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><p>怎么通过代码加载图集中的某一资源？<br />然后显示在场景中</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">GameObject gameObject = <span class="keyword">new</span> GameObject();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一个SpriteRenderer组件</span></span><br><span class="line">SpriteRenderer sr = gameObject.AddComponent&lt;SpriteRenderer&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// SpriteAtlas类要引用UnityEngine.U2D命名空间</span></span><br><span class="line"><span class="comment">// 加载名为&quot;MyAtlas&quot;的SpriteAtlas资源</span></span><br><span class="line">SpriteAtlas spriteAtlas = Resources.Load&lt;SpriteAtlas&gt;(<span class="string">&quot;MyAtlas&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//SpriteAtlas中的GetSprite方法 获得图集中的图</span></span><br><span class="line"><span class="comment">//克隆此图集中与打包的名称匹配的第一个 Sprite 并将其返回。</span></span><br><span class="line"><span class="comment">// 从图集中获取名为&quot;dead1&quot;的小图</span></span><br><span class="line">sr.sprite = spriteAtlas.GetSprite(<span class="string">&quot;dead1&quot;</span>);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为什么要打图集&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#为什么要打图集&quot;&gt;&lt;/a&gt; 为什么要打图集&lt;/h1&gt;
&lt;p&gt;打图集的目的就是减少&lt;a href=&quot;/2025/03/12/UI%E7%B3%BB%E7%BB%9F/NGUI/</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="2d相关" scheme="http://example.com/tags/2d%E7%9B%B8%E5%85%B3/"/>
    
    <category term="Sprite" scheme="http://example.com/tags/Sprite/"/>
    
  </entry>
  
</feed>
