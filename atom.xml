<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-02-26T12:29:04.110Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>12.GUI总结</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/</id>
    <published>2025-02-26T12:22:28.000Z</published>
    <updated>2025-02-26T12:29:04.110Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/file-20250226202233700.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/file-20250226202256205.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/file-20250226202304163.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/file-20250226202336443.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.GUI%E6%80%BB%E7%BB%93/file-20250226202233700.pn</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>11.GUILayout自动布局</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/11.GUILayout%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/11.GUILayout%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80/</id>
    <published>2025-02-26T12:13:57.000Z</published>
    <updated>2025-02-26T12:20:16.256Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GUILayout是一个类似GUI的类，里面的API和GUI类似，只是可以帮我们自动布局，不用手动调整位置，方便一点。</span></span><br><span class="line"><span class="comment">// GUILayout 类是 Unity GUI 的接口，并且具有自动布局功能。</span></span><br><span class="line"><span class="comment">// 主要用于进行编辑器开发，如果用它来做游戏UI不太合适。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// GUILayout和GUI可以相互配合着使用</span></span><br><span class="line">GUI.BeginGroup(<span class="keyword">new</span> Rect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">500</span>, <span class="number">300</span>));</span><br><span class="line"></span><br><span class="line">GUILayout.BeginArea(<span class="keyword">new</span> Rect(<span class="number">10</span>, <span class="number">10</span>, <span class="number">400</span>, <span class="number">300</span>)); <span class="comment">// 在一个固定的屏幕区域中开始 GUI 控件的 GUILayout 块。</span></span><br><span class="line"></span><br><span class="line">GUILayout.BeginVertical(); <span class="comment">// 开始一个垂直控件组。</span></span><br><span class="line"></span><br><span class="line">GUILayout.Button(<span class="string">&quot;竖直123&quot;</span>, GUILayout.Width(<span class="number">200</span>)); <span class="comment">// 控件的固定宽高</span></span><br><span class="line">GUILayout.Button(<span class="string">&quot;竖直245666656565&quot;</span>);</span><br><span class="line">GUILayout.Button(<span class="string">&quot;竖直235&quot;</span>, GUILayout.ExpandWidth(<span class="literal">false</span>)); <span class="comment">// 允许或禁止水平拓展</span></span><br><span class="line"></span><br><span class="line">GUILayout.EndVertical(); <span class="comment">// 闭合以 BeginVertical 开始的组。</span></span><br><span class="line"></span><br><span class="line">GUILayout.BeginHorizontal(); <span class="comment">// 开始一个水平控件组。</span></span><br><span class="line"></span><br><span class="line">GUILayout.Button(<span class="string">&quot;水平123&quot;</span>, GUILayout.Height(<span class="number">300</span>)); <span class="comment">// 控件的固定宽高</span></span><br><span class="line">GUILayout.Button(<span class="string">&quot;水平245666656565&quot;</span>);</span><br><span class="line">GUILayout.Button(<span class="string">&quot;水平235&quot;</span>, GUILayout.ExpandWidth(<span class="literal">false</span>)); <span class="comment">// 允许或禁止水平拓展</span></span><br><span class="line"></span><br><span class="line">GUILayout.EndHorizontal(); <span class="comment">// 闭合以 BeginHorizontal 开始的组。</span></span><br><span class="line"></span><br><span class="line">GUILayout.EndArea(); <span class="comment">// 闭合以 BeginArea 开始的 GUILayout 块。</span></span><br><span class="line"></span><br><span class="line">GUI.EndGroup();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GUILayoutOption 布局选项</span><br><span class="line">        <span class="comment">//控件的固定宽高</span></span><br><span class="line">        GUILayout.Width(<span class="number">300</span>);</span><br><span class="line">        GUILayout.Height(<span class="number">200</span>);</span><br><span class="line">        <span class="comment">//允许控件的最小宽高</span></span><br><span class="line">        GUILayout.MinWidth(<span class="number">50</span>);</span><br><span class="line">        GUILayout.MinHeight(<span class="number">50</span>);</span><br><span class="line">        <span class="comment">//允许控件的最大宽高</span></span><br><span class="line">        GUILayout.MaxWidth(<span class="number">100</span>);</span><br><span class="line">        GUILayout.MaxHeight(<span class="number">100</span>);</span><br><span class="line">        <span class="comment">//允许或禁止水平拓展</span></span><br><span class="line">        GUILayout.ExpandWidth(<span class="literal">true</span>);<span class="comment">//允许</span></span><br><span class="line">        GUILayout.ExpandHeight(<span class="literal">false</span>);<span class="comment">//禁止</span></span><br><span class="line">        GUILayout.ExpandHeight(<span class="literal">true</span>);<span class="comment">//允许</span></span><br><span class="line">        GUILayout.ExpandHeight(<span class="literal">false</span>);<span class="comment">//禁止</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>10.自定义皮肤样式</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%AE%E8%82%A4%E6%A0%B7%E5%BC%8F/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%AE%E8%82%A4%E6%A0%B7%E5%BC%8F/</id>
    <published>2025-02-26T12:00:57.000Z</published>
    <updated>2025-02-26T12:12:48.757Z</updated>
    
    <content type="html"><![CDATA[<h1 id="颜色"><a class="markdownIt-Anchor" href="#颜色"></a> 颜色*</h1><h2 id="color静态变量-全局的着色颜色"><a class="markdownIt-Anchor" href="#color静态变量-全局的着色颜色"></a> color静态变量 全局的着色颜色</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// GUI 的全局着色颜色。</span></span><br><span class="line">GUI.color = Color.red;</span><br><span class="line">GUI.Label(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">50</span>, <span class="number">150</span>, <span class="number">30</span>), <span class="string">&quot;全局着色颜色标签红&quot;</span>);</span><br><span class="line">GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">30</span>), <span class="string">&quot;全局着色颜色按钮红&quot;</span>);</span><br><span class="line">GUI.color = Color.white;</span><br><span class="line">GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">150</span>, <span class="number">150</span>, <span class="number">30</span>), <span class="string">&quot;全局着色颜色按钮白&quot;</span>, style);</span><br></pre></td></tr></table></figure><h2 id="contentcolor静态变量-文本着色颜色"><a class="markdownIt-Anchor" href="#contentcolor静态变量-文本着色颜色"></a> contentColor静态变量 文本着色颜色</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 文本着色颜色，会和全局颜色相乘。</span></span><br><span class="line"><span class="comment">// 为 GUI 渲染的所有文本着色。</span></span><br><span class="line">GUI.contentColor = Color.yellow;</span><br><span class="line">GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">30</span>), <span class="string">&quot;文本着色颜色&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="backgroundcolor静态变量-背景元素着色颜色"><a class="markdownIt-Anchor" href="#backgroundcolor静态变量-背景元素着色颜色"></a> backgroundColor静态变量 背景元素着色颜色</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用于 GUI 渲染的所有背景元素的全局着色颜色。</span></span><br><span class="line"><span class="comment">// 背景元素着色颜色会和全局颜色相乘。</span></span><br><span class="line">GUI.backgroundColor = Color.green;</span><br><span class="line">GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">250</span>, <span class="number">150</span>, <span class="number">30</span>), <span class="string">&quot;背景元素着色颜色&quot;</span>, style);</span><br></pre></td></tr></table></figure><h1 id="整体皮肤样式"><a class="markdownIt-Anchor" href="#整体皮肤样式"></a> 整体皮肤样式</h1><p>在Project窗口可以右键创建GUI皮肤<br /><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%AE%E8%82%A4%E6%A0%B7%E5%BC%8F/file-20250226200730329.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9A%AE%E8%82%A4%E6%A0%B7%E5%BC%8F/file-20250226200926688.png" alt="" /></p><p>skin静态变量 全局皮肤</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> GUISkin mySkin;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    GUI.skin = mySkin;    <span class="comment">// 为null就是默认的样式，单个Style会覆盖</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;颜色&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#颜色&quot;&gt;&lt;/a&gt; 颜色*&lt;/h1&gt;
&lt;h2 id=&quot;color静态变量-全局的着色颜色&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#color静态变量-全</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>9.窗口</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E7%AA%97%E5%8F%A3/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E7%AA%97%E5%8F%A3/</id>
    <published>2025-02-26T11:35:31.000Z</published>
    <updated>2025-02-26T11:58:18.171Z</updated>
    
    <content type="html"><![CDATA[<h1 id="窗口"><a class="markdownIt-Anchor" href="#窗口"></a> 窗口</h1><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 第一个参数是窗口唯一id</span></span><br><span class="line"><span class="comment">// 第三个参数是一个 要一个int作为参数的无返回值的委托, 用来处理窗口内容的</span></span><br><span class="line">GUI.Window(<span class="number">1</span>, <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">500</span>, <span class="number">500</span>), (a) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 一个函数处理不同的窗口</span></span><br><span class="line">    <span class="keyword">switch</span> (a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>), <span class="string">&quot;第一个窗口逻辑&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;, <span class="string">&quot;测试窗口&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="模态窗口"><a class="markdownIt-Anchor" href="#模态窗口"></a> 模态窗口</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 显示一个模态窗口。</span></span><br><span class="line"><span class="comment">// 模态窗口可以让其它控件不再有用。</span></span><br><span class="line"><span class="comment">// 你可以理解该窗口在最上层，其它按钮都点击不到了，只能点击该窗口上控件。</span></span><br><span class="line"><span class="comment">// 只有把模态窗口处理后, 才可以点击其它窗口</span></span><br><span class="line">GUI.ModalWindow(<span class="number">3</span>, <span class="keyword">new</span> Rect(<span class="number">300</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">150</span>), (a) =&gt; &#123;&#125;, <span class="string">&quot;模态窗口&quot;</span>);</span><br><span class="line"><span class="comment">// 可能应用于警告弹窗，必须先处理的弹出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="拖动窗口"><a class="markdownIt-Anchor" href="#拖动窗口"></a> 拖动窗口</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Rect winRect = <span class="keyword">new</span> Rect(<span class="number">100</span>, <span class="number">100</span>, <span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">winRect = GUI.Window(<span class="number">3</span>, winRect, (a) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 无参默认窗口所有位置都可以拖动</span></span><br><span class="line">    <span class="comment">// 参数指定窗口的哪一部分可以被鼠标拖动</span></span><br><span class="line">    GUI.DragWindow();    <span class="comment">// 必须要调用这个才能拖动</span></span><br><span class="line">&#125;, <span class="string">&quot;拖动窗口测试&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p><strong>在之前制作的开始界面中，点击退出游戏按钮，弹出一个模态窗口，让玩家确定是否退出（退出，取消），点击取消后关闭窗口，点击退出后 退出游戏</strong><br /><strong>QuitTipPanel.cs</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 绘制模态窗口</span></span><br><span class="line">    GUI.ModalWindow(<span class="number">1</span>, winPos, DrawWindow, <span class="string">&quot;提示&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawWindow</span>(<span class="params"><span class="built_in">int</span> id</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 标签</span></span><br><span class="line">    GUI.Label(labPos, <span class="string">&quot;是否退出&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 两个按钮</span></span><br><span class="line">    <span class="keyword">if</span>(GUI.Button(btnPos1, <span class="string">&quot;退出&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(GUI.Button(btnPos2, <span class="string">&quot;取消&quot;</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        HideMe();</span><br><span class="line">        BeginPanel.ShowMe();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>BeginPanel.cs</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (GUI.Button(btn3Pos, <span class="string">&quot;退出游戏&quot;</span>, btnStyle))</span><br><span class="line">&#123;</span><br><span class="line">    QuitTipPanel.ShowMe();</span><br><span class="line">    HideMe();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;窗口&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#窗口&quot;&gt;&lt;/a&gt; 窗口&lt;/h1&gt;
&lt;figure class=&quot;highlight csharp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span c</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>8.滚动列表和分组</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/</id>
    <published>2025-02-26T11:04:59.000Z</published>
    <updated>2025-02-26T11:34:35.811Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分组-begingroup"><a class="markdownIt-Anchor" href="#分组-begingroup"></a> 分组 BeginGroup</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//BeginGroup静态方法 开始分组</span></span><br><span class="line"><span class="comment">//开始一个组。必须与 EndGroup 调用配对使用。</span></span><br><span class="line"><span class="comment">//用于批量控制控件位置 </span></span><br><span class="line"><span class="comment">//可以理解为 包裹着的控件加了一个父对象 </span></span><br><span class="line"><span class="comment">//可以通过控制分组来控制包裹控件的位置</span></span><br><span class="line">GUI.BeginGroup(groupRect);    <span class="comment">// 必须搭配EndGroup来使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//组内的组件</span></span><br><span class="line">GUI.Button(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">50</span>), <span class="string">&quot;测试按钮&quot;</span>);</span><br><span class="line">GUI.Label(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">60</span>, <span class="number">100</span>, <span class="number">20</span>), <span class="string">&quot;Label信息&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//EndGroup静态方法 结束分组</span></span><br><span class="line"><span class="comment">//结束组。</span></span><br><span class="line">GUI.EndGroup();</span><br></pre></td></tr></table></figure><h1 id="滚动列表-beginscrollview"><a class="markdownIt-Anchor" href="#滚动列表-beginscrollview"></a> 滚动列表 BeginScrollView</h1><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/file-20250226191912382.png" alt="" /><br />在Unity中，GUI.BeginScrollView函数用于创建一个可以滚动的视图区域，允许在较小的矩形区域内显示较大的内容。该函数的参数如下所示：</p><ul><li><strong>position (Rect)</strong>：指定  <strong>滚动视图</strong>  的矩形区域，使用Rect类型来表示，包含了左上角的位置坐标和宽度、高度。</li><li><strong>scrollPosition (Vector2)</strong>：指定当前滚动位置的二维向量，表示在滚动视图中内容的偏移量。</li><li><strong>viewRect (Rect)</strong>：指定  <strong>具体内容</strong>  的矩形区域大小，使用Rect类型来表示，包含了左上角的位置坐标和宽度、高度。</li></ul><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/file-20250226192454834.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Rect scrollPos;</span><br><span class="line"><span class="keyword">public</span> Rect showView;</span><br><span class="line"><span class="keyword">public</span> Vector2 nowPos;</span><br><span class="line"></span><br><span class="line">nowPos = GUI.BeginScrollView(scrollPos, nowPos, showView);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 中间填想要放在滚动列表里面的UI    eg:</span></span><br><span class="line">GUI.Toolbar(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">50</span>), <span class="number">0</span>, strs); </span><br><span class="line">GUI.Toolbar(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">60</span>, <span class="number">300</span>, <span class="number">50</span>), <span class="number">0</span>, strs); </span><br><span class="line">GUI.Toolbar(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">120</span>, <span class="number">300</span>, <span class="number">50</span>), <span class="number">0</span>, strs); </span><br><span class="line">GUI.Toolbar(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">180</span>, <span class="number">300</span>, <span class="number">50</span>), <span class="number">0</span>, strs);</span><br><span class="line"></span><br><span class="line">GUI.EndScrollView();</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p><strong>制作一个滚动视图，外部有一个字符串数组，通过在Inspector修改这个字符串数组数量，会在滚动视图内部动态的创建label依次显示内容</strong><br />想让滚动视图的真实内容大小 随内容(这里是strings)大小变化而变化<br /><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/file-20250226193327395.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.%E6%BB%9A%E5%8A%A8%E5%88%97%E8%A1%A8%E5%92%8C%E5%88%86%E7%BB%84/file-20250226193343545.png" alt="" /></p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span>[] strs;</span><br><span class="line"><span class="keyword">public</span> Rect scrollPos;</span><br><span class="line"><span class="keyword">public</span> Rect showView;</span><br><span class="line"><span class="keyword">public</span> Vector2 nowPos;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 想让滚动视图的真实内容大小 随内容(这里是strings)大小变化而变化</span></span><br><span class="line">    <span class="comment">// 在绘制滚动视图之前把变化的数据计算好</span></span><br><span class="line">    showView.height = strs.Length * <span class="number">30</span>;    <span class="comment">// 计算你要生成的内容的高度</span></span><br><span class="line">    </span><br><span class="line">    nowPos = GUI.BeginScrollView(scrollPos, nowPos, showView);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; strs.Length; i++)</span><br><span class="line">    &#123; </span><br><span class="line">        GUI.Label(<span class="keyword">new</span> Rect(<span class="number">0</span>, i * <span class="number">30</span>, <span class="number">100</span>, <span class="number">30</span>), strs[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    GUI.EndScrollView();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;分组-begingroup&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#分组-begingroup&quot;&gt;&lt;/a&gt; 分组 BeginGroup&lt;/h1&gt;
&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>7.工具栏和选择网格</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E9%80%89%E6%8B%A9%E7%BD%91%E6%A0%BC/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E9%80%89%E6%8B%A9%E7%BD%91%E6%A0%BC/</id>
    <published>2025-02-26T09:41:39.000Z</published>
    <updated>2025-02-26T09:53:00.693Z</updated>
    
    <content type="html"><![CDATA[<h1 id="工具栏toolbar"><a class="markdownIt-Anchor" href="#工具栏toolbar"></a> 工具栏Toolbar</h1><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E9%80%89%E6%8B%A9%E7%BD%91%E6%A0%BC/file-20250226174735170.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个工具栏。</span></span><br><span class="line"><span class="comment">// 需要声明一个 int 变量用于选择 和一个 string 数组用于显示当前选择的工具栏的内容。</span></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">int</span> toolbarIndex = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> toolbarInfos = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;选项1&quot;</span>, <span class="string">&quot;选项2&quot;</span>, <span class="string">&quot;选项3&quot;</span> &#125;;</span><br><span class="line"><span class="comment">// Toolbar静态方法会返回一个 int 值，也需要重新赋值个给选择的 int 变量。</span></span><br><span class="line">toolbarIndex = GUI.Toolbar(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">200</span>, <span class="number">30</span>), toolbarIndex, toolbarInfos);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 工具栏可以帮助我们根据不同的返回索引 来处理不同的逻辑</span></span><br><span class="line"><span class="keyword">switch</span> (toolbarIndex)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        <span class="comment">// 处理索引为0的逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="comment">// 处理索引为1的逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="comment">// 处理索引为2的逻辑</span></span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="选择网格selectiongrid"><a class="markdownIt-Anchor" href="#选择网格selectiongrid"></a> 选择网格SelectionGrid</h1><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E9%80%89%E6%8B%A9%E7%BD%91%E6%A0%BC/file-20250226174958930.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个按钮网格。</span></span><br><span class="line"><span class="comment">// 也需要声明一个 int 变量用于选择 和一个 string 数组用于显示当前选择的工具栏的内容。</span></span><br><span class="line"><span class="comment">// 相对 toolbar 多了一个参数 xCount 代表 水平方向最多显示的按钮数量 比如有三个按钮 这参数天了填了2 那么一行最多只要两个按钮。</span></span><br><span class="line">selGridIndex = GUI.SelectionGrid(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">50</span>, <span class="number">200</span>, <span class="number">60</span>), selGridIndex, toolbarInfos, <span class="number">2</span>);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.%E5%B7%A5%E5%85%B7%E6%A0%8F%E5%92%8C%E9%80%89%E6%8B%A9%E7%BD%91%E6%A0%BC/file-20250226175258640.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TestPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Rect toolbarPos;</span><br><span class="line">    <span class="keyword">public</span> Rect selGridPos;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span>[] strs = <span class="keyword">new</span> <span class="built_in">string</span>[] &#123; <span class="string">&quot;装备&quot;</span>, <span class="string">&quot;进阶&quot;</span>, <span class="string">&quot;幻化&quot;</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> nowSelIndex = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Rect labelPos;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        nowSelIndex = GUI.Toolbar(toolbarPos, nowSelIndex, strs);</span><br><span class="line">        nowSelIndex = GUI.SelectionGrid(selGridPos, nowSelIndex, strs, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (nowSelIndex)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                GUI.Label(labelPos, <span class="string">&quot;装备信息&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                GUI.Label(labelPos, <span class="string">&quot;进阶信息&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                GUI.Label(labelPos, <span class="string">&quot;幻化信息&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;工具栏toolbar&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#工具栏toolbar&quot;&gt;&lt;/a&gt; 工具栏Toolbar&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/G</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>6.图片绘制和框</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E5%9B%BE%E7%89%87%E7%BB%98%E5%88%B6%E5%92%8C%E6%A1%86/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E5%9B%BE%E7%89%87%E7%BB%98%E5%88%B6%E5%92%8C%E6%A1%86/</id>
    <published>2025-02-26T09:26:05.000Z</published>
    <updated>2025-02-26T09:38:32.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="drawtexture"><a class="markdownIt-Anchor" href="#drawtexture"></a> DrawTexture</h1><h2 id="drawtexture静态方法重载中的参数"><a class="markdownIt-Anchor" href="#drawtexture静态方法重载中的参数"></a> DrawTexture静态方法重载中的参数</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DrawTexture静态方法所有重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DrawTexture</span>(<span class="params">Rect position, Texture image</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DrawTexture</span>(<span class="params">Rect position, Texture image, ScaleMode scaleMode</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DrawTexture</span>(<span class="params">Rect position, Texture image, ScaleMode scaleMode, <span class="built_in">bool</span> alphaBlend</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">DrawTexture</span>(<span class="params">Rect position, Texture image, ScaleMode scaleMode, <span class="built_in">bool</span> alphaBlend, <span class="built_in">float</span> imageAspect</span>)</span>;</span><br></pre></td></tr></table></figure><ul><li><strong>ScaleMode</strong>:<ul><li>当图像的宽高比不适合要绘制的宽高比时，如何缩放图像。</li><li><code>ScaleAndCrop</code>: 也会通过宽高比来计算图片 但是会进行<strong>裁剪</strong>。</li><li><code>ScaleToFit</code>: 会自动根据宽高比进行计算 不会拉变形 会一直保持<strong>图片全部显示</strong>的状态。</li><li><code>StretchToFill</code>: 始终填充满你传入的 Rect 范围。</li></ul></li><li><strong>alphaBlend</strong>:<ul><li>绘制图像时是否应用 Alpha 混合（默认启用）。</li><li>用来控制图片是否开启透明通道。</li></ul></li><li><strong>imageAspect</strong>:<ul><li>用于源图像的宽高比。如果为 0（默认值），则使用图像的宽高比。传入 w/h 来指定所需的宽高比。这让您能够在不改变像素宽度和高度的情况下调整源图像的宽高比。</li></ul></li></ul><h2 id="基本使用"><a class="markdownIt-Anchor" href="#基本使用"></a> 基本使用</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Rect texPos;</span><br><span class="line"><span class="keyword">public</span> Texture tex;</span><br><span class="line"><span class="keyword">public</span> ScaleMode mode = ScaleMode.StretchToFill</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">bool</span> alpha = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> wh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在一个矩形内绘制纹理。</span></span><br><span class="line">GUI.DrawTexture(texPos, tex, mode, alpha, wh);</span><br></pre></td></tr></table></figure><h1 id="框"><a class="markdownIt-Anchor" href="#框"></a> 框</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在 GUI 层上创建一个框。</span></span><br><span class="line">GUI.Box(texPos, <span class="string">&quot;123&quot;</span>);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p><strong>为各个面板加上背景图片</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开始面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BeginPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 背景图片</span></span><br><span class="line">    <span class="keyword">public</span> Rect bkPos;</span><br><span class="line">    <span class="keyword">public</span> Texture bkTex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 背景</span></span><br><span class="line">        GUI.DrawTexture(bkPos, bkTex); <span class="comment">// **API: GUI.DrawTexture**</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 其他代码...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SettingPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 背景图片</span></span><br><span class="line">    <span class="keyword">public</span> Rect bkPos;</span><br><span class="line">    <span class="keyword">public</span> Texture bkTex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 背景</span></span><br><span class="line">        GUI.DrawTexture(bkPos, bkTex); <span class="comment">// **API: GUI.DrawTexture**</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 其他代码...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登陆面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 背景图片</span></span><br><span class="line">    <span class="keyword">public</span> Rect bkPos;</span><br><span class="line">    <span class="keyword">public</span> Texture bkTex;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 背景</span></span><br><span class="line">        GUI.DrawTexture(bkPos, bkTex); <span class="comment">// **API: GUI.DrawTexture**</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 其他代码...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;drawtexture&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#drawtexture&quot;&gt;&lt;/a&gt; DrawTexture&lt;/h1&gt;
&lt;h2 id=&quot;drawtexture静态方法重载中的参数&quot;&gt;&lt;a class=&quot;markdow</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>5.输入框和拖动条</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E8%BE%93%E5%85%A5%E6%A1%86%E5%92%8C%E6%8B%96%E5%8A%A8%E6%9D%A1/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E8%BE%93%E5%85%A5%E6%A1%86%E5%92%8C%E6%8B%96%E5%8A%A8%E6%9D%A1/</id>
    <published>2025-02-26T09:04:55.000Z</published>
    <updated>2025-02-26T09:23:50.006Z</updated>
    
    <content type="html"><![CDATA[<h1 id="输入"><a class="markdownIt-Anchor" href="#输入"></a> 输入</h1><h2 id="普通输入textfield"><a class="markdownIt-Anchor" href="#普通输入textfield"></a> 普通输入TextField</h2><ul><li>输入框 重要参数：<ol><li>显示内容 string</li><li>最大输入字符串的长度</li></ol></li><li>和多选框类似 要不停得到自己输入的内容</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> inputStr = <span class="string">&quot;hello&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可供用户编辑字符串的单行文本字段。</span></span><br><span class="line">inputStr = GUI.TextField(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>), inputStr, <span class="number">5</span>);<span class="comment">//最多显示5个字符 超过了不会在打出来了</span></span><br></pre></td></tr></table></figure><h2 id="密码输入框passwordfield"><a class="markdownIt-Anchor" href="#密码输入框passwordfield"></a> 密码输入框PasswordField</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">string</span> inputPW = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建一个可让用户输入密码的文本字段。</span></span><br><span class="line">inputPW = GUI.PasswordField(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">50</span>, <span class="number">100</span>, <span class="number">30</span>), inputPW, <span class="string">&#x27;★&#x27;</span>);<span class="comment">//密码文本是★</span></span><br></pre></td></tr></table></figure><h1 id="拖动条"><a class="markdownIt-Anchor" href="#拖动条"></a> 拖动条</h1><h2 id="水平拖动条"><a class="markdownIt-Anchor" href="#水平拖动条"></a> 水平拖动条</h2><ul><li>拖动条重要参数<ol><li>当前的值</li><li>最小值 left</li><li>最大值 right</li></ol></li><li>也是要不停得到自己输入的内容</li></ul><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">float</span> nowValue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户可以拖动的水平滑动条，用于在最小值和最大值之间更改某值。</span></span><br><span class="line">nowValue = GUI.HorizontalSlider(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">100</span>, <span class="number">100</span>, <span class="number">50</span>), nowValue, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">Debug.Log(nowValue);</span><br></pre></td></tr></table></figure><h2 id="竖直拖动条"><a class="markdownIt-Anchor" href="#竖直拖动条"></a> 竖直拖动条</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">// 用户可以拖动的垂直滑动条，用于在最小值和最大值之间更改某值。</span></span><br><span class="line">nowValue = GUI.VerticalSlider(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">150</span>, <span class="number">50</span>, <span class="number">100</span>), nowValue, <span class="number">0</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p><strong>在设置面板中加入拖动条控制音乐大小</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SettingPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 拖动条控制音乐大小</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> musicValue = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> Rect musicPos;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> soundValue = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> Rect soundPos;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 拖动条</span></span><br><span class="line">        musicValue = GUI.HorizontalSlider(musicPos, musicValue, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        soundValue = GUI.HorizontalSlider(soundPos, soundValue, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>制作一个登陆面板</strong><br />请在之前的基础上,制作一个登陆面板,有用户名输入和密码输入,有进入游戏和返回上一级按钮,点击开始界面中的开始游戏后 进入登陆面板,输入的用户名为admin密码为8888才能切换场景</p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.%E8%BE%93%E5%85%A5%E6%A1%86%E5%92%8C%E6%8B%96%E5%8A%A8%E6%9D%A1/file-20250226172348488.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//面板的显示隐藏 所有地方都能够快速使用的</span></span><br><span class="line">    <span class="comment">//静态 方法 和静态变量 就可以直接通过类名就用了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LoginPanel instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HideMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//两个 按钮</span></span><br><span class="line">    <span class="keyword">public</span> Rect btn1Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect btn2Pos;</span><br><span class="line">    <span class="comment">//两个 label</span></span><br><span class="line">    <span class="keyword">public</span> Rect lab1Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect lab2Pos;</span><br><span class="line">    <span class="comment">//两个 输入框</span></span><br><span class="line">    <span class="keyword">public</span> Rect input1Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect input2Pos;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用户名和密码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> userName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">string</span> passWord = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">        HideMe();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//登录按钮</span></span><br><span class="line">        <span class="keyword">if</span> ( GUI.Button(btn1Pos, <span class="string">&quot;登录游戏&quot;</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(userName == <span class="string">&quot;admin&quot;</span> &amp;&amp; passWord == <span class="string">&quot;8888&quot;</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                SceneManager.LoadScene(<span class="string">&quot;GameScene&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(<span class="string">&quot;用户名或者密码错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//返回按钮</span></span><br><span class="line">        <span class="keyword">if</span>( GUI.Button(btn2Pos, <span class="string">&quot;返回&quot;</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">            BeginPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//文本</span></span><br><span class="line">        GUI.Label(lab1Pos, <span class="string">&quot;用户名&quot;</span>);</span><br><span class="line">        GUI.Label(lab2Pos, <span class="string">&quot;密码&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输入框</span></span><br><span class="line">        userName = GUI.TextField(input1Pos, userName);</span><br><span class="line">        passWord = GUI.PasswordField(input2Pos, passWord, <span class="string">&#x27;*&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;输入&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#输入&quot;&gt;&lt;/a&gt; 输入&lt;/h1&gt;
&lt;h2 id=&quot;普通输入textfield&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#普通输入textfield&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>4.多选框和单选框</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.%E5%A4%9A%E9%80%89%E6%A1%86%E5%92%8C%E5%8D%95%E9%80%89%E6%A1%86/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.%E5%A4%9A%E9%80%89%E6%A1%86%E5%92%8C%E5%8D%95%E9%80%89%E6%A1%86/</id>
    <published>2025-02-26T08:10:32.000Z</published>
    <updated>2025-02-26T09:03:00.967Z</updated>
    
    <content type="html"><![CDATA[<h1 id="多选框"><a class="markdownIt-Anchor" href="#多选框"></a> 多选框</h1><p><strong>GUI.Toggle的返回值是该Toggle被点击后是否选中</strong><br />Toggle静态方法 创建多选框</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个打开 / 关闭的开关按钮。</span></span><br><span class="line"><span class="comment">// 要传入一个布尔值，true为选中，false为不选中</span></span><br><span class="line"><span class="comment">// Toggle静态方法会返回一个布尔值，返回的布尔值是, 上次鼠标改变Toggle后是否选中</span></span><br><span class="line"><span class="comment">// 普通样式</span></span><br><span class="line">isSel = GUI.Toggle(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">100</span>, <span class="number">30</span>), isSel, <span class="string">&quot;效果开关&quot;</span>);</span><br><span class="line"><span class="comment">// GUI.Toggle的点击范围是用的Rect中的宽高</span></span><br><span class="line"><span class="comment">// 用fixedWidth和fixedHeight 改变图片的大小，但是不改变点击范围</span></span><br><span class="line"><span class="comment">// 修改从GUIStyle边缘到内容起始处的空间 padding</span></span><br><span class="line">isSel2 = GUI.Toggle(<span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">40</span>, <span class="number">100</span>, <span class="number">30</span>), isSel2, <span class="string">&quot;音效开关&quot;</span>, style);</span><br></pre></td></tr></table></figure><p>修改多选框样式<br /><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.%E5%A4%9A%E9%80%89%E6%A1%86%E5%92%8C%E5%8D%95%E9%80%89%E6%A1%86/file-20250226163031217.png" alt="" /></p><h1 id="单选框"><a class="markdownIt-Anchor" href="#单选框"></a> 单选框</h1><p>单选框通过多选框来实现的</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 单选框    (一般通过一个int来控制所有的flag, 可通过点击来改变是否选中)</span></span><br><span class="line"><span class="keyword">if</span> (GUI.Toggle(rect, selIndex == <span class="number">1</span>, <span class="string">&quot;选项1&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">selIndex = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (GUI.Toggle(rect, selIndex == <span class="number">2</span>, <span class="string">&quot;选项2&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line">selIndex = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>控制一个面板（比如设置面板的UI）的显隐，通常是将显示面板的脚本挂载到一个Pannel的游戏对象上，在控制这个游戏对象的失活与激活来是否显示面板和隐藏面板</p><ol><li>要完成面板之间相互控制显示有3种方法：<ul><li>第一种：都写在一个 <code>OnGUI</code> 中，通过 <code>bool</code> 标识去控制显影。</li><li>第二种：挂载在同一个对象上，通过控制脚本的 <code>gameObject.SetActive(true/false)</code> 去控制面板的显影。</li><li>第三种：挂载在不同对象上，通过控制对象的 <code>gameObject.SetActive(true/false)</code> 来达到面板的显影。</li></ul></li><li>关键的是如何在多个面板之间相互调用显隐。我们是通过静态变量和静态方法的形式，在 <code>Awake</code> 方法中初始化静态变量。如果要用该方法，<strong>一开始这个对象不能失活</strong>。</li></ol><p><strong>制作一个游戏设置面板，上面有背景音乐的开关和音效的开关，并且点击开始界面的设置面板可以打开设置面板</strong></p><h2 id="单例模式控制各个面板的显隐"><a class="markdownIt-Anchor" href="#单例模式控制各个面板的显隐"></a> 单例模式，控制各个面板的显隐</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 开始面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BeginPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 开始面板的显示隐藏</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BeginPanel instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HideMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">        HideMe();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 其他代码...</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 其他代码...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置面板脚本settingpanelcs"><a class="markdownIt-Anchor" href="#设置面板脚本settingpanelcs"></a> <strong>设置面板脚本SettingPanel.cs</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置面板脚本</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SettingPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 音乐开关和音效开关</span></span><br><span class="line">    <span class="keyword">public</span> Rect toggleMusicPos; <span class="comment">// **API: Rect**</span></span><br><span class="line">    <span class="keyword">public</span> Rect toggleSoundPos; <span class="comment">// **API: Rect**</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isSelMusic = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isSelSound = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SettingPanel instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HideMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">        HideMe();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 音乐开关和音效开关</span></span><br><span class="line">        isSelMusic = GUI.Toggle(toggleMusicPos, isSelMusic, <span class="string">&quot;音乐开关&quot;</span>);</span><br><span class="line">        isSelSound = GUI.Toggle(toggleSoundPos, isSelSound, <span class="string">&quot;音效开关&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 关闭按钮 设置面板 </span></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btnPos, <span class="string">&quot;&quot;</span>, btnStyle))</span><br><span class="line">        &#123; </span><br><span class="line">            <span class="comment">// 关闭自己这个面板的功能 </span></span><br><span class="line">            HideMe(); </span><br><span class="line">            <span class="comment">// 显示开始界面 </span></span><br><span class="line">            BeginPanel.ShowMe(); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开始面板beginpanelcs"><a class="markdownIt-Anchor" href="#开始面板beginpanelcs"></a> <strong>开始面板BeginPanel.cs</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//开始面板</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BeginPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//面板的显示隐藏 所有地方都能够快速使用的</span></span><br><span class="line">    <span class="comment">//静态 方法 和静态变量 就可以直接通过类名就用了</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BeginPanel instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">HideMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            instance.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//游戏标题</span></span><br><span class="line">    <span class="keyword">public</span> Rect labPos;</span><br><span class="line">    <span class="keyword">public</span> GUIContent labContent;</span><br><span class="line">    <span class="keyword">public</span> GUIStyle labStyle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//3个游戏按钮</span></span><br><span class="line">    <span class="keyword">public</span> Rect btn1Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect btn2Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect btn3Pos;</span><br><span class="line">    <span class="keyword">public</span> GUIStyle btnStyle;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//游戏标题</span></span><br><span class="line">        GUI.Label(labPos, labContent, labStyle);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3个游戏按钮</span></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn1Pos, <span class="string">&quot;开始游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//SceneManager.LoadScene(&quot;GameScene&quot;);</span></span><br><span class="line">            LoginPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn2Pos, <span class="string">&quot;设置游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//显示设置界面</span></span><br><span class="line">            SettingPanel.ShowMe();</span><br><span class="line">            <span class="comment">//隐藏自己</span></span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn3Pos, <span class="string">&quot;退出游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            QuitTipPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;多选框&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#多选框&quot;&gt;&lt;/a&gt; 多选框&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;GUI.Toggle的返回值是该Toggle被点击后是否选中&lt;/strong&gt;&lt;br /&gt;
Toggle静态方法 创建多选</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>3.文本和按钮控件</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E6%96%87%E6%9C%AC%E5%92%8C%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E6%96%87%E6%9C%AC%E5%92%8C%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-02-26T07:18:12.000Z</published>
    <updated>2025-02-26T08:08:56.161Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gui控件绘制的共同点"><a class="markdownIt-Anchor" href="#gui控件绘制的共同点"></a> GUI控件绘制的共同点</h1><ol><li>他们都是GUI公共类中提供的静态函数，直接调用即可。</li><li>他们的参数都大同小异：<ul><li>位置参数：Rect参数（x、y位置，w、h尺寸），左上角为坐标系原点</li><li>显示文本：string参数</li><li>图片信息：Texture参数</li><li>综合信息：GUIContent参数    （综合显示 文本，图片，tooltip）</li><li>自定义样式：GUIStyle参数</li></ul></li><li>每一种控件都有多种重载，都是各个参数的排列组合。</li></ol><p>注意：</p><ul><li>必备的参数内容是<strong>位置</strong>信息和<strong>显示</strong>信息</li><li>GUI的原点（0,0）Rect在左上角，x向右，y向下 为正</li></ul><h1 id="文本控件"><a class="markdownIt-Anchor" href="#文本控件"></a> 文本控件</h1><p><strong>Label静态方法所有重载</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在屏幕上创建一个文本或纹理标签。</span></span><br><span class="line"><span class="comment">// Label静态方法所有重载</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, <span class="built_in">string</span> text</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, Texture image</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, GUIContent guiContent</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, <span class="built_in">string</span> text, GUIStyle style</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, Texture image, GUIStyle style</span>)</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Label</span>(<span class="params">Rect position, GUIContent guiContent, GUIStyle style</span>)</span>;</span><br></pre></td></tr></table></figure><p><strong>string参数 和 Texture参数</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 基本使用 传入位置信息和显示信息 显示信息可以是显示文本和图片信息</span></span><br><span class="line">GUI.Label(<span class="keyword">new</span> Rect(<span class="number">100</span>, <span class="number">20</span>, <span class="number">100</span>, <span class="number">20</span>), <span class="string">&quot;666666欢迎你&quot;</span>);</span><br><span class="line"><span class="comment">// public static void Label(Rect position, Texture image);</span></span><br><span class="line">GUI.Label(labelRect1, image);</span><br></pre></td></tr></table></figure><p><strong>GUIContent</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 综合使用 传入位置信息和综合信息</span></span><br><span class="line"><span class="comment">// 综合信息GUIContent类里包括显示文本和图片信息</span></span><br><span class="line"><span class="comment">// public static void Label(Rect position, GUIContent labelGuiContent);</span></span><br><span class="line">GUI.Label(labelRect2, guiContent);</span><br><span class="line"><span class="comment">// tooltip静态变量 可以获取当前鼠标或者键盘选中的GUI控件 对应的 tooltip信息</span></span><br><span class="line"><span class="comment">// 鼠标指针当前悬停在其上或具有键盘焦点的控件的工具提示。（只读）</span></span><br><span class="line">Debug.Log(GUI.tooltip);</span><br></pre></td></tr></table></figure><p><strong>GUIStyle参数</strong></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E6%96%87%E6%9C%AC%E5%92%8C%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250226154239867.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.%E6%96%87%E6%9C%AC%E5%92%8C%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250226154310264.png" alt="" /></p><p>字体在：C:\Windows\Fonts 下面</p><h1 id="按钮控件"><a class="markdownIt-Anchor" href="#按钮控件"></a> 按钮控件</h1><p>参数和使用方式与<a href="#%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6">文本控件</a>一毛一样</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按钮控件  (在按钮范围内 按下鼠标再抬起鼠标 才算一次点击 才会返回true</span></span><br><span class="line">GUI.Button(btnRect, btnContent, btnStyle);</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 长按按钮控件   (只要在长按按钮范围内 按下鼠标 就会一直返回true</span></span><br><span class="line"><span class="keyword">if</span> (GUI.RepeatButton(btnRect, btnContent))</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;只要在长按按钮范围内 按下鼠标 就会一直返回true&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>请用GUI制作一个游戏开始界面，上面有开始游戏，退出游戏，设置等等按钮选项，点击开始游戏可以切换到游戏场景</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">StartMenu</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 游戏标题</span></span><br><span class="line">    <span class="keyword">public</span> Rect labPos;</span><br><span class="line">    <span class="keyword">public</span> GUIContent labContent;</span><br><span class="line">    <span class="keyword">public</span> GUIStyle labStyle;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个按钮位置和样式</span></span><br><span class="line">    <span class="keyword">public</span> Rect btn1Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect btn2Pos;</span><br><span class="line">    <span class="keyword">public</span> Rect btn3Pos;</span><br><span class="line">    <span class="keyword">public</span> GUIStyle btnStyle;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 渲染游戏标题</span></span><br><span class="line">        GUI.Label(labPos, labContent, labStyle);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 渲染三个按钮</span></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn1Pos, <span class="string">&quot;开始游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击开始游戏按钮事件处理</span></span><br><span class="line">            <span class="comment">// SceneManager.LoadScene(&quot;GameScene&quot;);</span></span><br><span class="line">            LoginPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn2Pos, <span class="string">&quot;设置游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击设置游戏按钮事件处理</span></span><br><span class="line">            SettingPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GUI.Button(btn3Pos, <span class="string">&quot;退出游戏&quot;</span>, btnStyle))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击退出游戏按钮事件处理</span></span><br><span class="line">            QuitTipPanel.ShowMe();</span><br><span class="line">            HideMe();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 隐藏当前界面</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">HideMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gui控件绘制的共同点&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gui控件绘制的共同点&quot;&gt;&lt;/a&gt; GUI控件绘制的共同点&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;他们都是GUI公共类中提供的静态函数，直接调用即可。&lt;/li&gt;
&lt;li&gt;他们的</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>2.GUI工作原理与主要作用</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.GUI%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%BB%E8%A6%81%E4%BD%9C%E7%94%A8/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.GUI%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86%E4%B8%8E%E4%B8%BB%E8%A6%81%E4%BD%9C%E7%94%A8/</id>
    <published>2025-02-26T07:09:04.000Z</published>
    <updated>2025-02-26T07:17:05.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="gui是什么"><a class="markdownIt-Anchor" href="#gui是什么"></a> GUI是什么</h1><p>GUI，即即时模式游戏用户交互界面（IMGUI），在Unity中一般简称为GUI。它是一个代码驱动的UI系统。</p><h1 id="gui的主要作用"><a class="markdownIt-Anchor" href="#gui的主要作用"></a> GUI的主要作用</h1><ol><li>作为程序员的调试工具，创建游戏内调试工具。</li><li>为脚本组件创建自定义检视面板。</li><li>创建新的编辑器窗口和工具以拓展Unity本身（一般用作内置游戏工具）。<br /><strong>注意：</strong> 不要用它为玩家制作UI功能。</li></ol><h1 id="gui的工作原理"><a class="markdownIt-Anchor" href="#gui的工作原理"></a> GUI的工作原理</h1><p>在继承MonoBehaviour的脚本中的特殊函数<code>OnGUI</code>里调用GUI提供的方法，类似生命周期函数。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnGUI</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//在其中书写 GUI相关代码 即可显示GUI内容</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="ongui函数注意事项"><a class="markdownIt-Anchor" href="#ongui函数注意事项"></a> OnGUI函数注意事项</h1><ol><li>它每帧执行，相当于是用于专门绘制GUI界面的函数。</li><li>一般只在其中执行GUI相关界面绘制和操作逻辑。</li><li>该函数在<code>OnDisable</code>之前，<code>LateUpdate</code>之后执行。    <a href="/2025/02/18/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E5%85%A5%E9%97%A8/unity%E5%85%A5%E9%97%A8%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0/" title="9.生命周期函数">生命周期函数</a></li><li>只要是继承Mono的脚本，都可以在<code>OnGUI</code>中绘制GUI。</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;gui是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gui是什么&quot;&gt;&lt;/a&gt; GUI是什么&lt;/h1&gt;
&lt;p&gt;GUI，即即时模式游戏用户交互界面（IMGUI），在Unity中一般简称为GUI。它是一个代码驱动的UI系统。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>1.GUI概述</title>
    <link href="http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/</id>
    <published>2025-02-26T07:05:01.000Z</published>
    <updated>2025-02-26T07:07:51.809Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150514948.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150533023.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150540603.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150604169.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150631723.png" alt="" /></p><p><img src="/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150749776.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/02/26/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.GUI%E6%A6%82%E8%BF%B0/file-20250226150514948.png</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/GUI/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="GUI" scheme="http://example.com/tags/GUI/"/>
    
    <category term="GUI基础知识" scheme="http://example.com/tags/GUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>13.打包PlayerPrefsDataMgr</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/13.%E6%89%93%E5%8C%85PlayerPrefsDataMgr/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/13.%E6%89%93%E5%8C%85PlayerPrefsDataMgr/</id>
    <published>2025-02-24T03:14:19.000Z</published>
    <updated>2025-02-24T03:17:12.169Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrefsDataMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PlayerPrefsDataMgr instance = <span class="keyword">new</span> PlayerPrefsDataMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PlayerPrefsDataMgr Instance =&gt; instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">PlayerPrefsDataMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Save</span>(<span class="params"><span class="built_in">object</span> obj, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Type dataType = obj.GetType();</span><br><span class="line">        FieldInfo[] fieldInfos = dataType.GetFields();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//我们存储都是通过PlayerPrefs来进行存储的</span></span><br><span class="line">        <span class="comment">//保证key的唯一性 我们就需要自己定一个key的规则</span></span><br><span class="line">        <span class="comment">//我们自己定一个规则</span></span><br><span class="line">        <span class="comment">// keyName_数据类类型_字段类型_字段名</span></span><br><span class="line">        <span class="built_in">string</span> keyName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        FieldInfo fieldInfo;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fieldInfos.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fieldInfo = fieldInfos[i];</span><br><span class="line">            keyName = <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;dataType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.FieldType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.Name&#125;</span>&quot;</span>;</span><br><span class="line">            SaveValue(fieldInfo.GetValue(obj), keyName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 只要Save了一次, 就马上存盘</span></span><br><span class="line">        PlayerPrefs.Save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SaveValue</span>(<span class="params"><span class="built_in">object</span> <span class="keyword">value</span>, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">int</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">int</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">float</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetFloat(key, (<span class="built_in">float</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">string</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetString(key, (<span class="built_in">string</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">bool</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">bool</span>)<span class="keyword">value</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果value的类型是List&lt;XXX&gt;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IList list = <span class="keyword">value</span> <span class="keyword">as</span> IList;</span><br><span class="line">            PlayerPrefs.SetInt(key, list.Count);    <span class="comment">// 要先保存List的长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                SaveValue(list[i], <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IDictionary dic = <span class="keyword">value</span> <span class="keyword">as</span> IDictionary;</span><br><span class="line">            PlayerPrefs.SetInt(key, dic.Count);</span><br><span class="line">            <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">object</span> item <span class="keyword">in</span> dic.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                SaveValue(item, key + <span class="string">&quot;_key_&quot;</span> + index.ToString());</span><br><span class="line">                SaveValue(dic[item], key + <span class="string">&quot;_value_&quot;</span> + index.ToString());</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果value的类型是自定义类型</span></span><br><span class="line">            Save(<span class="keyword">value</span>, key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不用object对象传入 而使用 Type传入</span></span><br><span class="line">    <span class="comment">//主要目的是节约一行代码（在外部）</span></span><br><span class="line">    <span class="comment">//假设现在你要 读取一个Player类型的数据 如果是传入object 你就必须在外部new一个对象传入</span></span><br><span class="line">    <span class="comment">//现在有Type的 你只用传入 一个Type typeof(Player) 然后我在内部动态创建一个对象给你返回出来</span></span><br><span class="line">    <span class="comment">//达到了 让你在外部 少写一行代码的作用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">Load</span>(<span class="params">Type type, String key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">object</span> v = Activator.CreateInstance(type);</span><br><span class="line">        <span class="comment">// 填充数据</span></span><br><span class="line">        FieldInfo[] fieldInfos = type.GetFields();</span><br><span class="line">        <span class="built_in">string</span> keyName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        FieldInfo fieldInfo;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fieldInfos.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fieldInfo = fieldInfos[i];</span><br><span class="line">            keyName = <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;type.Name&#125;</span>_<span class="subst">&#123;fieldInfo.FieldType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.Name&#125;</span>&quot;</span>;     <span class="comment">// 和存储的一样</span></span><br><span class="line">            fieldInfo.SetValue(v, LoadValue(fieldInfo.FieldType, keyName));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="built_in">object</span> <span class="title">LoadValue</span>(<span class="params">Type fieldType, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">float</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> PlayerPrefs.GetFloat(key, <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">string</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> PlayerPrefs.GetString(key, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">bool</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>) == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(fieldType))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">            IList list = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IList;</span><br><span class="line">            Type type = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                list.Add(LoadValue(type, <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> list;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(fieldType))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">            Type keyType = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">            Type valueType = fieldType.GetGenericArguments()[<span class="number">1</span>];</span><br><span class="line">            IDictionary dic = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IDictionary;</span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">object</span> k = LoadValue(keyType, key + <span class="string">&quot;_key_&quot;</span> + i.ToString());</span><br><span class="line">                <span class="built_in">object</span> v = LoadValue(valueType, key + <span class="string">&quot;_value_&quot;</span> + i.ToString());</span><br><span class="line">                dic.Add(k, v);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> dic;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> Load(fieldType, key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>右键PlayerPrefsDataMgr文件，导出包<br /><img src="/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/13.%E6%89%93%E5%8C%85PlayerPrefsDataMgr/file-20250224111710339.png" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>12.加密思路</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/12.%E5%8A%A0%E5%AF%86%E6%80%9D%E8%B7%AF/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/12.%E5%8A%A0%E5%AF%86%E6%80%9D%E8%B7%AF/</id>
    <published>2025-02-24T03:07:58.000Z</published>
    <updated>2025-02-24T03:11:16.259Z</updated>
    
    <content type="html"><![CDATA[<h1 id="找不到"><a class="markdownIt-Anchor" href="#找不到"></a> 找不到</h1><p>把存在硬盘上的内容放在一个不容易找到的地方多层文件夹包裹<br />名字辨识度低</p><p>但是对于PlayerPrefs不太适用因为位置已经固定了<br />我们改不了</p><h1 id="看不懂"><a class="markdownIt-Anchor" href="#看不懂"></a> 看不懂</h1><p>让数据的Key和Value让别人看不懂俗称加密<br />为Key和Value加密</p><h1 id="解不出"><a class="markdownIt-Anchor" href="#解不出"></a> 解不出</h1><p>不让别人获取到你加密的规则就解不出来了</p><h1 id="注意"><a class="markdownIt-Anchor" href="#注意"></a> 注意</h1><p>单机游戏加密只是提高别人修改你数据的门槛只要别人获取到你的源代码<br />知道你的加密规则<br />一切都没有任何意义<br />但是对于一般玩家来说几乎是不可能的事情</p><p>eg:<br /><strong>存的时候按照一定规则来存储</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">&#123;</span><br><span class="line">    Log(<span class="string">&quot;存储int:&quot;</span> + keyName + <span class="string">&quot;值 = &quot;</span> + (<span class="built_in">int</span>)<span class="keyword">value</span>);</span><br><span class="line">    <span class="comment">//为int数据加密</span></span><br><span class="line">    <span class="built_in">int</span> rValue = (<span class="built_in">int</span>)<span class="keyword">value</span>;</span><br><span class="line">    rValue += <span class="number">10</span>;</span><br><span class="line">    PlayerPrefs.SetInt(keyName, rValue);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>读取的时候按一定规则来读</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>) )</span><br><span class="line">&#123;</span><br><span class="line">    Log(<span class="string">&quot;读取int:&quot;</span> + keyName + <span class="string">&quot;值 = &quot;</span> + (PlayerPrefs.GetInt(keyName, <span class="number">0</span>) - <span class="number">10</span>));</span><br><span class="line">    <span class="comment">//解密 减10</span></span><br><span class="line">    <span class="keyword">return</span> PlayerPrefs.GetInt(keyName, <span class="number">0</span>) - <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;找不到&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#找不到&quot;&gt;&lt;/a&gt; 找不到&lt;/h1&gt;
&lt;p&gt;把存在硬盘上的内容放在一个不容易找到的地方多层文件夹包裹&lt;br /&gt;
名字辨识度低&lt;/p&gt;
&lt;p&gt;但是对于PlayerPrefs不太适用因</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>11.反射读取自定义类型</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/11.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/11.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/</id>
    <published>2025-02-24T02:56:52.000Z</published>
    <updated>2025-02-24T02:57:05.962Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">object</span> <span class="title">LoadValue</span>(<span class="params">Type fieldType, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">float</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetFloat(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">string</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetString(key, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">bool</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>) == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(fieldType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        IList list = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IList;</span><br><span class="line">        Type type = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            list.Add(LoadValue(type, <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(fieldType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        Type keyType = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">        Type valueType = fieldType.GetGenericArguments()[<span class="number">1</span>];</span><br><span class="line">        IDictionary dic = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IDictionary;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">object</span> k = LoadValue(keyType, key + <span class="string">&quot;_key_&quot;</span> + i.ToString());</span><br><span class="line">            <span class="built_in">object</span> v = LoadValue(valueType, key + <span class="string">&quot;_value_&quot;</span> + i.ToString());</span><br><span class="line">            dic.Add(k, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dic;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> Load(fieldType, key);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>10.反射读取Dictionary数据类型</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/10.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96Dictionary%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/10.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96Dictionary%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2025-02-24T02:52:01.000Z</published>
    <updated>2025-02-24T02:54:07.469Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">object</span> <span class="title">LoadValue</span>(<span class="params">Type fieldType, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">float</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetFloat(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">string</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetString(key, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">bool</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>) == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(fieldType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        IList list = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IList;</span><br><span class="line">        Type type = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            list.Add(LoadValue(type, <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(fieldType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        Type keyType = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">        Type valueType = fieldType.GetGenericArguments()[<span class="number">1</span>];</span><br><span class="line">        IDictionary dic = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IDictionary;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">object</span> k = LoadValue(keyType, key + <span class="string">&quot;_key_&quot;</span> + i.ToString());</span><br><span class="line">            <span class="built_in">object</span> v = LoadValue(valueType, key + <span class="string">&quot;_value_&quot;</span> + i.ToString());</span><br><span class="line">            dic.Add(k, v);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dic;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>9.反射读取List数据类型</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/9.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96List%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/9.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96List%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2025-02-24T02:45:53.000Z</published>
    <updated>2025-02-24T02:51:31.482Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">object</span> <span class="title">LoadValue</span>(<span class="params">Type fieldType, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">float</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetFloat(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">string</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetString(key, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">bool</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>) == <span class="number">1</span> ? <span class="literal">true</span> : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(fieldType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">int</span> count = PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">        IList list = Activator.CreateInstance(fieldType) <span class="keyword">as</span> IList;</span><br><span class="line">        Type type = fieldType.GetGenericArguments()[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; count; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            list.Add(LoadValue(type, <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>8.反射读取常用成员数据</title>
    <link href="http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/8.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96%E5%B8%B8%E7%94%A8%E6%88%90%E5%91%98%E6%95%B0%E6%8D%AE/"/>
    <id>http://example.com/2025/02/24/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/8.%E5%8F%8D%E5%B0%84%E8%AF%BB%E5%8F%96%E5%B8%B8%E7%94%A8%E6%88%90%E5%91%98%E6%95%B0%E6%8D%AE/</id>
    <published>2025-02-24T02:40:15.000Z</published>
    <updated>2025-02-24T02:42:49.979Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">Load</span>(<span class="params">Type type, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">object</span> v = Activator.CreateInstance(type);</span><br><span class="line">        FieldInfo[] fieldInfos = type.GetFields();</span><br><span class="line">        <span class="built_in">string</span> loadKey = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fieldInfos.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            FieldInfo tmp = fieldInfos[i];</span><br><span class="line">            loadKey = <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;type.Name&#125;</span>_<span class="subst">&#123;tmp.FieldType.Name&#125;</span>_<span class="subst">&#123;tmp.Name&#125;</span>&quot;</span>;</span><br><span class="line">            <span class="comment">// 给v对象的字段赋值</span></span><br><span class="line">            tmp.SetValue(v, LoadValue(tmp.FieldType, loadKey));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> v;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 得单个数据</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">object</span> <span class="title">LoadValue</span>(<span class="params">Type fieldType, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//object v = Activator.CreateInstance(fieldType);</span></span><br><span class="line">    <span class="comment">// 根据字段类型调用不同API</span></span><br><span class="line">    <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">int</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">float</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetFloat(key, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">string</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetString(key, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (fieldType == <span class="keyword">typeof</span>(<span class="built_in">bool</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> PlayerPrefs.GetInt(key) == <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 测试代码</span></span><br><span class="line">Player p = PlayerPrefsDataMgr.Instance.Load(<span class="keyword">typeof</span>(Player), <span class="string">&quot;player&quot;</span>) <span class="keyword">as</span> Player;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight cs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;l</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>7.反射存储自定义类型</title>
    <link href="http://example.com/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/7.%E5%8F%8D%E5%B0%84%E5%AD%98%E5%82%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/7.%E5%8F%8D%E5%B0%84%E5%AD%98%E5%82%A8%E8%87%AA%E5%AE%9A%E4%B9%89%E7%B1%BB%E5%9E%8B/</id>
    <published>2025-02-22T02:58:33.000Z</published>
    <updated>2025-02-24T03:04:09.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="savedata本来就是存储自定义类"><a class="markdownIt-Anchor" href="#savedata本来就是存储自定义类"></a> SaveData本来就是存储自定义类</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 如果value的类型是自定义类型</span></span><br><span class="line">    Save(<span class="keyword">value</span>, key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrefsDataMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PlayerPrefsDataMgr instance = <span class="keyword">new</span> PlayerPrefsDataMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PlayerPrefsDataMgr Instance =&gt; instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">PlayerPrefsDataMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Save</span>(<span class="params"><span class="built_in">object</span> obj, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Type dataType = obj.GetType();</span><br><span class="line">        FieldInfo[] fieldInfos = dataType.GetFields();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//我们存储都是通过PlayerPrefs来进行存储的</span></span><br><span class="line">        <span class="comment">//保证key的唯一性 我们就需要自己定一个key的规则</span></span><br><span class="line">        <span class="comment">//我们自己定一个规则</span></span><br><span class="line">        <span class="comment">// keyName_数据类类型_字段类型_字段名</span></span><br><span class="line">        <span class="built_in">string</span> keyName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        FieldInfo fieldInfo;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fieldInfos.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fieldInfo = fieldInfos[i];</span><br><span class="line">            keyName = <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;dataType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.FieldType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.Name&#125;</span>&quot;</span>;</span><br><span class="line">            SaveValue(fieldInfo.GetValue(obj), keyName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 只要Save了一次, 就马上存盘</span></span><br><span class="line">        PlayerPrefs.Save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SaveValue</span>(<span class="params"><span class="built_in">object</span> <span class="keyword">value</span>, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">int</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">int</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">float</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetFloat(key, (<span class="built_in">float</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">string</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetString(key, (<span class="built_in">string</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">bool</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">bool</span>)<span class="keyword">value</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果value的类型是List&lt;XXX&gt;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IList list = <span class="keyword">value</span> <span class="keyword">as</span> IList;</span><br><span class="line">            PlayerPrefs.SetInt(key, list.Count);    <span class="comment">// 要先保存List的长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(<span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">                SaveValue(list[i], <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IDictionary dic = <span class="keyword">value</span> <span class="keyword">as</span> IDictionary;</span><br><span class="line">            PlayerPrefs.SetInt(key, dic.Count);</span><br><span class="line">            <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">object</span> item <span class="keyword">in</span> dic.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                SaveValue(item, key + <span class="string">&quot;_key_&quot;</span> + index.ToString());</span><br><span class="line">                SaveValue(dic[item], key + <span class="string">&quot;_value_&quot;</span> + index.ToString());</span><br><span class="line">                Debug.Log(key + <span class="string">&quot;_key_&quot;</span> + index.ToString());</span><br><span class="line">                Debug.Log(key + <span class="string">&quot;_value_&quot;</span> + index.ToString());</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果value的类型是自定义类型</span></span><br><span class="line">            Save(<span class="keyword">value</span>, key);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不用object对象传入 而使用 Type传入</span></span><br><span class="line">    <span class="comment">//主要目的是节约一行代码（在外部）</span></span><br><span class="line">    <span class="comment">//假设现在你要 读取一个Player类型的数据 如果是传入object 你就必须在外部new一个对象传入</span></span><br><span class="line">    <span class="comment">//现在有Type的 你只用传入 一个Type typeof(Player) 然后我在内部动态创建一个对象给你返回出来</span></span><br><span class="line">    <span class="comment">//达到了 让你在外部 少写一行代码的作用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">Load</span>(<span class="params">Type type, String key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;savedata本来就是存储自定义类&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#savedata本来就是存储自定义类&quot;&gt;&lt;/a&gt; SaveData本来就是存储自定义类&lt;/h1&gt;
&lt;figure class=&quot;highlight cs</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>6.反射存储Dictionary数据类型</title>
    <link href="http://example.com/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/6.%E5%8F%8D%E5%B0%84%E5%AD%98%E5%82%A8Dictionary%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://example.com/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/6.%E5%8F%8D%E5%B0%84%E5%AD%98%E5%82%A8Dictionary%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2025-02-22T02:46:03.000Z</published>
    <updated>2025-02-24T03:03:51.342Z</updated>
    
    <content type="html"><![CDATA[<p>类似<a href="/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/5.%E5%8F%8D%E5%B0%84%E5%AD%98%E5%82%A8List%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/" title="5.反射存储List数据类型">反射存储List数据类型</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">&#123;</span><br><span class="line">    IDictionary dic = <span class="keyword">value</span> <span class="keyword">as</span> IDictionary;</span><br><span class="line">    PlayerPrefs.SetInt(key, dic.Count);</span><br><span class="line">    <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="built_in">object</span> item <span class="keyword">in</span> dic.Keys)</span><br><span class="line">    &#123;</span><br><span class="line">        SaveValue(item, key + <span class="string">&quot;_key_&quot;</span> + index.ToString());</span><br><span class="line">        SaveValue(dic[item], key + <span class="string">&quot;_value_&quot;</span> + index.ToString());</span><br><span class="line">        index++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerPrefsDataMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> PlayerPrefsDataMgr instance = <span class="keyword">new</span> PlayerPrefsDataMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PlayerPrefsDataMgr Instance =&gt; instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">PlayerPrefsDataMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Save</span>(<span class="params"><span class="built_in">object</span> obj, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Type dataType = obj.GetType();</span><br><span class="line">        FieldInfo[] fieldInfos = dataType.GetFields();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//我们存储都是通过PlayerPrefs来进行存储的</span></span><br><span class="line">        <span class="comment">//保证key的唯一性 我们就需要自己定一个key的规则</span></span><br><span class="line">        <span class="comment">//我们自己定一个规则</span></span><br><span class="line">        <span class="comment">// keyName_数据类类型_字段类型_字段名</span></span><br><span class="line">        <span class="built_in">string</span> keyName = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        FieldInfo fieldInfo;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; fieldInfos.Length; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            fieldInfo = fieldInfos[i];</span><br><span class="line">            keyName = <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;dataType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.FieldType.Name&#125;</span>_<span class="subst">&#123;fieldInfo.Name&#125;</span>&quot;</span>;</span><br><span class="line">            SaveValue(fieldInfo.GetValue(obj), keyName);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 只要Save了一次, 就马上存盘</span></span><br><span class="line">        PlayerPrefs.Save();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SaveValue</span>(<span class="params"><span class="built_in">object</span> <span class="keyword">value</span>, <span class="built_in">string</span> key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">int</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">int</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">float</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetFloat(key, (<span class="built_in">float</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">string</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetString(key, (<span class="built_in">string</span>)<span class="keyword">value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">value</span> <span class="keyword">is</span> <span class="built_in">bool</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            PlayerPrefs.SetInt(key, (<span class="built_in">bool</span>)<span class="keyword">value</span> ? <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 如果value的类型是List&lt;XXX&gt;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IList).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IList list = <span class="keyword">value</span> <span class="keyword">as</span> IList;</span><br><span class="line">            PlayerPrefs.SetInt(key, list.Count);    <span class="comment">// 要先保存List的长度</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; list.Count; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(<span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">                SaveValue(list[i], <span class="string">$&quot;<span class="subst">&#123;key&#125;</span>_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">typeof</span>(IDictionary).IsAssignableFrom(<span class="keyword">value</span>.GetType()))</span><br><span class="line">        &#123;</span><br><span class="line">            IDictionary dic = <span class="keyword">value</span> <span class="keyword">as</span> IDictionary;</span><br><span class="line">            PlayerPrefs.SetInt(key, dic.Count);</span><br><span class="line">            <span class="built_in">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="built_in">object</span> item <span class="keyword">in</span> dic.Keys)</span><br><span class="line">            &#123;</span><br><span class="line">                SaveValue(item, key + <span class="string">&quot;_key_&quot;</span> + index.ToString());</span><br><span class="line">                SaveValue(dic[item], key + <span class="string">&quot;_value_&quot;</span> + index.ToString());</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//不用object对象传入 而使用 Type传入</span></span><br><span class="line">    <span class="comment">//主要目的是节约一行代码（在外部）</span></span><br><span class="line">    <span class="comment">//假设现在你要 读取一个Player类型的数据 如果是传入object 你就必须在外部new一个对象传入</span></span><br><span class="line">    <span class="comment">//现在有Type的 你只用传入 一个Type typeof(Player) 然后我在内部动态创建一个对象给你返回出来</span></span><br><span class="line">    <span class="comment">//达到了 让你在外部 少写一行代码的作用</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="built_in">object</span> <span class="title">Load</span>(<span class="params">Type type, String key</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;类似&lt;a href=&quot;/2025/02/22/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/PlayerPrefs/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="PlayerPrefs" scheme="http://example.com/tags/PlayerPrefs/"/>
    
    <category term="PlayerPrefs实践项目" scheme="http://example.com/tags/PlayerPrefs%E5%AE%9E%E8%B7%B5%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
</feed>
