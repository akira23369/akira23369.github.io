<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-04-02T12:11:04.885Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>18.图集制作</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/</id>
    <published>2025-04-02T12:11:02.000Z</published>
    <updated>2025-04-02T12:11:04.885Z</updated>
    
    <content type="html"><![CDATA[<script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;https://unpkg.com/kity@2.0.4/dist/kity.min.js&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text&amp;#x2F;javascript&quot; src=&quot;ht</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
  </entry>
  
  <entry>
    <title>17.Dropdown下拉列表控件</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-02T09:10:19.000Z</published>
    <updated>2025-04-02T12:10:44.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="dropdown是什么"><a class="markdownIt-Anchor" href="#dropdown是什么"></a> Dropdown是什么</h1><p>Dropdown是下拉列表（下拉选单）组件，是UGUI中用于处理下拉列表相关交互的关键组件。<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown%E5%BC%80%E5%B1%80%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>在Hierarchy视图右键 -&gt; UI -&gt; Dropdown。<br />Unity会自动创建一个Dropdown对象，并附带必要的子对象（Label、Arrow、Template等）。<br />默认创建的Dropdown由4组对象组成：</p><p>父对象<br />Dropdown组件依附的对象，还有一个Image组件作为背景图<br />子对象<br />Label：显示当前选中的选项。<br />Arrow：指示这是一个下拉菜单，通常是一个向下的箭头。<br />Template：下拉菜单的模板，包含一个ScrollView和一个Item模板。<br />Item：下拉菜单中的每一项，通常是一个Toggle控件。</p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172102925.png" alt="" /></p><p>注意：Dropdown的Content会在游戏运行的时候自己扩展<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown%E7%9A%84Content%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h1 id="dropdown-下拉列表控件参数"><a class="markdownIt-Anchor" href="#dropdown-下拉列表控件参数"></a> Dropdown 下拉列表控件参数</h1><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown%20%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172508961.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><h2 id="transition过渡效果"><a class="markdownIt-Anchor" href="#transition过渡效果"></a> Transition：过渡效果</h2><p>响应用户输入的过渡效果</p><h2 id="navigation导航模式"><a class="markdownIt-Anchor" href="#navigation导航模式"></a> Navigation：导航模式</h2><p>可以设置UI元素如何在播放模式中控制器导航</p><h2 id="template关联下拉列表对象"><a class="markdownIt-Anchor" href="#template关联下拉列表对象"></a> Template：关联下拉列表对象</h2><h2 id="caption-text关联显示当前选择内容的文本组件"><a class="markdownIt-Anchor" href="#caption-text关联显示当前选择内容的文本组件"></a> Caption Text：关联显示当前选择内容的文本组件</h2><h2 id="caption-image关联显示当前选择内容的图片组件"><a class="markdownIt-Anchor" href="#caption-image关联显示当前选择内容的图片组件"></a> Caption Image：关联显示当前选择内容的图片组件</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402173448356.png" alt="" /></p><h2 id="item-text关联下拉列表选项用的文本控件"><a class="markdownIt-Anchor" href="#item-text关联下拉列表选项用的文本控件"></a> Item Text：关联下拉列表选项用的文本控件</h2><h2 id="item-image关联下拉列表选项用的图片控件"><a class="markdownIt-Anchor" href="#item-image关联下拉列表选项用的图片控件"></a> Item Image：关联下拉列表选项用的图片控件</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402173521495.png" alt="" /></p><h2 id="value当前所选选项的索引值"><a class="markdownIt-Anchor" href="#value当前所选选项的索引值"></a> Value：当前所选选项的索引值</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown%E7%9A%84Value%E5%8F%82%E6%95%B0%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="alpha-fada-speed下拉列表窗口淡入淡出的速度"><a class="markdownIt-Anchor" href="#alpha-fada-speed下拉列表窗口淡入淡出的速度"></a> Alpha Fada Speed：下拉列表窗口淡入淡出的速度</h2><h2 id="options存在的选项列表"><a class="markdownIt-Anchor" href="#options存在的选项列表"></a> Options：存在的选项列表</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172958115.png" alt="" /></p><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Dropdown dropdown = GetComponent&lt;Dropdown&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下拉菜单当前选中项的索引</span></span><br><span class="line">print(dropdown.<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下拉菜单当前选中项的文本内容</span></span><br><span class="line">print(dropdown.options[dropdown.<span class="keyword">value</span>].text);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在下拉菜单的选项列表末尾添加一个新选项，该选项的文本内容为 &quot;123123123&quot;</span></span><br><span class="line">dropdown.options.Add(<span class="keyword">new</span> Dropdown.OptionData(<span class="string">&quot;123123123&quot;</span>));</span><br><span class="line"><span class="comment">// 添加很多新选项 </span></span><br><span class="line">dropdown.AddOptions(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Option 1&quot;</span>, <span class="string">&quot;Option 2&quot;</span>, <span class="string">&quot;Option 3&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空现有选项 </span></span><br><span class="line">dropdown.ClearOptions();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="监听事件的两种方式"><a class="markdownIt-Anchor" href="#监听事件的两种方式"></a> 监听事件的两种方式</h1><p>一、拖脚本<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402174826362.png" alt="" /></p><p>二、代码监听</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DropdownTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Dropdown wifeDropdown;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        wifeDropdown.ClearOptions();</span><br><span class="line">        wifeDropdown.AddOptions(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;鸢一折纸&quot;</span>, <span class="string">&quot;时崎狂三&quot;</span>, <span class="string">&quot;五河琴里&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line">        wifeDropdown.onValueChanged.AddListener(OnWifeChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnWifeChanged</span>(<span class="params"><span class="built_in">int</span> index</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> wifeName = wifeDropdown.options[index].text;</span><br><span class="line">        Debug.Log(<span class="string">&quot;选择了&quot;</span> + wifeName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 选择心意老婆</span></span><br><span class="line">        <span class="keyword">switch</span>(wifeName)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;鸢一折纸&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;鸢一折纸是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;时崎狂三&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;时崎狂三是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;五河琴里&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;五河琴里是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在上节课的ScrollView练习题基础上，请用现在所学知识，制作一个这样的功能：场景上有一个下拉列表，可以通过改变下拉列表来改变当前场景是白天还是黑夜</p><p>在游戏面板创建一个下拉列表，添加白天和黑夜选项。<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402194720116.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Light light;  <span class="comment">// 光源对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Dropdown ddChange;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    ddChange.onValueChanged.AddListener((index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">switch</span> (index)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                light.intensity = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                light.intensity = <span class="number">0.3f</span>; </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;dropdown是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#dropdown是什么&quot;&gt;&lt;/a&gt; Dropdown是什么&lt;/h1&gt;
&lt;p&gt;Dropdown是下拉列表（下拉选单）组件，是UGUI中用于处理下拉列表相关交互的关键组件</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>16.ScrollView滚动视图控件</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-02T06:53:59.000Z</published>
    <updated>2025-04-02T09:07:56.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scrollrect是什么"><a class="markdownIt-Anchor" href="#scrollrect是什么"></a> ScrollRect是什么</h1><p>ScrollRect是滚动视图组件，是UGUI中用于处理滚动视图相关交互的关键组件。<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>在Unity编辑器中，右键点击 Hierarchy 面板，选择 UI &gt; ScrollView。<br />Unity会自动创建一个 ScrollView 对象，它包含一个 Viewport 和一个 Content 区域。<br />默认创建的ScrollRect由4组对象组成：</p><p>父对象——ScrollRect组件依附的对象，还有一个Image组件，作为背景图。<br />子对象：<br />Viewport：视口区域，决定了哪些内容可见。<br />Content：内容区域，所有要滚动显示的内容都放在这里。<br />Scrollbar (Horizontal/Vertical)：水平或垂直滚动条，用于控制内容的滚动。<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402145914739.png" alt="" /></p><h1 id="scrollview-滚动视图参数"><a class="markdownIt-Anchor" href="#scrollview-滚动视图参数"></a> ScrollView 滚动视图参数</h1><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%20%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE.png" alt="" /></p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402150245030.png" alt="" /></p><h2 id="content内容区域所有显示内容父对象"><a class="markdownIt-Anchor" href="#content内容区域所有显示内容父对象"></a> Content：内容区域，所有显示内容父对象</h2><p>控制滚动视图显示内容的父对象，它的尺寸有多大<br />滚动视图就能拖多远<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollViewContent%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="horizontal启用水平滚动"><a class="markdownIt-Anchor" href="#horizontal启用水平滚动"></a> Horizontal：启用水平滚动</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%E6%B0%B4%E5%B9%B3%E7%AB%96%E7%9B%B4%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="vertical启用垂直滚动"><a class="markdownIt-Anchor" href="#vertical启用垂直滚动"></a> Vertical：启用垂直滚动</h2><h2 id="movement-type元素的运动类型"><a class="markdownIt-Anchor" href="#movement-type元素的运动类型"></a> Movement Type：元素的运动类型</h2><p>滚动视图元素的运动类型。主要控制拖动时的反馈效果</p><p>Unrestricted（一般不使用）：不受限制，随便拖动</p><p>Elastic（常用）：回弹效果，当滚出边缘后，会弹回边界<br />Elasticity：回弹系数，控制回弹效果。值越大回弹越慢</p><p>Clamped：夹紧效果，始终限制在范围内，没有回弹效果<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%E5%9B%9E%E5%BC%B9%E6%BC%94%E7%A4%BA%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="inertia移动惯性"><a class="markdownIt-Anchor" href="#inertia移动惯性"></a> Inertia：移动惯性</h2><p>如果开启，松开鼠标后会有一定的移动惯性</p><p>Deceleration Rate：减速率（0~1），0没有惯性，1不会停止</p><h2 id="scroll-sensitivity滚轮敏感度"><a class="markdownIt-Anchor" href="#scroll-sensitivity滚轮敏感度"></a> Scroll Sensitivity：滚轮敏感度</h2><p>（鼠标中间）和触摸板（笔记本）的滚动事件敏感性</p><h2 id="viewport关联滚动视图内容视口对象"><a class="markdownIt-Anchor" href="#viewport关联滚动视图内容视口对象"></a> Viewport：关联滚动视图内容视口对象</h2><h2 id="horizontal-scrollbar关联水平滚动条"><a class="markdownIt-Anchor" href="#horizontal-scrollbar关联水平滚动条"></a> Horizontal Scrollbar：关联水平滚动条</h2><h2 id="visibility是否在不需要时自动隐藏等模式"><a class="markdownIt-Anchor" href="#visibility是否在不需要时自动隐藏等模式"></a> Visibility：是否在不需要时自动隐藏等模式</h2><p>Permanent：一直显示滚动条<br />Auto Hide：自动隐藏滚动条<br />Auto Hide And Expand Viewport：自动隐藏滚动条并且自动拓展内容视口</p><h2 id="spacing滚动条和视口之间的间隔空间"><a class="markdownIt-Anchor" href="#spacing滚动条和视口之间的间隔空间"></a> Spacing：滚动条和视口之间的间隔空间</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%E9%97%B4%E8%B7%9D%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="onvaluechanged滚动视图位置改变时执行的函数列表"><a class="markdownIt-Anchor" href="#onvaluechanged滚动视图位置改变时执行的函数列表"></a> OnValueChanged：滚动视图位置改变时执行的函数列表</h2><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ScrollRect scrollRect = <span class="keyword">this</span>.GetComponent&lt;ScrollRect&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变内容的大小，根据内容尺寸</span></span><br><span class="line">scrollRect.content.sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置归一化位置 (0, 0.5f)</span></span><br><span class="line"><span class="comment">// 其中 x 表示水平方向的归一化值，范围是 0 到 1，0 表示左边缘，1 表示右边缘</span></span><br><span class="line"><span class="comment">// y 表示垂直方向的归一化值，范围是 0 到 1，0 表示下边缘，1 表示上边缘</span></span><br><span class="line">scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">0.5f</span>);</span><br></pre></td></tr></table></figure><h1 id="监听事件两种方式"><a class="markdownIt-Anchor" href="#监听事件两种方式"></a> 监听事件两种方式</h1><p>一、拖脚本</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollView</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ScrollViewValueChange</span>(<span class="params">Vector2 position</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;当前滚动位置: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402154412900.png" alt="" /></p><p>二、代码监听</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollViewExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> ScrollRect scrollRect; <span class="comment">// 绑定 ScrollRect 组件</span></span><br><span class="line">    <span class="keyword">public</span> GameObject itemPrefab; <span class="comment">// 绑定要添加的预制体</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 绑定滚动事件</span></span><br><span class="line">        scrollRect.onValueChanged.AddListener(OnScroll);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态添加 10 个 item 到 Content 中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject newItem = Instantiate(itemPrefab, scrollRect.content);</span><br><span class="line">            newItem.GetComponentInChildren&lt;Text&gt;().text = <span class="string">&quot;Item &quot;</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 滚动到顶部</span></span><br><span class="line">        scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动到底部</span></span><br><span class="line">        scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动到指定位置（0到1之间）</span></span><br><span class="line">        scrollRect.horizontalNormalizedPosition = <span class="number">0.5f</span>; <span class="comment">// 水平滚动到中间</span></span><br><span class="line">        scrollRect.verticalNormalizedPosition = <span class="number">0.5f</span>;   <span class="comment">// 垂直滚动到中间</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnScroll</span>(<span class="params">Vector2 position</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;当前滚动位置: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在上节课的Slider练习题基础上，请用现在所学知识，制作一个这样的功能：<br />有一个背包按钮，点击后可以打开一个背包面板，面板中有一个滚动视图，滚动视图中动态创建10个道具图标<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%E7%BB%83%E4%B9%A0%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>Content 的子对象的排列方式</p><ol><li>使用 Layout Group 自动排列</li><li>手动设置对象位置</li></ol><p>先创建一个背包按钮<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402165715786.png" alt="" /></p><p>拼好背包面板<br />取消掉水平的滚动条，做一个退出按钮<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402165809909.png" alt="" /></p><p>拿样例图来对比背包滚动视图的位置，确定物品的起始位置（这里是 （10，-10，0））<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402170111421.png" alt="" /></p><p><strong>手动设置ScrollView 的 Content 的子对象排列</strong><br />BagPanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BagPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BagPanel instance;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BagPanel Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ScrollRect svItem;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> itemCount = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> spacing = <span class="number">40f</span>; <span class="comment">// 图与图之间的间隔</span></span><br><span class="line">    <span class="keyword">public</span> GameObject itemPrefab;   </span><br><span class="line">    <span class="keyword">public</span> Button btnClose;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> itemwidth = itemPrefab.GetComponent&lt;RectTransform&gt;().rect.width;        <span class="comment">// 元素的宽度</span></span><br><span class="line">        <span class="built_in">float</span> itemheight = itemPrefab.GetComponent&lt;RectTransform&gt;().rect.height;      <span class="comment">// 元素的高度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态创建itemCount个图，作为滚动视图的子物体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; itemCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject newItem = Instantiate(itemPrefab, svItem.content);</span><br><span class="line">            newItem.transform.localPosition = <span class="keyword">new</span> Vector3(<span class="number">10</span>, <span class="number">-10</span>, <span class="number">0</span>) + </span><br><span class="line">                <span class="keyword">new</span> Vector3((i % <span class="number">4</span>) * (itemwidth + spacing), -(i / <span class="number">4</span>) * (itemheight + spacing), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置content的高度</span></span><br><span class="line">        svItem.content.sizeDelta = <span class="keyword">new</span> Vector2(</span><br><span class="line">            svItem.content.sizeDelta.x,</span><br><span class="line">            (itemheight + spacing) * Mathf.Ceil(itemCount / <span class="number">4f</span>) - spacing</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        btnClose.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 背包按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnBag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 背包按钮</span></span><br><span class="line">        btnBag.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            BagPanel.Instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;scrollrect是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scrollrect是什么&quot;&gt;&lt;/a&gt; ScrollRect是什么&lt;/h1&gt;
&lt;p&gt;ScrollRect是滚动视图组件，是UGUI中用于处理滚动视图相关交互的关键</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>15.ScrollBar滚动条控件</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-02T06:32:48.000Z</published>
    <updated>2025-04-02T06:52:49.011Z</updated>
    
    <content type="html"><![CDATA[<h1 id="scrollbar是什么"><a class="markdownIt-Anchor" href="#scrollbar是什么"></a> Scrollbar是什么</h1><p>Scrollbar是滚动条组件，是UGUI中用于处理滚动条相关交互的关键组件。<br />它通常与 <code>ScrollView</code> 一起使用，但也可以单独使用。<br /><img src="../NGUI/NGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E5%92%8CProgressBar%E8%BF%9B%E5%BA%A6%E6%9D%A1/file-20250312095129831.png" alt="" /></p><p>在Unity编辑器中，右键点击 Hierarchy 面板，选择 UI &gt; Scrollbar。<br />Unity会自动创建一个 Scrollbar 对象，它包含一个 Handle（滑块）和一个 Background（背景）。<br />父对象——Scrollbar组件依附的对象。<br />子对象——滚动块对象。<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250402144224535.png" alt="" /></p><h1 id="scrollbar-滚动条参数"><a class="markdownIt-Anchor" href="#scrollbar-滚动条参数"></a> ScrollBar 滚动条参数</h1><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/ScrollBar%20%E6%BB%9A%E5%8A%A8%E6%9D%A1.png" alt="" /></p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250402144909675.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><h2 id="transition响应用户输入的过渡效果"><a class="markdownIt-Anchor" href="#transition响应用户输入的过渡效果"></a> Transition：响应用户输入的过渡效果</h2><h2 id="navigation导航模式"><a class="markdownIt-Anchor" href="#navigation导航模式"></a> Navigation：导航模式</h2><p>可以设置UI元素如何在播放模式中控制器导航</p><h2 id="handle-rect关联滚动块图形对象"><a class="markdownIt-Anchor" href="#handle-rect关联滚动块图形对象"></a> Handle Rect：关联滚动块图形对象</h2><h2 id="direction滑动条值增加的方向"><a class="markdownIt-Anchor" href="#direction滑动条值增加的方向"></a> Direction：滑动条值增加的方向</h2><p>Left To Right：从左到右</p><p>Right To Left：从右到左</p><p>Bottom To Top：从下到上</p><p>Top To Bottom：从上到下</p><h2 id="value当前滚动条的值范围0~1"><a class="markdownIt-Anchor" href="#value当前滚动条的值范围0~1"></a> Value：当前滚动条的值，范围（0~1）。</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/ScrollBar%E5%8F%82%E6%95%B0%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="size滚动块在条中的比例大小0~1"><a class="markdownIt-Anchor" href="#size滚动块在条中的比例大小0~1"></a> Size：滚动块在条中的比例大小（0~1）</h2><h2 id="number-of-steps允许可以滚动多少次不同滚动位置的数量"><a class="markdownIt-Anchor" href="#number-of-steps允许可以滚动多少次不同滚动位置的数量"></a> Number Of Steps：允许可以滚动多少次（不同滚动位置的数量）</h2><h2 id="onvaluechanged滚动条值改变时执行的函数列表"><a class="markdownIt-Anchor" href="#onvaluechanged滚动条值改变时执行的函数列表"></a> OnValueChanged：滚动条值改变时执行的函数列表</h2><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Scrollbar scrollbar = <span class="keyword">this</span>.GetComponent&lt;Scrollbar&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// scrollbar 的大小</span></span><br><span class="line">print(scrollbar.size);</span><br><span class="line"></span><br><span class="line"><span class="comment">// scrollbar 的当前值</span></span><br><span class="line">print(scrollbar.<span class="keyword">value</span>);</span><br></pre></td></tr></table></figure><h1 id="监听事件的两种方式"><a class="markdownIt-Anchor" href="#监听事件的两种方式"></a> 监听事件的两种方式</h1><p>一、拖脚本<br /><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/15.ScrollBar%E6%BB%9A%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250402145129479.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ScrollBarValueChange</span>(<span class="params"><span class="built_in">float</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;ScrollBarValueChange: &quot;</span> + <span class="keyword">value</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>二、代码监听</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollBarExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Scrollbar scrollbar;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置初始值</span></span><br><span class="line">        scrollbar.<span class="keyword">value</span> = <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听值变化</span></span><br><span class="line">        scrollbar.onValueChanged.AddListener(OnScrollBarValueChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnScrollBarValueChanged</span>(<span class="params"><span class="built_in">float</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;ScrollBar Value: &quot;</span> + <span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;scrollbar是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#scrollbar是什么&quot;&gt;&lt;/a&gt; Scrollbar是什么&lt;/h1&gt;
&lt;p&gt;Scrollbar是滚动条组件，是UGUI中用于处理滚动条相关交互的关键组件。&lt;br</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>14.Slider滑动条控件</title>
    <link href="http://example.com/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-01T08:25:40.000Z</published>
    <updated>2025-04-01T09:22:34.106Z</updated>
    
    <content type="html"><![CDATA[<h1 id="slider是什么"><a class="markdownIt-Anchor" href="#slider是什么"></a> Slider是什么</h1><p>Slider是滑动条组件，是UGUI中用于处理滑动条相关交互的关键组件。</p><p>Slider 由以下几个部分组成：<br /><strong>Background 背景图</strong>：滑块的背景，表示整个范围。<br /><strong>Fill 进度图</strong>：填充区域，表示当前值所占的比例。<br /><strong>Handle 滑动块</strong>：滑块的手柄，用户可以拖动它来改变值。</p><p>在 Unity 的 Hierarchy 窗口中右键选择 UI &gt; Slider，即可创建一个默认的 Slider。<br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250401162738361.png" alt="" /></p><h1 id="slider参数"><a class="markdownIt-Anchor" href="#slider参数"></a> Slider参数</h1><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/Slider%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250401163207045.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><h2 id="transition响应用户输入的过渡效果"><a class="markdownIt-Anchor" href="#transition响应用户输入的过渡效果"></a> Transition：响应用户输入的过渡效果</h2><h2 id="navigation导航模式"><a class="markdownIt-Anchor" href="#navigation导航模式"></a> Navigation：导航模式</h2><p>可以设置UI元素如何在播放模式中控制器导航</p><h2 id="fillrect用于填充的进度条图形"><a class="markdownIt-Anchor" href="#fillrect用于填充的进度条图形"></a> FillRect：用于填充的进度条图形</h2><h2 id="handle-rect用于滑动的滑动块图形"><a class="markdownIt-Anchor" href="#handle-rect用于滑动的滑动块图形"></a> Handle Rect：用于滑动的滑动块图形</h2><h2 id="direction滑动条值增加的方向"><a class="markdownIt-Anchor" href="#direction滑动条值增加的方向"></a> Direction：滑动条值增加的方向</h2><p>Left To Right：从左到右</p><p>Right To Left：从右到左</p><p>Bottom To Top：从下到上</p><p>Top To Bottom：从上到下</p><h2 id="min-value-和-max-value滑动条最小值和最大值"><a class="markdownIt-Anchor" href="#min-value-和-max-value滑动条最小值和最大值"></a> Min Value 和 Max Value：滑动条最小值和最大值</h2><p>滑动滚动条时值从最小到最大之间变化（左右、上下极值）</p><h2 id="whole-numbers是否约束为整数值变化"><a class="markdownIt-Anchor" href="#whole-numbers是否约束为整数值变化"></a> Whole Numbers：是否约束为整数值变化</h2><h2 id="value当前滑动条代表的数值"><a class="markdownIt-Anchor" href="#value当前滑动条代表的数值"></a> Value：当前滑动条代表的数值</h2><h2 id="onvaluechanged滑动条值改变时执行的函数列表"><a class="markdownIt-Anchor" href="#onvaluechanged滑动条值改变时执行的函数列表"></a> OnValueChanged：滑动条值改变时执行的函数列表</h2><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Slider slider = <span class="keyword">this</span>.GetComponent&lt;Slider&gt;();</span><br><span class="line"><span class="comment">// 打印出 slider 的当前值</span></span><br><span class="line">print(slider.<span class="keyword">value</span>);</span><br></pre></td></tr></table></figure><h1 id="监听事件的两种方式"><a class="markdownIt-Anchor" href="#监听事件的两种方式"></a> 监听事件的两种方式</h1><p>一、拖脚本<br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250401165512596.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeValue</span>(<span class="params"><span class="built_in">float</span> v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    print(v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假如选择静态会值改变时会只打印右边输入框的值。<br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250401165627010.png" alt="" /></p><p>二、代码添加监听事件</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SliderExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Slider volumeSlider;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 设置滑块的初始值</span></span><br><span class="line">        volumeSlider.<span class="keyword">value</span> = <span class="number">0.5f</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听滑块值的变化</span></span><br><span class="line">        volumeSlider.onValueChanged.AddListener(OnSliderValueChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnSliderValueChanged</span>(<span class="params"><span class="built_in">float</span> <span class="keyword">value</span></span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 根据滑块的值调整音量</span></span><br><span class="line">        AudioListener.volume = <span class="keyword">value</span>;</span><br><span class="line">        Debug.Log(<span class="string">&quot;当前音量: &quot;</span> + <span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在上节课InputField的练习题基础上，请用现在所学知识，制作一个这样的功能：场景上有一个滑动条，可以通过它控制音效的音量大小</p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/14.Slider%E6%BB%91%E5%8A%A8%E6%9D%A1%E6%8E%A7%E4%BB%B6/file-20250401172232073.png" alt="" /><br />PlayerObj.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> AudioClip audioClip;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (MusicData.SoundIsOpen)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 播放音效</span></span><br><span class="line">            AudioSource audioSource = <span class="keyword">this</span>.gameObject.AddComponent&lt;AudioSource&gt;();</span><br><span class="line">            audioSource.clip = audioClip;</span><br><span class="line">            audioSource.volume = MusicData.SoundVolume;</span><br><span class="line">            audioSource.Play();</span><br><span class="line">            Destroy(audioSource, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 音效拖动条</span></span><br><span class="line">    <span class="keyword">public</span> Slider sliderSound;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 音效大小</span></span><br><span class="line">        sliderSound.<span class="keyword">value</span> = MusicData.SoundVolume;</span><br><span class="line">        sliderSound.onValueChanged.AddListener((<span class="built_in">float</span> v) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            MusicData.SoundVolume = v;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MusicData.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MusicData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> SoundIsOpen = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">float</span> SoundVolume = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;slider是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#slider是什么&quot;&gt;&lt;/a&gt; Slider是什么&lt;/h1&gt;
&lt;p&gt;Slider是滑动条组件，是UGUI中用于处理滑动条相关交互的关键组件。&lt;/p&gt;
&lt;p&gt;Slider </summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>13.InputField文本输入控件</title>
    <link href="http://example.com/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-01T06:19:16.000Z</published>
    <updated>2025-04-01T08:22:49.922Z</updated>
    
    <content type="html"><![CDATA[<h1 id="inputfield是什么"><a class="markdownIt-Anchor" href="#inputfield是什么"></a> InputField是什么</h1><p>InputField是输入字段组件，是UGUI中用于处理玩家文本输入相关交互的关键组件。</p><p>在 Unity 的 Hierarchy 面板中，右键点击 -&gt; UI -&gt; InputField，创建一个 <code>InputField</code>。</p><p>默认情况下，创建的InputField由3个对象组成，同时在其上挂载了一个Image作为背景图，<code>InputField</code> 会附带一个 <code>Text</code> 组件（用于显示用户输入的文本）和一个 <code>Placeholder</code> 组件（用于显示提示文本）。<br />默认创建的InputField由3个对象组成</p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401143851652.png" alt="" /></p><h1 id="inputfield-参数"><a class="markdownIt-Anchor" href="#inputfield-参数"></a> InputField 参数</h1><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/InputField%20%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401144929514.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><h2 id="transition输入的过渡效果"><a class="markdownIt-Anchor" href="#transition输入的过渡效果"></a> Transition：输入的过渡效果</h2><p>响应用户输入的过渡效果</p><h2 id="navigation导航模式"><a class="markdownIt-Anchor" href="#navigation导航模式"></a> Navigation：导航模式</h2><p>可以设置UI元素如何在播放模式中控制器导航</p><h2 id="textcomponent关联显示输入内容的文本组件"><a class="markdownIt-Anchor" href="#textcomponent关联显示输入内容的文本组件"></a> TextComponent：关联显示输入内容的文本组件</h2><h2 id="text用户输入的文本内容"><a class="markdownIt-Anchor" href="#text用户输入的文本内容"></a> Text：用户输入的文本内容</h2><h2 id="character-limit输入字符长度的最大值"><a class="markdownIt-Anchor" href="#character-limit输入字符长度的最大值"></a> Character Limit：输入字符长度的最大值</h2><p>输入字符的最大长度。设置为 0 表示无限制。</p><h2 id="content-type输入的字符类型限制"><a class="markdownIt-Anchor" href="#content-type输入的字符类型限制"></a> Content Type：输入的字符类型限制</h2><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401145248611.png" alt="" /><br />Standard：标准模式；可以输入任何字符</p><p>Autocorrected：自动更正模式；跟踪未知单词，向用户建议合适的替换候选词</p><p>Integer Number：整数模式；用户只能输入整数</p><p>Decimal Number：十进制数模式；用于只能输入数字包括小数</p><p>Alphanumeric：字母数字模式；只能输入字母和数字</p><p>Name：名字模式；自动将每个单子首字母大写</p><p>Email Address：邮箱地址模式；允许最多输入一个@符号组成的字符和数字字符串</p><p>Password：密码模式；用星号隐藏输入的字符，允许使用符号</p><p>Pin：别针模式；用星号隐藏输入的字符，只允许输入整数</p><p>Custom：自定义模式；允许自定义行类型，输入类型，键盘类型和字符验证</p><h2 id="line-type行类型定义文本格式"><a class="markdownIt-Anchor" href="#line-type行类型定义文本格式"></a> Line Type：行类型，定义文本格式</h2><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401145400749.png" alt="" /><br />Single Line：只允许单行显示<br />Multi Line Submit：允许使用多行。仅在需要时使用新的一行<br />Multi Line NewLine：允许使用多行。用户可以按回车键空行</p><h2 id="placeholder提示文本"><a class="markdownIt-Anchor" href="#placeholder提示文本"></a> Placeholder：提示文本</h2><p>关联用于显示初始内容文本控件<br />提示文本（例如“请输入用户名”），当输入框为空时显示。</p><h2 id="caret-blink-rate光标闪烁速率"><a class="markdownIt-Anchor" href="#caret-blink-rate光标闪烁速率"></a> Caret Blink Rate*：光标闪烁速率</h2><h2 id="caret-width光标宽"><a class="markdownIt-Anchor" href="#caret-width光标宽"></a> Caret Width*：光标宽</h2><h2 id="custom-caret-color自定义光标颜色"><a class="markdownIt-Anchor" href="#custom-caret-color自定义光标颜色"></a> Custom Caret Color*：自定义光标颜色</h2><h2 id="selection-color批量选中的背景颜色"><a class="markdownIt-Anchor" href="#selection-color批量选中的背景颜色"></a> Selection Color*：批量选中的背景颜色</h2><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401145803561.png" alt="" /><br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401145812430.png" alt="" /></p><h2 id="hide-mobile-input隐藏移动设备屏幕上键盘"><a class="markdownIt-Anchor" href="#hide-mobile-input隐藏移动设备屏幕上键盘"></a> Hide Mobile Input*：隐藏移动设备屏幕上键盘</h2><p>隐藏移动设备屏幕上键盘，仅适用于IOS</p><h2 id="read-only只读"><a class="markdownIt-Anchor" href="#read-only只读"></a> Read Only*：只读</h2><h2 id="onvaluechanged内容改变时执行的函数列表"><a class="markdownIt-Anchor" href="#onvaluechanged内容改变时执行的函数列表"></a> OnValueChanged：内容改变时执行的函数列表</h2><h2 id="onendedit结束输入时执行的函数列表"><a class="markdownIt-Anchor" href="#onendedit结束输入时执行的函数列表"></a> OnEndEdit：结束输入时执行的函数列表</h2><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> InputField usernameInputField; <span class="comment">// 引用InputField组件 </span></span><br><span class="line"><span class="keyword">public</span> Text feedbackText; <span class="comment">// 用于显示反馈的Text组件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 限制字符长度</span></span><br><span class="line">usernameInputField.characterLimit = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户输入的文本</span></span><br><span class="line"><span class="built_in">string</span> username = usernameInputField.text;</span><br><span class="line">usernameInputField.text = <span class="string">&quot;默认用户名&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空输入框的内容</span></span><br><span class="line">usernameInputField.text = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 Placeholder 属性设置提示文本</span></span><br><span class="line">usernameInputField.placeholder.GetComponent&lt;Text&gt;().text = <span class="string">&quot;请输入用户名&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="常见问题与解决方案"><a class="markdownIt-Anchor" href="#常见问题与解决方案"></a> <strong>常见问题与解决方案</strong></h2><p><strong>如何禁止用户输入空格？</strong><br />可以通过监听 onValueChanged 事件，移除输入的空格</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">usernameInputField.onValueChanged.AddListener((text) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    usernameInputField.text = text.Replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>如何自动聚焦到输入框？</strong><br />调用 ActivateInputField 方法</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">usernameInputField.ActivateInputField();</span><br></pre></td></tr></table></figure><h1 id="事件监听的两种方式"><a class="markdownIt-Anchor" href="#事件监听的两种方式"></a> 事件监听的两种方式</h1><p><strong>一、拖脚本监听事件</strong><br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401151602459.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputFieldTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnInputFieldEndEdit</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnInputFieldEndEdit: &quot;</span> + text);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnInputFieldValueChanged</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnInputFieldValueChanged: &quot;</span> + text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnInputFieldSubmit</span>(<span class="params"><span class="built_in">string</span> text</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnInputFieldSubmit: &quot;</span> + text);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401152142228.png" alt="" /></p><p><strong>二、代码监听</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">InputFieldExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> InputField usernameInputField; <span class="comment">// 引用InputField组件</span></span><br><span class="line">    <span class="keyword">public</span> Text feedbackText; <span class="comment">// 用于显示反馈的Text组件</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 监听输入框内容变化</span></span><br><span class="line">        usernameInputField.onValueChanged.AddListener(OnUsernameChanged);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 监听输入框结束编辑</span></span><br><span class="line">        usernameInputField.onEndEdit.AddListener(OnUsernameSubmitted);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当输入框内容变化时调用</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnUsernameChanged</span>(<span class="params"><span class="built_in">string</span> newText</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;输入内容变化: &quot;</span> + newText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当用户结束编辑时调用</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnUsernameSubmitted</span>(<span class="params"><span class="built_in">string</span> finalText</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">string</span>.IsNullOrEmpty(finalText))</span><br><span class="line">        &#123;</span><br><span class="line">            feedbackText.text = <span class="string">&quot;用户名不能为空！&quot;</span>;</span><br><span class="line">            feedbackText.color = Color.red;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            feedbackText.text = <span class="string">&quot;欢迎, &quot;</span> + finalText + <span class="string">&quot;!&quot;</span>;</span><br><span class="line">            feedbackText.color = Color.green;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在上节课Toggle的练习题基础上，请用现在所学知识，制作一个这样的功能：<br />场景左上角会显示玩家的姓名，右侧有一个改名按钮，点击改名按钮后会弹出一个改名窗口，在窗口上可以输入你的新名字，点击确定键后，原左上角的名字将改变<br /><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401162152487.png" alt="" /></p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401162222288.png" alt="" /></p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401162205751.png" alt="" /></p><p><img src="/2025/04/01/UI%E7%B3%BB%E7%BB%9F/UGUI/13.InputField%E6%96%87%E6%9C%AC%E8%BE%93%E5%85%A5%E6%8E%A7%E4%BB%B6/file-20250401162247881.png" alt="" /></p><p>ChangeNamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ChangeNamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> InputField inputName;</span><br><span class="line">    <span class="keyword">public</span> Button btnSure;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ChangeNamePanel instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">this</span>.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            GamePanel.instance.txtName.text = inputName.text;</span><br><span class="line">            <span class="keyword">this</span>.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> GamePanel instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 名字</span></span><br><span class="line">    <span class="keyword">public</span> Text txtName;</span><br><span class="line">    <span class="keyword">public</span> Button btnChangeName;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 改名</span></span><br><span class="line">        btnChangeName.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            ChangeNamePanel.instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;inputfield是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#inputfield是什么&quot;&gt;&lt;/a&gt; InputField是什么&lt;/h1&gt;
&lt;p&gt;InputField是输入字段组件，是UGUI中用于处理玩家文本输入相关交互的</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>12.Toggle开关控件</title>
    <link href="http://example.com/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-03-31T02:34:13.000Z</published>
    <updated>2025-03-31T07:55:54.487Z</updated>
    
    <content type="html"><![CDATA[<h1 id="toggle是什么"><a class="markdownIt-Anchor" href="#toggle是什么"></a> Toggle是什么</h1><p>Toggle是开关组件，是UGUI中用于处理玩家单选框多选框相关交互的关键组件。</p><p>默认创建的Toggle由4个对象组成：<br />父对象——Toggle组件依附。<br />子对象——背景图（必备）、选中图（必备）、说明文字（可选）。<br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331103639973.png" alt="" /><br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331104657173.png" alt="" /></p><h1 id="toggle参数"><a class="markdownIt-Anchor" href="#toggle参数"></a> Toggle参数</h1><p><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/Toggle%20%E5%8D%95%E9%80%89%E5%A4%9A%E9%80%89%E6%A1%86%E6%8E%A7%E4%BB%B6.png" alt="" /></p><p><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331104723887.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><a href="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/#interactable%E6%98%AF%E5%90%A6%E6%8E%A5%E5%8F%97%E8%BE%93%E5%85%A5" title="11.Button按钮控件">11.Button按钮控件</a><h2 id="transition响应用户输入的过渡效果"><a class="markdownIt-Anchor" href="#transition响应用户输入的过渡效果"></a> Transition：响应用户输入的过渡效果</h2><a href="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/#transition%E5%93%8D%E5%BA%94%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5%E7%9A%84%E8%BF%87%E6%B8%A1%E6%95%88%E6%9E%9C" title="11.Button按钮控件">11.Button按钮控件</a><p><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331105358825.png" alt="" /></p><h2 id="navigation"><a class="markdownIt-Anchor" href="#navigation"></a> Navigation：</h2><p>导航模式，可以设置UI元素如何在播放模式中控制器导航</p><a href="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/#navigation%E5%AF%BC%E8%88%AA%E6%A8%A1%E5%BC%8F" title="11.Button按钮控件">11.Button按钮控件</a><h2 id="ison当前是否处于打开状态"><a class="markdownIt-Anchor" href="#ison当前是否处于打开状态"></a> IsOn：当前是否处于打开状态</h2><h2 id="toggle-transition在开关值变化时的过渡方式"><a class="markdownIt-Anchor" href="#toggle-transition在开关值变化时的过渡方式"></a> Toggle Transition：在开关值变化时的过渡方式</h2><p><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331105407254.png" alt="" /><br />None：无任何过渡，直接显示隐藏 Fade：淡入淡出</p><h2 id="graphic用于表示选中状态的图片"><a class="markdownIt-Anchor" href="#graphic用于表示选中状态的图片"></a> Graphic：用于表示选中状态的图片</h2><h2 id="group单选框分组"><a class="markdownIt-Anchor" href="#group单选框分组"></a> Group：单选框分组</h2><h3 id="eg-创建一个单选框分组"><a class="markdownIt-Anchor" href="#eg-创建一个单选框分组"></a> eg: 创建一个单选框分组</h3><p>创建一个空对象，添加Toggle Group脚本，将想做成单选框组的Toggle作为其子对象<br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331110056550.png" alt="" /></p><p>然后将想做成单选框组的Toggle中的Group关联一下添加Toggle Group脚本<br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331110239027.png" alt="" /></p><h3 id="allow-switch-off是否允许不选中任何一个单选框"><a class="markdownIt-Anchor" href="#allow-switch-off是否允许不选中任何一个单选框"></a> Allow Switch Off：是否允许不选中任何一个单选框</h3><p>注意：单选框分组组件可以挂载在任何对象上，只需要将其和一组的单选框关联即可</p><p><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/Toggle%20Group%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="onvaluechanged"><a class="markdownIt-Anchor" href="#onvaluechanged"></a> OnValueChanged：</h2><p>开关状态变化时执行的函数列表</p><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Toggle toggle = <span class="keyword">this</span>.GetComponent&lt;Toggle&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置 toggle 的状态</span></span><br><span class="line">toggle.isOn = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ToggleGroup toggleGroup = <span class="keyword">this</span>.GetComponent&lt;ToggleGroup&gt;();</span><br><span class="line">toggleGroup.allowSwitchOff = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ToggleGroup 中目前处于选中状态的 Toggle</span></span><br><span class="line"><span class="keyword">foreach</span> (Toggle item <span class="keyword">in</span> toggleGroup.ActiveToggles())</span><br><span class="line">&#123;</span><br><span class="line">    print(item.name + <span class="string">&quot; &quot;</span> + item.isOn);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="toggle监听事件的两种方式"><a class="markdownIt-Anchor" href="#toggle监听事件的两种方式"></a> Toggle监听事件的两种方式</h1><p>一、拖脚本添加事件监听<br />这里的函数需要一个bool参数<br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331111640814.png" alt="" /></p><p>二、代码监听</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ChangeValue</span>(<span class="params"><span class="built_in">bool</span> v</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;代码监听 &quot;</span> + v);</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">toggle.onValueChanged.AddListener(ChangeValue);</span><br><span class="line"></span><br><span class="line">toggle.onValueChanged.AddListener((b) =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;lambda表达式 &quot;</span> + b);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在上节课的Button练习题基础上，请用现在所学知识，制作一个这样的功能：场景上对象发射子弹有音效，通过用UGUI的Toggle开关 控制音效开关<br /><img src="/2025/03/31/UI%E7%B3%BB%E7%BB%9F/UGUI/12.Toggle%E5%BC%80%E5%85%B3%E6%8E%A7%E4%BB%B6/file-20250331155121434.png" alt="" /></p><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnAtk;</span><br><span class="line">    <span class="keyword">public</span> PlayerObj player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Toggle toggleOn;</span><br><span class="line">    <span class="keyword">public</span> Toggle toggleOff;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnAtk.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            player.Fire();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        UpdateSoundState();</span><br><span class="line">        toggleOn.onValueChanged.AddListener(OnToggleSoundOnChanged);</span><br><span class="line">        toggleOff.onValueChanged.AddListener(OnToggleSoundOffChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnToggleSoundOnChanged</span>(<span class="params"><span class="built_in">bool</span> isOn</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOn)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 开启音效</span></span><br><span class="line">            AudioListener.volume = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnToggleSoundOffChanged</span>(<span class="params"><span class="built_in">bool</span> isOn</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isOn)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 关闭音效</span></span><br><span class="line">            AudioListener.volume = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">UpdateSoundState</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (toggleOn.isOn)</span><br><span class="line">        &#123;</span><br><span class="line">            AudioListener.volume = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (toggleOff.isOn)</span><br><span class="line">        &#123;</span><br><span class="line">            AudioListener.volume = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PlayerObj.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> AudioClip audioClip;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 播放音效</span></span><br><span class="line">        AudioSource audioSource = <span class="keyword">this</span>.gameObject.AddComponent&lt;AudioSource&gt;();</span><br><span class="line">        audioSource.clip = audioClip;</span><br><span class="line">        audioSource.Play();</span><br><span class="line">        Destroy(audioSource, <span class="number">1</span>);</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>另外一种写法如下</strong></p><p>新建一个MusicData.cs用来接受来自UI的数据<br />然后用接受来的数据来做操作</p><p>MusicData类负责管理音效的状态，GamePanel负责处理UI交互并将数据传递给MusicData。这种设计模式使得代码更清晰、更易于扩展和维护。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MusicData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> SoundIsOpen = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnAtk;</span><br><span class="line">    <span class="keyword">public</span> PlayerObj player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Toggle toggleOn;</span><br><span class="line">    <span class="keyword">public</span> Toggle toggleOff;</span><br><span class="line">    <span class="keyword">public</span> ToggleGroup tg;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnAtk.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            player.Fire();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        toggleOn.onValueChanged.AddListener(TogChangeValue);</span><br><span class="line">        toggleOff.onValueChanged.AddListener(TogChangeValue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">TogChangeValue</span>(<span class="params"><span class="built_in">bool</span> v</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">foreach</span> (Toggle item <span class="keyword">in</span> tg.ActiveToggles())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (item == toggleOn)</span><br><span class="line">            &#123;</span><br><span class="line">                MusicData.SoundIsOpen = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (item == toggleOff)</span><br><span class="line">            &#123;</span><br><span class="line">                MusicData.SoundIsOpen = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PlayerObj.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> AudioClip audioClip;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 然后用接受来的数据来做操作</span></span><br><span class="line">        <span class="keyword">if</span> (MusicData.SoundIsOpen)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 播放音效</span></span><br><span class="line">            AudioSource audioSource = <span class="keyword">this</span>.gameObject.AddComponent&lt;AudioSource&gt;();</span><br><span class="line">            audioSource.clip = audioClip;</span><br><span class="line">            audioSource.Play();</span><br><span class="line">            Destroy(audioSource, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;toggle是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#toggle是什么&quot;&gt;&lt;/a&gt; Toggle是什么&lt;/h1&gt;
&lt;p&gt;Toggle是开关组件，是UGUI中用于处理玩家单选框多选框相关交互的关键组件。&lt;/p&gt;
&lt;p&gt;默认创</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>11.Button按钮控件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-03-29T13:41:57.000Z</published>
    <updated>2025-03-29T14:59:25.068Z</updated>
    
    <content type="html"><![CDATA[<h1 id="button是什么"><a class="markdownIt-Anchor" href="#button是什么"></a> Button是什么</h1><p>Button是按钮组件，是UGUI中用于处理玩家按钮相关交互的关键组件。</p><p>默认创建的Button由2个对象组成：<br />父对象——Button组件依附对象，同时挂载了一个Image组件，作为按钮背景图。<br />子对象——按钮文本（可选）。</p><h1 id="button-按钮参数"><a class="markdownIt-Anchor" href="#button-按钮参数"></a> Button 按钮参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/Button%20%E6%8C%89%E9%92%AE%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329214724324.png" alt="" /></p><h2 id="interactable是否接受输入"><a class="markdownIt-Anchor" href="#interactable是否接受输入"></a> Interactable：是否接受输入</h2><p>按钮是否能被我们点击和响应</p><h2 id="transition响应用户输入的过渡效果"><a class="markdownIt-Anchor" href="#transition响应用户输入的过渡效果"></a> Transition：响应用户输入的过渡效果</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221039265.png" alt="" /></p><h3 id="none没有状态变化效果"><a class="markdownIt-Anchor" href="#none没有状态变化效果"></a> None*：没有状态变化效果</h3><h3 id="colortint用颜色表示不同状态的变化"><a class="markdownIt-Anchor" href="#colortint用颜色表示不同状态的变化"></a> ColorTint：用颜色表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221103875.png" alt="" /><br />TargetGraphic：控制的目标图形<br />Normal Color：正常状态颜色<br />Highlighted Color：鼠标进入时显示高亮颜色<br />Pressed Color：按下颜色<br />Selected Color：选中的颜色<br />Disabled Color：禁用时的颜色 （就是上面 Interactable为false时的颜色）<br />Color Multiplier：颜色倍增器，过渡颜色乘以该值<br />FadeDuration：衰减持续时间，从一个状态进入另一个状态时需要的时间</p><h3 id="sprite-swap用图片表示不同状态的变化"><a class="markdownIt-Anchor" href="#sprite-swap用图片表示不同状态的变化"></a> Sprite Swap：用图片表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221109387.png" alt="" /><br />Highlighted Sprite：鼠标进入时图片<br />Pressed Sprite：按下时图片<br />Selected Color：选中时的颜色<br />Disabled Sprite：禁用时显示的图片</p><h3 id="animation用动画表示不同状态的变化"><a class="markdownIt-Anchor" href="#animation用动画表示不同状态的变化"></a> Animation：用动画表示不同状态的变化</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221114093.png" alt="" /><br />Normal Trigger：正常动画触发器<br />Highlighted Trigger：鼠标进入状态时触发器<br />Pressed Trigger：按下时触发器<br />Selected Trigger：选中时触发器<br />Disabled Trigger：禁用时触发器</p><p>可以自动生成动画状态控制器<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329220133453.png" alt="" /></p><h2 id="navigation导航模式"><a class="markdownIt-Anchor" href="#navigation导航模式"></a> Navigation：导航模式</h2><a href="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/#Send-Navigation-Events%EF%BC%9A%E6%98%AF%E5%90%A6%E5%85%81%E8%AE%B8%E5%AF%BC%E8%88%AA%E4%BA%8B%E4%BB%B6" title="6.EventSystem和StandaloneInputModule组件">EventSystem</a><p>可以设置UI元素如何在播放模式中控制导航<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/%E5%AF%BC%E8%88%AA%E6%A8%A1%E5%BC%8F%E5%8A%A8%E7%94%BB.gif" alt="" /><br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221133396.png" alt="" /><br />None：无键盘导航<br />Horizontal：水平导航<br />Verticval：垂直导航<br />Automatic：自动导航<br />Explicit：指定周边控件进行导航</p><h3 id="可以在场景窗口看到导航连线"><a class="markdownIt-Anchor" href="#可以在场景窗口看到导航连线"></a> 可以在场景窗口看到导航连线</h3><h2 id="onclick单击按下再抬起执行的函数列表"><a class="markdownIt-Anchor" href="#onclick单击按下再抬起执行的函数列表"></a> OnClick：单击（按下再抬起）执行的函数列表</h2><h1 id="代码相关"><a class="markdownIt-Anchor" href="#代码相关"></a> 代码相关</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Button button = <span class="keyword">this</span>.GetComponent&lt;Button&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可交互</span></span><br><span class="line">button.interactable = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置过渡效果</span></span><br><span class="line">button.transition = Selectable.Transition.None;</span><br><span class="line"></span><br><span class="line">Image image = <span class="keyword">this</span>.GetComponent&lt;Image&gt;();</span><br></pre></td></tr></table></figure><h1 id="监听点击事件的两种方式"><a class="markdownIt-Anchor" href="#监听点击事件的两种方式"></a> 监听点击事件的两种方式</h1><p>一、拖脚本<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329221841271.png" alt="" /></p><p>二、代码添加</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Button button = GetComponent&lt;Button&gt;(); </span><br><span class="line">button.onClick.AddListener(() =&gt;</span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;按钮被点击了&quot;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// 移除指定的监听</span></span><br><span class="line">button.onClick.RemoveListener(MyOnclick);</span><br><span class="line"><span class="comment">// 移除所有的监听</span></span><br><span class="line">button.onClick.RemoveAllListeners();</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>场景上有一个对象，点击UGUI的发射按钮，可以让对象发射一颗子弹</p><p>先设置<a href="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/#eg" title="3.Canvas画布组件">相机和Canvas</a><br />创建玩家，子弹预设体，拼好面板<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329225601579.png" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/11.Button%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6/file-20250329225718790.png" alt="" /></p><p>各自关联的脚本<br />PlayerObj.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Fire();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Bullet.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Bullet</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> speed = <span class="number">10</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Destroy(<span class="keyword">this</span>.gameObject, <span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.transform.Translate(Vector3.forward * speed * Time.deltaTime); </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>GamePanel.cs</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnAtk;</span><br><span class="line">    <span class="keyword">public</span> PlayerObj player;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnAtk.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            player.Fire();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;button是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#button是什么&quot;&gt;&lt;/a&gt; Button是什么&lt;/h1&gt;
&lt;p&gt;Button是按钮组件，是UGUI中用于处理玩家按钮相关交互的关键组件。&lt;/p&gt;
&lt;p&gt;默认创建的Bu</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>10.RawImage原始图像</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/</id>
    <published>2025-03-29T13:36:23.000Z</published>
    <updated>2025-03-29T13:41:29.205Z</updated>
    
    <content type="html"><![CDATA[<h1 id="rawimage是什么"><a class="markdownIt-Anchor" href="#rawimage是什么"></a> RawImage是什么</h1><p>RawImage是原始图像组件，是UGUI中用于显示任何纹理图片的关键组件。<br />它和Image的区别是 一般RawImage用于显示大图(<strong>背景图，不需要打入图集的图片，网络下载的图</strong>等等)</p><h1 id="rawimage原始图像组件参数"><a class="markdownIt-Anchor" href="#rawimage原始图像组件参数"></a> RawImage原始图像组件参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/file-20250329213836093.png" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/10.RawImage%E5%8E%9F%E5%A7%8B%E5%9B%BE%E5%83%8F/file-20250329213853286.png" alt="" /></p><p>注意这里的纹理可以填任何类型的图<br />无关Sprite UI什么的</p><p>UV Rect UV矩形<br />图像在UI矩形内的偏移和大小<br />一般不会改变</p><h1 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">RawImage rawImage = <span class="keyword">this</span>.GetComponent&lt;RawImage&gt;();</span><br><span class="line"></span><br><span class="line">rawImage.texture = Resources.Load&lt;Texture&gt;(<span class="string">&quot;ui_TY_lvseshuzi_08&quot;</span>);</span><br><span class="line"></span><br><span class="line">rawImage.uvRect = <span class="keyword">new</span> Rect(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;rawimage是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#rawimage是什么&quot;&gt;&lt;/a&gt; RawImage是什么&lt;/h1&gt;
&lt;p&gt;RawImage是原始图像组件，是UGUI中用于显示任何纹理图片的关键组件。&lt;br /&gt;
</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>9.Text文本控件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-03-29T13:14:38.000Z</published>
    <updated>2025-03-29T13:35:59.229Z</updated>
    
    <content type="html"><![CDATA[<h1 id="text是什么"><a class="markdownIt-Anchor" href="#text是什么"></a> Text是什么</h1><p>Text是文本组件，是UGUI中用于显示文本的关键组件。</p><h1 id="text文本组件参数"><a class="markdownIt-Anchor" href="#text文本组件参数"></a> Text文本组件参数</h1><p><strong>注意：Text很有可能挡住射线，可以把射线检测取消勾选</strong><br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/Text%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329212127366.png" alt="" /></p><h2 id="text文本显示内容"><a class="markdownIt-Anchor" href="#text文本显示内容"></a> Text：文本显示内容</h2><h2 id="font字体"><a class="markdownIt-Anchor" href="#font字体"></a> Font：字体</h2><h2 id="fontstyle字体样式"><a class="markdownIt-Anchor" href="#fontstyle字体样式"></a> FontStyle：字体样式</h2><p>Normal：普通<br />Bold：加粗<br />Italic：斜体<br />Bold And Italic：加粗 + 斜体</p><h2 id="font-size字体大小"><a class="markdownIt-Anchor" href="#font-size字体大小"></a> Font Size：字体大小</h2><h2 id="line-spacing行之间的垂直间距"><a class="markdownIt-Anchor" href="#line-spacing行之间的垂直间距"></a> Line Spacing：行之间的垂直间距</h2><h2 id="rich-text是否开启富文本"><a class="markdownIt-Anchor" href="#rich-text是否开启富文本"></a> Rich Text：是否开启富文本</h2><p>要开启富文本选项才能起作用。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">加粗: &lt;b&gt;文本内容&lt;/b&gt;</span><br><span class="line">斜体: &lt;i&gt;文本内容&lt;/i&gt;</span><br><span class="line">大小: &lt;size=50&gt;文本内容&lt;/size&gt;</span><br><span class="line">颜色:</span><br><span class="line">&lt;color=#ff0000ff&gt;文本内容&lt;/color&gt;</span><br><span class="line">&lt;color=red&gt;文本内容&lt;/color&gt;</span><br></pre></td></tr></table></figure><h2 id="alignment对其方式"><a class="markdownIt-Anchor" href="#alignment对其方式"></a> Alignment：对其方式</h2><h2 id="align-by-geometry几何对齐"><a class="markdownIt-Anchor" href="#align-by-geometry几何对齐"></a> Align By Geometry*：几何对齐</h2><p>使用字形集合形状范围进行水平对其，而不是字形指标</p><h2 id="horizontal-overflow水平溢出"><a class="markdownIt-Anchor" href="#horizontal-overflow水平溢出"></a> Horizontal Overflow：水平溢出</h2><p>处理文本太宽无法放入矩形范围内时的处理方式</p><p>Wrap：包裹模式-字体始终在矩形范围内，会自动换行<br />Overflow：溢出模式-字体可以溢出矩形框</p><h2 id="vertical-overflow垂直溢出"><a class="markdownIt-Anchor" href="#vertical-overflow垂直溢出"></a> Vertical Overflow：垂直溢出</h2><p>处理文本太高无法放入矩形范围内时的处理方式</p><p>Truncate：截断模式-字体始终在矩形范围内，超出部分裁剪<br />Overflow：溢出模式-字体可以溢出矩形框</p><h2 id="best-fit最佳适应"><a class="markdownIt-Anchor" href="#best-fit最佳适应"></a> Best Fit：最佳适应</h2><p>忽略字体大小，始终把内容完全显示在矩形框中，会自动调整字体大小</p><p>MinSize：最小多小<br />MaxSize：最大多大</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/%E6%9C%80%E4%BD%B3%E9%80%82%E5%BA%94%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h1 id="边缘线和阴影"><a class="markdownIt-Anchor" href="#边缘线和阴影"></a> 边缘线和阴影</h1><h2 id="outline边缘线组件"><a class="markdownIt-Anchor" href="#outline边缘线组件"></a> Outline边缘线组件</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329213441851.png" alt="" /></p><h2 id="shadow阴影组件"><a class="markdownIt-Anchor" href="#shadow阴影组件"></a> Shadow阴影组件</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/9.Text%E6%96%87%E6%9C%AC%E6%8E%A7%E4%BB%B6/file-20250329213448324.png" alt="" /></p><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Text text = <span class="keyword">this</span>.GetComponent&lt;Text&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置文本显示内容</span></span><br><span class="line">text.text = <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;text是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#text是什么&quot;&gt;&lt;/a&gt; Text是什么&lt;/h1&gt;
&lt;p&gt;Text是文本组件，是UGUI中用于显示文本的关键组件。&lt;/p&gt;
&lt;h1 id=&quot;text文本组件参数&quot;&gt;&lt;a c</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>8.Image图片</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/</id>
    <published>2025-03-29T07:51:56.000Z</published>
    <updated>2025-03-29T13:12:34.677Z</updated>
    
    <content type="html"><![CDATA[<h1 id="image图片控件是什么"><a class="markdownIt-Anchor" href="#image图片控件是什么"></a> Image图片控件是什么</h1><p>Image是图像组件，是UGUI中用于显示精灵图片的关键组件。<br />除了背景图等大图，一般都使用Image来显示UI中的图片元素。</p><h1 id="image参数"><a class="markdownIt-Anchor" href="#image参数"></a> Image参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/Image%20%E5%9B%BE%E7%89%87%E5%8F%82%E6%95%B0.png" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329201941776.png" alt="" /></p><h2 id="source-image图片来源图片类型必须是精灵类型"><a class="markdownIt-Anchor" href="#source-image图片来源图片类型必须是精灵类型"></a> Source Image：图片来源（图片类型必须是”精灵“类型）</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329201414831.png" alt="" /></p><h2 id="color图像的颜色"><a class="markdownIt-Anchor" href="#color图像的颜色"></a> Color：图像的颜色</h2><h2 id="material图像的材质一般不修改会使用ui的默认材质"><a class="markdownIt-Anchor" href="#material图像的材质一般不修改会使用ui的默认材质"></a> Material：图像的材质（一般不修改，会使用UI的默认材质）</h2><h2 id="raycast-target是否作为射线检测的目标"><a class="markdownIt-Anchor" href="#raycast-target是否作为射线检测的目标"></a> Raycast Target：是否作为射线检测的目标</h2><p>如果不勾选将不会响应射线检测</p><p>这里嘴一句：UGUI可以通过更改Canvas下面的顺序来调整渲染顺序的</p><h2 id="maskable是否能被遮罩"><a class="markdownIt-Anchor" href="#maskable是否能被遮罩"></a> Maskable：是否能被遮罩</h2><p>之后结合遮罩相关知识点进行讲解</p><h2 id="image-type图片类型"><a class="markdownIt-Anchor" href="#image-type图片类型"></a> Image Type：图片类型</h2><h3 id="simple-普通模式均匀缩放整个图片"><a class="markdownIt-Anchor" href="#simple-普通模式均匀缩放整个图片"></a> Simple-普通模式，均匀缩放整个图片</h3><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/%E7%AE%80%E5%8D%95%E5%9B%BE%E5%83%8F%E7%B1%BB%E5%9E%8B%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h3 id="sliced-切片模式9宫格拉伸只拉伸中央十字区域"><a class="markdownIt-Anchor" href="#sliced-切片模式9宫格拉伸只拉伸中央十字区域"></a> Sliced-切片模式，9宫格拉伸，只拉伸中央十字区域</h3><p>记得要导入2d的sprite包<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/test%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/%E7%BC%96%E8%BE%91%E5%9B%BE%E7%89%87%E4%B9%9D%E5%AE%AB%E6%A0%BC%E5%8A%A8%E7%94%BB.gif" alt="" /><br />Pixels Per UnitMultiplier：每单位像素乘数（越大越细节）<br />Fill Center：中心填充<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329205526591.png" alt="" /></p><h3 id="tiled-平铺模式"><a class="markdownIt-Anchor" href="#tiled-平铺模式"></a> Tiled-平铺模式</h3><p>重复平铺，九宫格中央部分<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/file-20250329205806646.png" alt="" /></p><h3 id="filled-填充模式"><a class="markdownIt-Anchor" href="#filled-填充模式"></a> Filled-填充模式</h3><p>Fill Method：填充方式<br />Fill Origin：填充原点<br />Fill Amount：填充量<br />Clockwise：顺时针方向<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/8.Image%E5%9B%BE%E7%89%87/%E5%A1%AB%E5%85%85%E6%A8%A1%E5%BC%8F%E5%8A%A8%E7%94%BB.gif" alt="" /></p><h2 id="use-sprite-mesh使用精灵网格勾选的话unity会帮我们生成图片网格"><a class="markdownIt-Anchor" href="#use-sprite-mesh使用精灵网格勾选的话unity会帮我们生成图片网格"></a> Use Sprite Mesh*：使用精灵网格，勾选的话Unity会帮我们生成图片网格</h2><h2 id="preserve-aspect确保图像保持其现有尺寸"><a class="markdownIt-Anchor" href="#preserve-aspect确保图像保持其现有尺寸"></a> Preserve Aspect*：确保图像保持其现有尺寸</h2><h2 id="set-native-size设置为图片资源的原始大小"><a class="markdownIt-Anchor" href="#set-native-size设置为图片资源的原始大小"></a> Set Native Size：设置为图片资源的原始大小</h2><p>会根据你<a href="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/" title="4.CanvasScaler画布缩放控制组件">Canvas Scaler</a>里面的恒定像素模式或者恒定物理模式计算</p><h1 id="代码控制"><a class="markdownIt-Anchor" href="#代码控制"></a> 代码控制</h1><p>需 <code>using UnityEngine.UI;</code></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Image image = <span class="keyword">this</span>.GetComponent&lt;Image&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从资源文件夹中加载名为 &quot;ui_TY_fanhui_01&quot; 的 Sprite，并将其设置为 Image 的显示图像</span></span><br><span class="line">image.sprite = Resources.Load&lt;Sprite&gt;(<span class="string">&quot;ui_TY_fanhui_01&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// (transform as RectTransform).sizeDelta 设置为 Image 的宽高， 修改其尺寸为宽度 200、高度 200 的 Vector2 </span></span><br><span class="line">(transform <span class="keyword">as</span> RectTransform).sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">200</span>, <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 禁用该 Image 组件的射线检测，使其不响应用户的点击事件</span></span><br><span class="line">image.raycastTarget = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将该 Image 组件的颜色设置为红色</span></span><br><span class="line">image.color = Color.red;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;image图片控件是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#image图片控件是什么&quot;&gt;&lt;/a&gt; Image图片控件是什么&lt;/h1&gt;
&lt;p&gt;Image是图像组件，是UGUI中用于显示精灵图片的关键组件。&lt;br /&gt;
除了背景</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI三大基础控件" scheme="http://example.com/tags/UGUI%E4%B8%89%E5%A4%A7%E5%9F%BA%E7%A1%80%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>7.RectTransform矩形变换组件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-29T04:47:47.000Z</published>
    <updated>2025-03-29T07:29:54.482Z</updated>
    
    <content type="html"><![CDATA[<h1 id="recttransform组件用来干啥"><a class="markdownIt-Anchor" href="#recttransform组件用来干啥"></a> RectTransform组件用来干啥</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329124750057.png" alt="" /></p><h1 id="recttransform参数"><a class="markdownIt-Anchor" href="#recttransform参数"></a> RectTransform参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329125300810.png" alt="" /></p><h2 id="pivot-轴心点"><a class="markdownIt-Anchor" href="#pivot-轴心点"></a> Pivot 轴心点</h2><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329125613385.png" alt="" /><br />轴心点是旋转的中心点<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/Pivot%E5%8A%A8%E7%94%BB.gif" alt="" /><br />轴心点会和锚点一起用于位置的计算<br />轴心点会影响当宽高扩大缩小时是已轴的哪个方向进行伸缩的</p><h2 id="anchors-相对父矩形锚点"><a class="markdownIt-Anchor" href="#anchors-相对父矩形锚点"></a> Anchors 相对父矩形锚点</h2><p><strong>锚点为点</strong><br />当锚点是一个点的时候<br /><strong>轴心到锚点的距离（位置X 和 位置Y）都不变</strong><br /><strong>UI 元素的大小不会随父对象的尺寸改变而改变。</strong><br />一般用来设置<br />固定位置的 UI 元素：例如游戏中的固定提示框、固定按钮等。无论父对象的大小如何变化，这些元素都会保持在相对父对象的固定位置。<br />不依赖布局变化的元素：一些独立的 UI 元素，如单独的图标、小窗口等，它们的大小和位置不需要根据父对象的布局进行调整。<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/%E5%8D%95%E4%B8%AA%E7%82%B9%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p><strong>锚点为矩形</strong><br />参考NGUI中的 <a href="/2025/03/12/UI%E7%B3%BB%E7%BB%9F/NGUI/NGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/17.Anchor%E9%94%9A%E7%82%B9/#%E6%96%B0%E7%89%88%E6%9C%AC%E9%94%9A%E7%82%B9%E7%BB%84%E4%BB%B6" title="17.Anchor锚点">锚点组件</a><br />注意观察图片周围生成的白色虚线和矩形锚点各个边<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/%E7%9F%A9%E5%BD%A2%E8%BE%B9%E7%BC%98%E5%AF%B9%E9%BD%90%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p>会对图片进行拉升变形，<br />注意红框位置的竖直都没有变，即图片的各个边到锚点矩形各边的位置没变</p><p>一般用于自适应布局的 UI 元素：例如游戏中的背景图片、全屏的菜单界面等</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/%E7%9F%A9%E5%BD%A2%E8%BE%B9%E7%BC%98%E5%AF%B9%E9%BD%90%E6%8B%89%E5%8D%87%E5%8F%98%E5%BD%A2%E5%8A%A8%E7%94%BB.gif" alt="" /></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/7.RectTransform%E7%9F%A9%E5%BD%A2%E5%8F%98%E6%8D%A2%E7%BB%84%E4%BB%B6/file-20250329144911515.png" alt="" /></p><p>可以通过代码直接获取Rect Transform</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.<span class="function">transform <span class="keyword">as</span> RectTransform</span></span><br><span class="line"><span class="function"><span class="title">print</span>(<span class="params">(<span class="keyword">this</span>.transform <span class="keyword">as</span> RectTransform</span>).sizeDelta)</span>;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;recttransform组件用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#recttransform组件用来干啥&quot;&gt;&lt;/a&gt; RectTransform组件用来干啥&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/29</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>6.EventSystem和StandaloneInputModule组件</title>
    <link href="http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-29T04:27:27.000Z</published>
    <updated>2025-03-29T04:46:16.948Z</updated>
    
    <content type="html"><![CDATA[<h1 id="eventsystem组件用来干啥"><a class="markdownIt-Anchor" href="#eventsystem组件用来干啥"></a> EventSystem组件用来干啥</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329122745205.png" alt="" /></p><h1 id="eventsystem组件参数"><a class="markdownIt-Anchor" href="#eventsystem组件参数"></a> EventSystem组件参数</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329122905341.png" alt="" /></p><h2 id="first-selected首选游戏对象"><a class="markdownIt-Anchor" href="#first-selected首选游戏对象"></a> First Selected：首选游戏对象</h2><p>首先选择的游戏对象，可以设置游戏一开始的默认选择</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123224801.png" alt="" /></p><h2 id="send-navigation-events是否允许导航事件"><a class="markdownIt-Anchor" href="#send-navigation-events是否允许导航事件"></a> Send Navigation Events：是否允许导航事件</h2><p>（移动/按下/取消）<br />勾选后，可以按wasd或上下左右切换选择的对象<br /><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/screenshots.gif" alt="" /></p><h2 id="drag-threshold拖拽阈值"><a class="markdownIt-Anchor" href="#drag-threshold拖拽阈值"></a> Drag Threshold：拖拽阈值</h2><p>拖拽操作的阈值（移动多少像素算拖拽）<br />鼠标移动多少像素进入拖拽状态</p><h1 id="standalone-input-module组件用来干啥的"><a class="markdownIt-Anchor" href="#standalone-input-module组件用来干啥的"></a> Standalone Input Module组件用来干啥的</h1><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123847494.png" alt="" /></p><h1 id="standalone-input-module参数"><a class="markdownIt-Anchor" href="#standalone-input-module参数"></a> Standalone Input Module参数</h1><p><strong>一般不需要修改</strong></p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329123935145.png" alt="" /></p><p>Horizontal Axis：水平轴按钮对应的热键名（该名字对应Input管理器）<br />Vertical Axis：垂直轴按钮对应的热键名（该名字对应Input管理器）<br />Submit Button：提交（确定）按钮对应的热键名（该名字对应Input管理器）<br />Cancel Button：取消按钮对应的热键名（该名字对应Input管理器）<br />Input Actions Per Second：每秒允许键盘/控制器输入的数量<br />Repeat Delay：每秒输入操作重复率生效前的延迟时间<br />ForceModule Active：是否强制模块处于激活状态<br />一般其实不会修改Standalone Input Module组件的</p><p>EventSystem对象提供了调试信息相关</p><p><img src="/2025/03/29/UI%E7%B3%BB%E7%BB%9F/UGUI/6.EventSystem%E5%92%8CStandaloneInputModule%E7%BB%84%E4%BB%B6/file-20250329124615448.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;eventsystem组件用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#eventsystem组件用来干啥&quot;&gt;&lt;/a&gt; EventSystem组件用来干啥&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/29/UI%E7</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>5.GraphicRaycaster图形射线投射器组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T12:45:27.000Z</published>
    <updated>2025-03-29T04:26:33.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="graphic-raycaster用来干啥"><a class="markdownIt-Anchor" href="#graphic-raycaster用来干啥"></a> Graphic Raycaster用来干啥</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250328204543152.png" alt="" /></p><h1 id="graphic-raycaster参数"><a class="markdownIt-Anchor" href="#graphic-raycaster参数"></a> Graphic Raycaster参数</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329121018924.png" alt="" /></p><h2 id="ignore-reversed-graphics忽略反转图形"><a class="markdownIt-Anchor" href="#ignore-reversed-graphics忽略反转图形"></a> Ignore Reversed Graphics：忽略反转图形</h2><p>勾选后，假如对象旋转了x轴或y轴，点击失效<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329121811345.png" alt="" /></p><h2 id="blocking-objects"><a class="markdownIt-Anchor" href="#blocking-objects"></a> Blocking Objects：</h2><p>射线被哪些类型的碰撞器阻挡（在覆盖渲染模式下无效）</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250329122016404.png" alt="" /></p><h2 id="blocking-mask"><a class="markdownIt-Anchor" href="#blocking-mask"></a> Blocking Mask：</h2><p>射线被哪些层级的碰撞器阻挡（在覆盖渲染模式下无效）<br />要配合Blocking Objects使用<br /><strong>Blocking Object 和 Blocking Mask两个都要满足才能阻挡射线</strong></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;graphic-raycaster用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#graphic-raycaster用来干啥&quot;&gt;&lt;/a&gt; Graphic Raycaster用来干啥&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>4.CanvasScaler画布缩放控制组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T09:15:26.000Z</published>
    <updated>2025-03-28T12:43:43.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvasscaler必备知识"><a class="markdownIt-Anchor" href="#canvasscaler必备知识"></a> CanvasScaler必备知识</h1><h2 id="canvasscaler是什么"><a class="markdownIt-Anchor" href="#canvasscaler是什么"></a> CanvasScaler是什么</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171556049.png" alt="" /></p><h2 id="canvasscaler学前知识准备"><a class="markdownIt-Anchor" href="#canvasscaler学前知识准备"></a> CanvasScaler学前知识准备</h2><h3 id="屏幕分辨率"><a class="markdownIt-Anchor" href="#屏幕分辨率"></a> 屏幕分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171906516.png" alt="" /></p><h3 id="画布大小和缩放系数"><a class="markdownIt-Anchor" href="#画布大小和缩放系数"></a> 画布大小和缩放系数</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172015426.png" alt="" /></p><h3 id="参考分辨率"><a class="markdownIt-Anchor" href="#参考分辨率"></a> 参考分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172330645.png" alt="" /></p><h3 id="汇总"><a class="markdownIt-Anchor" href="#汇总"></a> 汇总</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172431278.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172501024.png" alt="" /></p><h2 id="canvasscaler的三种适配模式概览"><a class="markdownIt-Anchor" href="#canvasscaler的三种适配模式概览"></a> CanvasScaler的三种适配模式概览</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172630980.png" alt="" /></p><h2 id="必备知识总结"><a class="markdownIt-Anchor" href="#必备知识总结"></a> 必备知识总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172741902.png" alt="" /></p><h1 id="constant-pixel-size-恒定像素模式"><a class="markdownIt-Anchor" href="#constant-pixel-size-恒定像素模式"></a> Constant Pixel Size 恒定像素模式</h1><p><strong>游戏UI中极少使用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172907263.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172929490.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328173002156.png" alt="" /></p><h2 id="scale-factor缩放系数"><a class="markdownIt-Anchor" href="#scale-factor缩放系数"></a> Scale Factor：缩放系数</h2><p>这是一个缩放系数，用于指定Canvas中所有UI元素的全局缩放比例</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328185911443.png" alt="" /></p><h2 id="reference-pixels-per-unit单位参考像素"><a class="markdownIt-Anchor" href="#reference-pixels-per-unit单位参考像素"></a> Reference Pixels Per Unit：单位参考像素</h2><p>定义了在Unity中一个单位对应多少个屏幕像素，默认情况下，<strong>一个单位通常被设定为100像素</strong>。<br />这一参数与图片本身的Pixels Per Unit设置共同作用于UI元素的最终显示尺寸计算。</p><h2 id="恒定像素模式计算公式"><a class="markdownIt-Anchor" href="#恒定像素模式计算公式"></a> 恒定像素模式计算公式</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328190823208.png" alt="" /></p><p>尝试把单位参考像素从100改成50，点击图片上设置原生大小，会发现图片缩小了一半，这是符合恒定像素模式计算公式<br />即 <strong>49 UI尺寸</strong> = <strong>98 图片文件大小</strong> / (<strong>100 图片文件中每单位像素数</strong> / <strong>50 CanvasScaler每单位参考像素</strong>)<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191153328.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191254850.png" alt="" /></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192003400.png" alt="" /></p><h1 id="scale-with-screen-size-缩放模式"><a class="markdownIt-Anchor" href="#scale-with-screen-size-缩放模式"></a> Scale With Screen Size 缩放模式</h1><p><strong>最常用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192228749.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192252266.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192413019.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192334340.png" alt="" /></p><h2 id="reference-resolution参考分辨率"><a class="markdownIt-Anchor" href="#reference-resolution参考分辨率"></a> Reference Resolution：参考分辨率</h2><p><strong>美术同学出图的标准分辨率。</strong><br />缩放模式下的所有匹配模式都会基于参考分辨率进行自适应计算，可以填写常用的分辨率大小1920x1080</p><h2 id="screen-match-mode屏幕匹配模式"><a class="markdownIt-Anchor" href="#screen-match-mode屏幕匹配模式"></a> Screen Match Mode：屏幕匹配模式</h2><p>当前屏幕分辨率宽高比不适应参考分辨率时，用于分辨率大小自适应的匹配模式</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193246356.png" alt="" /></p><h3 id="expand-拓展匹配"><a class="markdownIt-Anchor" href="#expand-拓展匹配"></a> Expand 拓展匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193337727.png" alt="" /></p><p><strong>Canvas Size 画布的尺寸</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193754365.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328194242932.png" alt="" /></p><p>白色底图就是1920 * 1080 的图<br />可以看到完全显示了图，即 <strong>保留所有细节，但是上下有黑边（这里是天空盒）</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200501369.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200839542.png" alt="" /></p><h3 id="shrink-收缩匹配"><a class="markdownIt-Anchor" href="#shrink-收缩匹配"></a> Shrink 收缩匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201002994.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201046815.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201232021.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201352973.png" alt="" /></p><h3 id="match-width-or-height-宽高匹配"><a class="markdownIt-Anchor" href="#match-width-or-height-宽高匹配"></a> Match Width Or Height 宽高匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201452029.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201600609.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201703322.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201716631.png" alt="" /></p><p>要么裁剪，要么黑边<br />中间的UI一直不变<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202359219.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202317945.png" alt="" /></p><h2 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202555392.png" alt="" /></p><h1 id="constant-physical-size-恒定物理模式"><a class="markdownIt-Anchor" href="#constant-physical-size-恒定物理模式"></a> Constant Physical Size 恒定物理模式</h1><p>了解一下就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202818644.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202954906.png" alt="" /></p><p>DPI：（Dots Per Inch，每英寸点数）图像每英寸长度内的像素点数</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203400735.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203539874.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203722292.png" alt="" /></p><h1 id="3d模式"><a class="markdownIt-Anchor" href="#3d模式"></a> 3D模式</h1><p>了解就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203853233.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204010773.png" alt="" /></p><p>新建一个Text，可以看到有点模糊<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204131539.png" alt="" /></p><p>把 Dynamic Pixels Per Unit 改大就越清晰<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204240450.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;canvasscaler必备知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#canvasscaler必备知识&quot;&gt;&lt;/a&gt; CanvasScaler必备知识&lt;/h1&gt;
&lt;h2 id=&quot;canvasscaler是什么&quot;&gt;&lt;a class</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>3.Canvas画布组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T08:12:04.000Z</published>
    <updated>2025-03-29T15:28:07.123Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvas组件用来干啥"><a class="markdownIt-Anchor" href="#canvas组件用来干啥"></a> Canvas组件用来干啥</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161331979.png" alt="" /></p><p>场景上可以有多个Canvas对象<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161451808.png" alt="" /></p><h1 id="canvas的三种渲染方式"><a class="markdownIt-Anchor" href="#canvas的三种渲染方式"></a> Canvas的三种渲染方式</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161651369.png" alt="" /></p><h2 id="screen-space-overlay"><a class="markdownIt-Anchor" href="#screen-space-overlay"></a> Screen Space - Overlay</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161814899.png" alt="" /></p><p>UI始终显示在3d物体前面<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162820350.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162153133.png" alt="" /></p><h3 id="pixel-perfect"><a class="markdownIt-Anchor" href="#pixel-perfect"></a> Pixel Perfect ：</h3><p>是否开启无锯齿精确渲染（性能换效果）</p><h3 id="sortorder"><a class="markdownIt-Anchor" href="#sortorder"></a> SortOrder：</h3><p>排序层编号<br />用于控制多个Canvas时的渲染先后顺序<br />次序越大，越后渲染，然后显示在前面</p><h3 id="targetdisplay"><a class="markdownIt-Anchor" href="#targetdisplay"></a> TargetDisplay*：</h3><p>目标设备（在哪个显示设备上显示）<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162306884.png" alt="" /></p><h3 id="additional-shader-channels"><a class="markdownIt-Anchor" href="#additional-shader-channels"></a> Additional Shader Channels*：</h3><p>其他着色器通道，决定着色器可以读取哪些数据</p><h2 id="screen-space-camera"><a class="markdownIt-Anchor" href="#screen-space-camera"></a> Screen Space - Camera</h2><p>手游用这个用的多<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162905643.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163107754.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163856193.png" alt="" /></p><h3 id="rendercamera"><a class="markdownIt-Anchor" href="#rendercamera"></a> RenderCamera：</h3><p>用于渲染UI的摄像机（如果不设置将类似于覆盖模式）</p><p>不推荐设置成主摄像机<br />设置成主摄像机可能会不好控制哪些场景模型要在UI前面，哪些要在后面<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163919503.png" alt="" /></p><p>建议多创建一个只渲染UI层的摄像机并关联，设置模式为仅深度。调整深度比主摄像机高。这样UI就能一直在模型前面了。假如想创建显示在UI层前面的模型，直接创建在UI下的子物体即可。</p><h3 id="plane-distance"><a class="markdownIt-Anchor" href="#plane-distance"></a> Plane Distance：</h3><p>UI平面在摄像机前方的距离，类似整体Z轴的感觉<br />可以通过这个来让3d物体显示之前或者之后 <strong>（一般不用）</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/screenshots.gif" alt="" /></p><p>下面两参数用来决定多个Canvas之间的顺序</p><h3 id="sorting-layer所在排序层"><a class="markdownIt-Anchor" href="#sorting-layer所在排序层"></a> Sorting Layer：所在排序层</h3><h3 id="order-in-layer排序层的序号"><a class="markdownIt-Anchor" href="#order-in-layer排序层的序号"></a> Order in Layer：排序层的序号</h3><h3 id="eg"><a class="markdownIt-Anchor" href="#eg"></a> eg：</h3><p>主摄像机不渲染UI层<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165558858.png" alt="" /></p><p>新建一个摄像机，只渲染UI层，清楚标志选择仅深度<br />注意：<br />因为<strong>新创建的摄像机的深度（仅深度） &gt; 主摄像机的深度（天空盒）</strong><br />所以UI元素只会显示在屏幕前面<br />想要在UI前面显示3d物体可以在UI的Canvas下面创建3d物体<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165956835.png" alt="" /></p><p>UI的渲染选择新创建的摄像机<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165835181.png" alt="" /></p><h2 id="world-space"><a class="markdownIt-Anchor" href="#world-space"></a> World Space</h2><p>3D模式，可以把UI对象像3D物体一样处理，常用于VR或者AR<br />一般把关联的摄像机设置成主摄像机，重置UI的比例和长宽后，标准单位的UI图片大小是和立方体一样的。可以把UI当成3D物体处理。<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328170925145.png" alt="" /></p><p><strong>Event Camera：</strong><br />用于处理UI事件的摄像机（如果不设置，不能正常注册UI事件）<br />这里关联的摄像机一般就是我们的主摄像机</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328171222382.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;canvas组件用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#canvas组件用来干啥&quot;&gt;&lt;/a&gt; Canvas组件用来干啥&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>2.六大基础组件概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:51:43.000Z</published>
    <updated>2025-03-28T08:13:07.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在unity中使用ugui"><a class="markdownIt-Anchor" href="#如何在unity中使用ugui"></a> 如何在Unity中使用UGUI</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155525253.png" alt="" /></p><p>白框是玩家能看到的内容<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155655276.png" alt="" /></p><h1 id="六打基础组件在哪里"><a class="markdownIt-Anchor" href="#六打基础组件在哪里"></a> 六打基础组件在哪里</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155801398.png" alt="" /></p><h1 id="六打基础组件概述"><a class="markdownIt-Anchor" href="#六打基础组件概述"></a> 六打基础组件概述</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328160041734.png" alt="" /><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155942558.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155957314.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在unity中使用ugui&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何在unity中使用ugui&quot;&gt;&lt;/a&gt; 如何在Unity中使用UGUI&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>1.UGUI基础知识概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:40:28.000Z</published>
    <updated>2025-03-28T07:49:54.604Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154107061.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154154553.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154338223.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/Unity%E4%B8%AD%E7%9A%84UI%E7%B3%BB%E7%BB%9F%20%E4%B9%8B%20UGUI.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png&quot; </summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>8.Json实践小项目</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/</id>
    <published>2025-03-27T12:44:21.000Z</published>
    <updated>2025-03-27T13:06:08.747Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210352852.png" alt="" /></p><h1 id="需求分析"><a class="markdownIt-Anchor" href="#需求分析"></a> 需求分析</h1><p>写一个Json数据管理类<br />需要有一键存储和读取对应对象的方法<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327205230653.png" alt="" /></p><h1 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json; <span class="comment">// 需先安装 Newtonsoft.Json</span></span><br><span class="line"><span class="keyword">using</span> LitJson; <span class="comment">// 需先安装 LitJson</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> JsonType</span><br><span class="line">&#123;</span><br><span class="line">    JsonUtility,</span><br><span class="line">    LitJson,</span><br><span class="line">    NewtonsoftJson <span class="comment">// 新增 Newtonsoft 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JsonMgr instance = <span class="keyword">new</span> JsonMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JsonMgr Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">JsonMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params"><span class="built_in">object</span> data, <span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line">        <span class="built_in">string</span> json = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                json = JsonUtility.ToJson(data, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                json = JsonMapper.ToJson(data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: <span class="comment">// Newtonsoft 分支</span></span><br><span class="line">                json = JsonConvert.SerializeObject(data, Formatting.Indented);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(path, json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">LoadData</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$&quot;File not found: <span class="subst">&#123;path&#125;</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> json = File.ReadAllText(path);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                <span class="keyword">return</span> JsonUtility.FromJson&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                <span class="keyword">return</span> JsonMapper.ToObject&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: </span><br><span class="line">                <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;T&gt;(json);</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="具体使用"><a class="markdownIt-Anchor" href="#具体使用"></a> 具体使用</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义测试数据类</span></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> playerName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> level;</span><br><span class="line">    <span class="keyword">public</span> Vector3 position; <span class="comment">// Unity 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData data = <span class="keyword">new</span> PlayerData </span><br><span class="line">&#123; </span><br><span class="line">    playerName = <span class="string">&quot;Arthur&quot;</span>, </span><br><span class="line">    level = <span class="number">10</span>, </span><br><span class="line">    position = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) </span><br><span class="line">&#125;;</span><br><span class="line">JsonMgr.Instance.SaveData(data, <span class="string">&quot;player.json&quot;</span>, JsonType.NewtonsoftJson);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData loadedData = JsonMgr.Instance.LoadData&lt;PlayerData&gt;(</span><br><span class="line">    <span class="string">&quot;player.json&quot;</span>, </span><br><span class="line">    JsonType.NewtonsoftJson</span><br><span class="line">);</span><br><span class="line">Debug.Log(loadedData.position); <span class="comment">// 输出 (1.0, 2.0, 3.0)</span></span><br></pre></td></tr></table></figure><h1 id="总结与挖坑"><a class="markdownIt-Anchor" href="#总结与挖坑"></a> 总结与挖坑</h1><p>这要搞是不是有点复杂？<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210414641.png" alt="" /></p><p>以后编辑器开发可以来解决<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210454462.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>7.各Json库对比</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/</id>
    <published>2025-03-27T12:10:06.000Z</published>
    <updated>2025-03-27T12:38:15.827Z</updated>
    
    <content type="html"><![CDATA[<p>在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。</p><h1 id="核心对比表"><a class="markdownIt-Anchor" href="#核心对比表"></a> <strong>核心对比表</strong></h1><table><thead><tr><th><strong>特性</strong></th><th><strong>Newtonsoft.Json</strong></th><th><strong>LitJson</strong></th><th><strong>Unity JsonUtility</strong></th></tr></thead><tbody><tr><td><strong>类型支持</strong></td><td>✔️ 支持复杂类型（字典、多态、接口、私有字段等）</td><td>✔️ 基础类型、简单对象，有限支持多态（字典）</td><td>❌ 仅支持标记为 <code>[Serializable]</code> 的公共字段</td></tr><tr><td><strong>性能</strong></td><td>❌ 最慢（反射开销大）</td><td>✔️ 较快（轻量级实现）</td><td>✔️ 最快（底层 C++ 实现）</td></tr><tr><td><strong>Unity 类型支持</strong></td><td>❌ 需自定义转换器（如 <code>Vector3</code>）</td><td>❌ 需自定义转换器</td><td>✔️ 原生支持 <code>Vector3</code>、<code>Color</code> 等</td></tr><tr><td><strong>多态/继承支持</strong></td><td>✔️ 完整支持（通过 <code>TypeNameHandling</code>）</td><td>✔️ 有限支持（需额外配置）</td><td>❌ 不支持</td></tr><tr><td><strong>自定义序列化</strong></td><td>✔️ 支持（<code>JsonConverter</code>、属性标记）</td><td>✔️ 有限支持（通过 <code>JsonMapper</code>）</td><td>❌ 不支持</td></tr><tr><td><strong>空值和默认值处理</strong></td><td>✔️ 灵活配置（<code>NullValueHandling</code>）</td><td>✔️ 基础支持</td><td>❌ 仅忽略 <code>null</code></td></tr><tr><td><strong>文档和社区</strong></td><td>✔️ 完善（官方文档 + Stack Overflow）</td><td>❌ 文档较少，社区支持一般</td><td>✔️ 官方文档（但功能有限）</td></tr><tr><td><strong>安装方式</strong></td><td>✔️ NuGet 包或手动导入</td><td>✔️ 手动导入 DLL 或源码</td><td>✔️ Unity 内置</td></tr><tr><td><strong>AOT/IL2CPP 兼容性</strong></td><td>❌ 需要额外处理（<code>link.xml</code>）</td><td>✔️ 较好</td><td>✔️ 完美兼容</td></tr><tr><td><strong>体积</strong></td><td>❌ 较大（DLL 约 500KB）</td><td>✔️ 较小（DLL 约 100KB）</td><td>✔️ 零额外体积</td></tr><tr><td><strong>数据反序列化为数据集合</strong></td><td>✔️</td><td>✔️</td><td>❌不能直接将数据反序列化为数据集合(数组字典),要包裹一层</td></tr></tbody></table><h1 id="详细对比分析"><a class="markdownIt-Anchor" href="#详细对比分析"></a> 详细对比分析</h1><h2 id="功能丰富性"><a class="markdownIt-Anchor" href="#功能丰富性"></a> <strong>功能丰富性</strong></h2><p><strong>Newtonsoft.Json</strong>：<br /><strong>最强功能</strong>：支持多态类型、字典、私有字段、接口、循环引用处理、自定义转换器等。<br />适合复杂数据结构（如 RPG 游戏的存档、网络协议数据）。<br /><strong>LitJson</strong>：<br /><strong>中等功能</strong>：支持基础类型和简单对象，多态需要手动注册类型。<br />适合轻量级需求（如配置表解析）。<br /><strong>JsonUtility</strong>：<br /><strong>功能最弱</strong>：仅支持标记为 <code>[Serializable]</code> 的公共字段，不支持字典、多态、私有字段。<br />适合简单数据（如玩家位置、基础配置）。</p><h2 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> <strong>性能</strong></h2><p><strong>JsonUtility</strong>：<br /><strong>最快</strong>：底层是 C++ 实现，无反射开销，适合高频调用（如每帧序列化）。<br />测试数据：序列化 10,000 个简单对象约 <strong>5ms</strong>。<br /><strong>LitJson</strong>：<br /><strong>次快</strong>：基于轻量级代码生成，反射开销较小。<br />测试数据：序列化 10,000 个简单对象约 <strong>20ms</strong>。<br /><strong>Newtonsoft.Json</strong>：<br /><strong>最慢</strong>：依赖反射和动态类型，性能较差。<br />测试数据：序列化 10,000 个简单对象约 <strong>100ms</strong>。</p><h2 id="unity-类型支持"><a class="markdownIt-Anchor" href="#unity-类型支持"></a> <strong>Unity 类型支持</strong></h2><p><strong>JsonUtility</strong>：原生支持 <code>Vector3</code>、<code>Color</code>、<code>Quaternion</code> 等 Unity 特有类型。<br /><strong>Newtonsoft.Json</strong> 和 <strong>LitJson</strong>：需要自定义转换器才能序列化 Unity 类型（如 <code>Vector3</code>）。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Newtonsoft.Json 自定义 Vector3 转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Vector3Converter</span> : <span class="title">JsonConverter</span>&lt;<span class="title">Vector3</span>&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, Vector3 <span class="keyword">value</span>, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        writer.WriteValue(<span class="string">$&quot;<span class="subst">&#123;<span class="keyword">value</span>.x&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.y&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.z&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Vector3 <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, Vector3 existingValue, <span class="built_in">bool</span> hasExistingValue, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">string</span>[] parts = ((<span class="built_in">string</span>)reader.Value).Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Vector3(<span class="built_in">float</span>.Parse(parts[<span class="number">0</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">1</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态支持继承类接口"><a class="markdownIt-Anchor" href="#多态支持继承类接口"></a> <strong>多态支持（继承类/接口）</strong></h2><p><strong>Newtonsoft.Json</strong>：通过 <code>TypeNameHandling.Auto</code> 自动添加类型信息。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>]</span><br><span class="line"><span class="keyword">public</span> List&lt;Character&gt; Characters; <span class="comment">// 支持 Enemy/NPC 派生类</span></span><br></pre></td></tr></table></figure><p><strong>LitJson</strong>：需手动注册子类型</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JsonMapper.RegisterExporter&lt;Enemy&gt;((obj, writer) =&gt; &#123; <span class="comment">/* 自定义导出逻辑 */</span> &#125;);</span><br></pre></td></tr></table></figure><p><strong>JsonUtility</strong>：不支持多态，反序列化时无法还原派生类。</p><h2 id="移动端兼容性"><a class="markdownIt-Anchor" href="#移动端兼容性"></a> <strong>移动端兼容性</strong></h2><p><strong>JsonUtility</strong>：完美支持 IL2CPP，无 AOT 问题。<br /><strong>LitJson</strong>：兼容性较好，但部分复杂类型可能需额外处理。<br /><strong>Newtonsoft.Json</strong>：在 IL2CPP 下可能因反射导致 AOT 错误，需通过 <code>link.xml</code> 保留类型：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- link.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">linker</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">assembly</span> <span class="attr">fullname</span>=<span class="string">&quot;Newtonsoft.Json&quot;</span> <span class="attr">preserve</span>=<span class="string">&quot;all&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">linker</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="场景推荐"><a class="markdownIt-Anchor" href="#场景推荐"></a> <strong>场景推荐</strong></h1><p><strong>Newtonsoft.Json：</strong><br />需要处理复杂数据结构（如包含字典、多态类型的存档）。<br />需要高度定制序列化行为（如忽略空值、自定义字段名）。</p><p>典型场景：<strong>网络协议、复杂游戏存档、编辑器工具</strong>。</p><p><strong>LitJson：</strong><br />对性能有一定要求，但数据结构简单。<br />不想依赖 Unity 以外的库。</p><p>典型场景：<strong>配置表解析、轻量级网络通信。</strong></p><p><strong>JsonUtility：</strong><br />数据结构简单，且需要极致性能（如频繁序列化）。<br />项目要求零额外依赖。</p><p>典型场景：<strong>玩家位置同步、简单配置存储。</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson06_JsonUtility</span>和<span class="title">LitJson</span>对比 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点一 JsonUtlity和LitJson相同点</span></span><br><span class="line">        <span class="comment">//1.他们都是用于Json的序列化反序列化</span></span><br><span class="line">        <span class="comment">//2.Json文档编码格式必须是UTF-8</span></span><br><span class="line">        <span class="comment">//3.都是通过静态类进行方法调用</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点二 JsonUtlity和LitJson不同点</span></span><br><span class="line">        <span class="comment">//1.JsonUtlity是Unity自带，LitJson是第三方需要引用命名空间</span></span><br><span class="line">        <span class="comment">//2.JsonUtlity使用时自定义类需要加特性,LitJson不需要</span></span><br><span class="line">        <span class="comment">//3.JsonUtlity支持私有变量(加特性),LitJson不支持</span></span><br><span class="line">        <span class="comment">//4.JsonUtlity不支持字典,LitJson支持(但是键只能是字符串)</span></span><br><span class="line">        <span class="comment">//5.JsonUtlity不能直接将数据反序列化为数据集合(数组字典),要包裹一层,LitJson可以</span></span><br><span class="line">        <span class="comment">//6.JsonUtlity对自定义类不要求有无参构造，LitJson需要</span></span><br><span class="line">        <span class="comment">//7.JsonUtlity存储空对象时会存储默认值而不是null，LitJson会存null</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点三 如何选择两者</span></span><br><span class="line">        <span class="comment">//根据实际需求</span></span><br><span class="line">        <span class="comment">//建议使用LitJson</span></span><br><span class="line">        <span class="comment">//原因：LitJson不用加特性，支持字典，支持直接反序列化为数据集合，存储null更准确</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。&lt;/p&gt;
&lt;h1 id=&quot;核心对比表&quot;&gt;&lt;a cla</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
</feed>
