<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-03-28T12:45:48.054Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>5.GraphicRaycaster图形射线投射器组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T12:45:27.000Z</published>
    <updated>2025-03-28T12:45:48.054Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5%BD%A2%E5%B0%84%E7%BA%BF%E6%8A%95%E5%B0%84%E5%99%A8%E7%BB%84%E4%BB%B6/file-20250328204543152.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/5.GraphicRaycaster%E5%9B%BE%E5</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>4.CanvasScaler画布缩放控制组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T09:15:26.000Z</published>
    <updated>2025-03-28T12:43:43.736Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvasscaler必备知识"><a class="markdownIt-Anchor" href="#canvasscaler必备知识"></a> CanvasScaler必备知识</h1><h2 id="canvasscaler是什么"><a class="markdownIt-Anchor" href="#canvasscaler是什么"></a> CanvasScaler是什么</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171556049.png" alt="" /></p><h2 id="canvasscaler学前知识准备"><a class="markdownIt-Anchor" href="#canvasscaler学前知识准备"></a> CanvasScaler学前知识准备</h2><h3 id="屏幕分辨率"><a class="markdownIt-Anchor" href="#屏幕分辨率"></a> 屏幕分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328171906516.png" alt="" /></p><h3 id="画布大小和缩放系数"><a class="markdownIt-Anchor" href="#画布大小和缩放系数"></a> 画布大小和缩放系数</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172015426.png" alt="" /></p><h3 id="参考分辨率"><a class="markdownIt-Anchor" href="#参考分辨率"></a> 参考分辨率</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172330645.png" alt="" /></p><h3 id="汇总"><a class="markdownIt-Anchor" href="#汇总"></a> 汇总</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172431278.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172501024.png" alt="" /></p><h2 id="canvasscaler的三种适配模式概览"><a class="markdownIt-Anchor" href="#canvasscaler的三种适配模式概览"></a> CanvasScaler的三种适配模式概览</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172630980.png" alt="" /></p><h2 id="必备知识总结"><a class="markdownIt-Anchor" href="#必备知识总结"></a> 必备知识总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172741902.png" alt="" /></p><h1 id="constant-pixel-size-恒定像素模式"><a class="markdownIt-Anchor" href="#constant-pixel-size-恒定像素模式"></a> Constant Pixel Size 恒定像素模式</h1><p><strong>游戏UI中极少使用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172907263.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328172929490.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328173002156.png" alt="" /></p><h2 id="scale-factor缩放系数"><a class="markdownIt-Anchor" href="#scale-factor缩放系数"></a> Scale Factor：缩放系数</h2><p>这是一个缩放系数，用于指定Canvas中所有UI元素的全局缩放比例</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328185911443.png" alt="" /></p><h2 id="reference-pixels-per-unit单位参考像素"><a class="markdownIt-Anchor" href="#reference-pixels-per-unit单位参考像素"></a> Reference Pixels Per Unit：单位参考像素</h2><p>定义了在Unity中一个单位对应多少个屏幕像素，默认情况下，<strong>一个单位通常被设定为100像素</strong>。<br />这一参数与图片本身的Pixels Per Unit设置共同作用于UI元素的最终显示尺寸计算。</p><h2 id="恒定像素模式计算公式"><a class="markdownIt-Anchor" href="#恒定像素模式计算公式"></a> 恒定像素模式计算公式</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328190823208.png" alt="" /></p><p>尝试把单位参考像素从100改成50，点击图片上设置原生大小，会发现图片缩小了一半，这是符合恒定像素模式计算公式<br />即 <strong>49 UI尺寸</strong> = <strong>98 图片文件大小</strong> / (<strong>100 图片文件中每单位像素数</strong> / <strong>50 CanvasScaler每单位参考像素</strong>)<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191153328.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328191254850.png" alt="" /></p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192003400.png" alt="" /></p><h1 id="scale-with-screen-size-缩放模式"><a class="markdownIt-Anchor" href="#scale-with-screen-size-缩放模式"></a> Scale With Screen Size 缩放模式</h1><p><strong>最常用</strong></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192228749.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192252266.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192413019.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328192334340.png" alt="" /></p><h2 id="reference-resolution参考分辨率"><a class="markdownIt-Anchor" href="#reference-resolution参考分辨率"></a> Reference Resolution：参考分辨率</h2><p><strong>美术同学出图的标准分辨率。</strong><br />缩放模式下的所有匹配模式都会基于参考分辨率进行自适应计算，可以填写常用的分辨率大小1920x1080</p><h2 id="screen-match-mode屏幕匹配模式"><a class="markdownIt-Anchor" href="#screen-match-mode屏幕匹配模式"></a> Screen Match Mode：屏幕匹配模式</h2><p>当前屏幕分辨率宽高比不适应参考分辨率时，用于分辨率大小自适应的匹配模式</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193246356.png" alt="" /></p><h3 id="expand-拓展匹配"><a class="markdownIt-Anchor" href="#expand-拓展匹配"></a> Expand 拓展匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193337727.png" alt="" /></p><p><strong>Canvas Size 画布的尺寸</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328193754365.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328194242932.png" alt="" /></p><p>白色底图就是1920 * 1080 的图<br />可以看到完全显示了图，即 <strong>保留所有细节，但是上下有黑边（这里是天空盒）</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200501369.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328200839542.png" alt="" /></p><h3 id="shrink-收缩匹配"><a class="markdownIt-Anchor" href="#shrink-收缩匹配"></a> Shrink 收缩匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201002994.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201046815.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201232021.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201352973.png" alt="" /></p><h3 id="match-width-or-height-宽高匹配"><a class="markdownIt-Anchor" href="#match-width-or-height-宽高匹配"></a> Match Width Or Height 宽高匹配</h3><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201452029.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201600609.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201703322.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328201716631.png" alt="" /></p><p>要么裁剪，要么黑边<br />中间的UI一直不变<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202359219.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202317945.png" alt="" /></p><h2 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202555392.png" alt="" /></p><h1 id="constant-physical-size-恒定物理模式"><a class="markdownIt-Anchor" href="#constant-physical-size-恒定物理模式"></a> Constant Physical Size 恒定物理模式</h1><p>了解一下就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202818644.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328202954906.png" alt="" /></p><p>DPI：（Dots Per Inch，每英寸点数）图像每英寸长度内的像素点数</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203400735.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203539874.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203722292.png" alt="" /></p><h1 id="3d模式"><a class="markdownIt-Anchor" href="#3d模式"></a> 3D模式</h1><p>了解就行</p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328203853233.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204010773.png" alt="" /></p><p>新建一个Text，可以看到有点模糊<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204131539.png" alt="" /></p><p>把 Dynamic Pixels Per Unit 改大就越清晰<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/4.CanvasScaler%E7%94%BB%E5%B8%83%E7%BC%A9%E6%94%BE%E6%8E%A7%E5%88%B6%E7%BB%84%E4%BB%B6/file-20250328204240450.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;canvasscaler必备知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#canvasscaler必备知识&quot;&gt;&lt;/a&gt; CanvasScaler必备知识&lt;/h1&gt;
&lt;h2 id=&quot;canvasscaler是什么&quot;&gt;&lt;a class</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>3.Canvas画布组件</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-28T08:12:04.000Z</published>
    <updated>2025-03-28T09:12:24.419Z</updated>
    
    <content type="html"><![CDATA[<h1 id="canvas组件用来干啥"><a class="markdownIt-Anchor" href="#canvas组件用来干啥"></a> Canvas组件用来干啥</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161331979.png" alt="" /></p><p>场景上可以有多个Canvas对象<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161451808.png" alt="" /></p><h1 id="canvas的三种渲染方式"><a class="markdownIt-Anchor" href="#canvas的三种渲染方式"></a> Canvas的三种渲染方式</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161651369.png" alt="" /></p><h2 id="screen-space-overlay"><a class="markdownIt-Anchor" href="#screen-space-overlay"></a> Screen Space - Overlay</h2><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328161814899.png" alt="" /></p><p>UI始终显示在3d物体前面<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162820350.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162153133.png" alt="" /></p><h3 id="pixel-perfect"><a class="markdownIt-Anchor" href="#pixel-perfect"></a> Pixel Perfect ：</h3><p>是否开启无锯齿精确渲染（性能换效果）</p><h3 id="sortorder"><a class="markdownIt-Anchor" href="#sortorder"></a> SortOrder：</h3><p>排序层编号<br />用于控制多个Canvas时的渲染先后顺序<br />次序越大，越后渲染，然后显示在前面</p><h3 id="targetdisplay"><a class="markdownIt-Anchor" href="#targetdisplay"></a> TargetDisplay*：</h3><p>目标设备（在哪个显示设备上显示）<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162306884.png" alt="" /></p><h3 id="additional-shader-channels"><a class="markdownIt-Anchor" href="#additional-shader-channels"></a> Additional Shader Channels*：</h3><p>其他着色器通道，决定着色器可以读取哪些数据</p><h1 id="screen-space-camera"><a class="markdownIt-Anchor" href="#screen-space-camera"></a> Screen Space - Camera</h1><p>手游用这个用的多<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328162905643.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163107754.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163856193.png" alt="" /></p><h3 id="rendercamera"><a class="markdownIt-Anchor" href="#rendercamera"></a> RenderCamera：</h3><p>用于渲染UI的摄像机（如果不设置将类似于覆盖模式）</p><p>不推荐设置成主摄像机<br />设置成主摄像机可能会不好控制哪些场景模型要在UI前面，哪些要在后面<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328163919503.png" alt="" /></p><p>建议多创建一个只渲染UI层的摄像机并关联，设置模式为仅深度。调整深度比主摄像机高。这样UI就能一直在模型前面了。假如想创建显示在UI层前面的模型，直接创建在UI下的子物体即可。</p><h3 id="plane-distance"><a class="markdownIt-Anchor" href="#plane-distance"></a> Plane Distance：</h3><p>UI平面在摄像机前方的距离，类似整体Z轴的感觉<br />可以通过这个来让3d物体显示之前或者之后 <strong>（一般不用）</strong><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/screenshots.gif" alt="" /></p><p>下面两参数用来决定多个Canvas之间的顺序</p><h3 id="sorting-layer所在排序层"><a class="markdownIt-Anchor" href="#sorting-layer所在排序层"></a> Sorting Layer：所在排序层</h3><h3 id="order-in-layer排序层的序号"><a class="markdownIt-Anchor" href="#order-in-layer排序层的序号"></a> Order in Layer：排序层的序号</h3><h3 id="eg"><a class="markdownIt-Anchor" href="#eg"></a> eg：</h3><p>主摄像机不渲染UI层<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165558858.png" alt="" /></p><p>新建一个摄像机，只渲染UI层，清楚标志选择仅深度<br />注意：<br />因为<strong>新创建的摄像机的深度（仅深度） &gt; 主摄像机的深度（天空盒）</strong><br />所以UI元素只会显示在屏幕前面<br />想要在UI前面显示3d物体可以在UI的Canvas下面创建3d物体<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165956835.png" alt="" /></p><p>UI的渲染选择新创建的摄像机<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328165835181.png" alt="" /></p><h1 id="world-space"><a class="markdownIt-Anchor" href="#world-space"></a> World Space</h1><p>3D模式，可以把UI对象像3D物体一样处理，常用于VR或者AR<br />一般把关联的摄像机设置成主摄像机，重置UI的比例和长宽后，标准单位的UI图片大小是和立方体一样的。可以把UI当成3D物体处理。<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328170925145.png" alt="" /></p><p><strong>Event Camera：</strong><br />用于处理UI事件的摄像机（如果不设置，不能正常注册UI事件）<br />这里关联的摄像机一般就是我们的主摄像机</p><h1 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/file-20250328171222382.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;canvas组件用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#canvas组件用来干啥&quot;&gt;&lt;/a&gt; Canvas组件用来干啥&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>2.六大基础组件概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:51:43.000Z</published>
    <updated>2025-03-28T08:13:07.849Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何在unity中使用ugui"><a class="markdownIt-Anchor" href="#如何在unity中使用ugui"></a> 如何在Unity中使用UGUI</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155525253.png" alt="" /></p><p>白框是玩家能看到的内容<br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155655276.png" alt="" /></p><h1 id="六打基础组件在哪里"><a class="markdownIt-Anchor" href="#六打基础组件在哪里"></a> 六打基础组件在哪里</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155801398.png" alt="" /></p><h1 id="六打基础组件概述"><a class="markdownIt-Anchor" href="#六打基础组件概述"></a> 六打基础组件概述</h1><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328160041734.png" alt="" /><br /><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155942558.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/2.%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6%E6%A6%82%E8%BF%B0/file-20250328155957314.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何在unity中使用ugui&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#如何在unity中使用ugui&quot;&gt;&lt;/a&gt; 如何在Unity中使用UGUI&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI六大基础组件" scheme="http://example.com/tags/UGUI%E5%85%AD%E5%A4%A7%E5%9F%BA%E7%A1%80%E7%BB%84%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>1.UGUI基础知识概述</title>
    <link href="http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-28T07:40:28.000Z</published>
    <updated>2025-03-28T07:49:54.604Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154107061.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154154553.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154338223.png" alt="" /></p><p><img src="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/Unity%E4%B8%AD%E7%9A%84UI%E7%B3%BB%E7%BB%9F%20%E4%B9%8B%20UGUI.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/1.UGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250328154038872.png&quot; </summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>8.Json实践小项目</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/</id>
    <published>2025-03-27T12:44:21.000Z</published>
    <updated>2025-03-27T13:06:08.747Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210352852.png" alt="" /></p><h1 id="需求分析"><a class="markdownIt-Anchor" href="#需求分析"></a> 需求分析</h1><p>写一个Json数据管理类<br />需要有一键存储和读取对应对象的方法<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327205230653.png" alt="" /></p><h1 id="具体实现"><a class="markdownIt-Anchor" href="#具体实现"></a> 具体实现</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json; <span class="comment">// 需先安装 Newtonsoft.Json</span></span><br><span class="line"><span class="keyword">using</span> LitJson; <span class="comment">// 需先安装 LitJson</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">enum</span> JsonType</span><br><span class="line">&#123;</span><br><span class="line">    JsonUtility,</span><br><span class="line">    LitJson,</span><br><span class="line">    NewtonsoftJson <span class="comment">// 新增 Newtonsoft 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> JsonMgr instance = <span class="keyword">new</span> JsonMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JsonMgr Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">JsonMgr</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params"><span class="built_in">object</span> data, <span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line">        <span class="built_in">string</span> json = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                json = JsonUtility.ToJson(data, <span class="literal">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                json = JsonMapper.ToJson(data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: <span class="comment">// Newtonsoft 分支</span></span><br><span class="line">                json = JsonConvert.SerializeObject(data, Formatting.Indented);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(path, json);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 加载数据（支持三种类型）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">LoadData</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="built_in">string</span> fileName, JsonType type = JsonType.LitJson</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> path = Path.Combine(Application.persistentDataPath, fileName);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.LogError(<span class="string">$&quot;File not found: <span class="subst">&#123;path&#125;</span>&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> json = File.ReadAllText(path);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (type)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> JsonType.JsonUtility:</span><br><span class="line">                <span class="keyword">return</span> JsonUtility.FromJson&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.LitJson:</span><br><span class="line">                <span class="keyword">return</span> JsonMapper.ToObject&lt;T&gt;(json);</span><br><span class="line">            <span class="keyword">case</span> JsonType.NewtonsoftJson: </span><br><span class="line">                <span class="keyword">return</span> JsonConvert.DeserializeObject&lt;T&gt;(json);</span><br><span class="line">            <span class="literal">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">default</span>(T);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="具体使用"><a class="markdownIt-Anchor" href="#具体使用"></a> 具体使用</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义测试数据类</span></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> playerName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> level;</span><br><span class="line">    <span class="keyword">public</span> Vector3 position; <span class="comment">// Unity 类型</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 保存数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData data = <span class="keyword">new</span> PlayerData </span><br><span class="line">&#123; </span><br><span class="line">    playerName = <span class="string">&quot;Arthur&quot;</span>, </span><br><span class="line">    level = <span class="number">10</span>, </span><br><span class="line">    position = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) </span><br><span class="line">&#125;;</span><br><span class="line">JsonMgr.Instance.SaveData(data, <span class="string">&quot;player.json&quot;</span>, JsonType.NewtonsoftJson);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 加载数据（使用 Newtonsoft）</span></span><br><span class="line">PlayerData loadedData = JsonMgr.Instance.LoadData&lt;PlayerData&gt;(</span><br><span class="line">    <span class="string">&quot;player.json&quot;</span>, </span><br><span class="line">    JsonType.NewtonsoftJson</span><br><span class="line">);</span><br><span class="line">Debug.Log(loadedData.position); <span class="comment">// 输出 (1.0, 2.0, 3.0)</span></span><br></pre></td></tr></table></figure><h1 id="总结与挖坑"><a class="markdownIt-Anchor" href="#总结与挖坑"></a> 总结与挖坑</h1><p>这要搞是不是有点复杂？<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210414641.png" alt="" /></p><p>以后编辑器开发可以来解决<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/file-20250327210454462.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/8.Json%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>7.各Json库对比</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/7.%E5%90%84Json%E5%BA%93%E5%AF%B9%E6%AF%94/</id>
    <published>2025-03-27T12:10:06.000Z</published>
    <updated>2025-03-27T12:38:15.827Z</updated>
    
    <content type="html"><![CDATA[<p>在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。</p><h1 id="核心对比表"><a class="markdownIt-Anchor" href="#核心对比表"></a> <strong>核心对比表</strong></h1><table><thead><tr><th><strong>特性</strong></th><th><strong>Newtonsoft.Json</strong></th><th><strong>LitJson</strong></th><th><strong>Unity JsonUtility</strong></th></tr></thead><tbody><tr><td><strong>类型支持</strong></td><td>✔️ 支持复杂类型（字典、多态、接口、私有字段等）</td><td>✔️ 基础类型、简单对象，有限支持多态（字典）</td><td>❌ 仅支持标记为 <code>[Serializable]</code> 的公共字段</td></tr><tr><td><strong>性能</strong></td><td>❌ 最慢（反射开销大）</td><td>✔️ 较快（轻量级实现）</td><td>✔️ 最快（底层 C++ 实现）</td></tr><tr><td><strong>Unity 类型支持</strong></td><td>❌ 需自定义转换器（如 <code>Vector3</code>）</td><td>❌ 需自定义转换器</td><td>✔️ 原生支持 <code>Vector3</code>、<code>Color</code> 等</td></tr><tr><td><strong>多态/继承支持</strong></td><td>✔️ 完整支持（通过 <code>TypeNameHandling</code>）</td><td>✔️ 有限支持（需额外配置）</td><td>❌ 不支持</td></tr><tr><td><strong>自定义序列化</strong></td><td>✔️ 支持（<code>JsonConverter</code>、属性标记）</td><td>✔️ 有限支持（通过 <code>JsonMapper</code>）</td><td>❌ 不支持</td></tr><tr><td><strong>空值和默认值处理</strong></td><td>✔️ 灵活配置（<code>NullValueHandling</code>）</td><td>✔️ 基础支持</td><td>❌ 仅忽略 <code>null</code></td></tr><tr><td><strong>文档和社区</strong></td><td>✔️ 完善（官方文档 + Stack Overflow）</td><td>❌ 文档较少，社区支持一般</td><td>✔️ 官方文档（但功能有限）</td></tr><tr><td><strong>安装方式</strong></td><td>✔️ NuGet 包或手动导入</td><td>✔️ 手动导入 DLL 或源码</td><td>✔️ Unity 内置</td></tr><tr><td><strong>AOT/IL2CPP 兼容性</strong></td><td>❌ 需要额外处理（<code>link.xml</code>）</td><td>✔️ 较好</td><td>✔️ 完美兼容</td></tr><tr><td><strong>体积</strong></td><td>❌ 较大（DLL 约 500KB）</td><td>✔️ 较小（DLL 约 100KB）</td><td>✔️ 零额外体积</td></tr><tr><td><strong>数据反序列化为数据集合</strong></td><td>✔️</td><td>✔️</td><td>❌不能直接将数据反序列化为数据集合(数组字典),要包裹一层</td></tr></tbody></table><h1 id="详细对比分析"><a class="markdownIt-Anchor" href="#详细对比分析"></a> 详细对比分析</h1><h2 id="功能丰富性"><a class="markdownIt-Anchor" href="#功能丰富性"></a> <strong>功能丰富性</strong></h2><p><strong>Newtonsoft.Json</strong>：<br /><strong>最强功能</strong>：支持多态类型、字典、私有字段、接口、循环引用处理、自定义转换器等。<br />适合复杂数据结构（如 RPG 游戏的存档、网络协议数据）。<br /><strong>LitJson</strong>：<br /><strong>中等功能</strong>：支持基础类型和简单对象，多态需要手动注册类型。<br />适合轻量级需求（如配置表解析）。<br /><strong>JsonUtility</strong>：<br /><strong>功能最弱</strong>：仅支持标记为 <code>[Serializable]</code> 的公共字段，不支持字典、多态、私有字段。<br />适合简单数据（如玩家位置、基础配置）。</p><h2 id="性能"><a class="markdownIt-Anchor" href="#性能"></a> <strong>性能</strong></h2><p><strong>JsonUtility</strong>：<br /><strong>最快</strong>：底层是 C++ 实现，无反射开销，适合高频调用（如每帧序列化）。<br />测试数据：序列化 10,000 个简单对象约 <strong>5ms</strong>。<br /><strong>LitJson</strong>：<br /><strong>次快</strong>：基于轻量级代码生成，反射开销较小。<br />测试数据：序列化 10,000 个简单对象约 <strong>20ms</strong>。<br /><strong>Newtonsoft.Json</strong>：<br /><strong>最慢</strong>：依赖反射和动态类型，性能较差。<br />测试数据：序列化 10,000 个简单对象约 <strong>100ms</strong>。</p><h2 id="unity-类型支持"><a class="markdownIt-Anchor" href="#unity-类型支持"></a> <strong>Unity 类型支持</strong></h2><p><strong>JsonUtility</strong>：原生支持 <code>Vector3</code>、<code>Color</code>、<code>Quaternion</code> 等 Unity 特有类型。<br /><strong>Newtonsoft.Json</strong> 和 <strong>LitJson</strong>：需要自定义转换器才能序列化 Unity 类型（如 <code>Vector3</code>）。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Newtonsoft.Json 自定义 Vector3 转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Vector3Converter</span> : <span class="title">JsonConverter</span>&lt;<span class="title">Vector3</span>&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, Vector3 <span class="keyword">value</span>, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        writer.WriteValue(<span class="string">$&quot;<span class="subst">&#123;<span class="keyword">value</span>.x&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.y&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.z&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Vector3 <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, Vector3 existingValue, <span class="built_in">bool</span> hasExistingValue, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="built_in">string</span>[] parts = ((<span class="built_in">string</span>)reader.Value).Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Vector3(<span class="built_in">float</span>.Parse(parts[<span class="number">0</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">1</span>]), <span class="built_in">float</span>.Parse(parts[<span class="number">2</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态支持继承类接口"><a class="markdownIt-Anchor" href="#多态支持继承类接口"></a> <strong>多态支持（继承类/接口）</strong></h2><p><strong>Newtonsoft.Json</strong>：通过 <code>TypeNameHandling.Auto</code> 自动添加类型信息。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>]</span><br><span class="line"><span class="keyword">public</span> List&lt;Character&gt; Characters; <span class="comment">// 支持 Enemy/NPC 派生类</span></span><br></pre></td></tr></table></figure><p><strong>LitJson</strong>：需手动注册子类型</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JsonMapper.RegisterExporter&lt;Enemy&gt;((obj, writer) =&gt; &#123; <span class="comment">/* 自定义导出逻辑 */</span> &#125;);</span><br></pre></td></tr></table></figure><p><strong>JsonUtility</strong>：不支持多态，反序列化时无法还原派生类。</p><h2 id="移动端兼容性"><a class="markdownIt-Anchor" href="#移动端兼容性"></a> <strong>移动端兼容性</strong></h2><p><strong>JsonUtility</strong>：完美支持 IL2CPP，无 AOT 问题。<br /><strong>LitJson</strong>：兼容性较好，但部分复杂类型可能需额外处理。<br /><strong>Newtonsoft.Json</strong>：在 IL2CPP 下可能因反射导致 AOT 错误，需通过 <code>link.xml</code> 保留类型：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- link.xml --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">linker</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">assembly</span> <span class="attr">fullname</span>=<span class="string">&quot;Newtonsoft.Json&quot;</span> <span class="attr">preserve</span>=<span class="string">&quot;all&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">linker</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="场景推荐"><a class="markdownIt-Anchor" href="#场景推荐"></a> <strong>场景推荐</strong></h1><p><strong>Newtonsoft.Json：</strong><br />需要处理复杂数据结构（如包含字典、多态类型的存档）。<br />需要高度定制序列化行为（如忽略空值、自定义字段名）。</p><p>典型场景：<strong>网络协议、复杂游戏存档、编辑器工具</strong>。</p><p><strong>LitJson：</strong><br />对性能有一定要求，但数据结构简单。<br />不想依赖 Unity 以外的库。</p><p>典型场景：<strong>配置表解析、轻量级网络通信。</strong></p><p><strong>JsonUtility：</strong><br />数据结构简单，且需要极致性能（如频繁序列化）。<br />项目要求零额外依赖。</p><p>典型场景：<strong>玩家位置同步、简单配置存储。</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson06_JsonUtility</span>和<span class="title">LitJson</span>对比 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点一 JsonUtlity和LitJson相同点</span></span><br><span class="line">        <span class="comment">//1.他们都是用于Json的序列化反序列化</span></span><br><span class="line">        <span class="comment">//2.Json文档编码格式必须是UTF-8</span></span><br><span class="line">        <span class="comment">//3.都是通过静态类进行方法调用</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点二 JsonUtlity和LitJson不同点</span></span><br><span class="line">        <span class="comment">//1.JsonUtlity是Unity自带，LitJson是第三方需要引用命名空间</span></span><br><span class="line">        <span class="comment">//2.JsonUtlity使用时自定义类需要加特性,LitJson不需要</span></span><br><span class="line">        <span class="comment">//3.JsonUtlity支持私有变量(加特性),LitJson不支持</span></span><br><span class="line">        <span class="comment">//4.JsonUtlity不支持字典,LitJson支持(但是键只能是字符串)</span></span><br><span class="line">        <span class="comment">//5.JsonUtlity不能直接将数据反序列化为数据集合(数组字典),要包裹一层,LitJson可以</span></span><br><span class="line">        <span class="comment">//6.JsonUtlity对自定义类不要求有无参构造，LitJson需要</span></span><br><span class="line">        <span class="comment">//7.JsonUtlity存储空对象时会存储默认值而不是null，LitJson会存null</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">        <span class="meta">#<span class="keyword">region</span> 知识点三 如何选择两者</span></span><br><span class="line">        <span class="comment">//根据实际需求</span></span><br><span class="line">        <span class="comment">//建议使用LitJson</span></span><br><span class="line">        <span class="comment">//原因：LitJson不用加特性，支持字典，支持直接反序列化为数据集合，存储null更准确</span></span><br><span class="line">        <span class="meta">#<span class="keyword">endregion</span></span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在 Unity 开发中，处理 JSON 数据时常用的三种库是 Newtonsoft.Json、LitJson 和 Unity 内置的 JsonUtility。以下是它们的详细对比，涵盖功能、性能、兼容性、优缺点及适用场景。&lt;/p&gt;
&lt;h1 id=&quot;核心对比表&quot;&gt;&lt;a cla</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>6.Newtonsoft.Json</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/</id>
    <published>2025-03-27T11:27:51.000Z</published>
    <updated>2025-03-27T12:39:58.045Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是-newtonsoft-json"><a class="markdownIt-Anchor" href="#什么是-newtonsoft-json"></a> 什么是 Newtonsoft Json</h1><p><a href="http://Json.NET">Json.NET</a>（官方名称 Newtonsoft.Json）是 .NET 生态中最流行的 JSON 处理库，支持复杂对象的序列化（对象转 JSON）和反序列化（JSON 转对象）。<br />Unity 内置的 JsonUtility 功能有限（如不支持字典、私有字段、多态类型等），而 Newtonsoft Json 提供了更灵活、更强大的功能。</p><h1 id="unity-中安装-newtonsoftjson"><a class="markdownIt-Anchor" href="#unity-中安装-newtonsoftjson"></a> Unity 中安装 Newtonsoft.Json</h1><p>通过 Unity Package Manager (UPM) 安装</p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/6.Newtonsoft.Json/file-20250327192905593.png" alt="" /></p><h1 id="基础用法"><a class="markdownIt-Anchor" href="#基础用法"></a> 基础用法</h1><p><strong>序列化与反序列化</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据类定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerData</span></span><br><span class="line">&#123;</span><br><span class="line">    [<span class="meta">JsonProperty(<span class="string">&quot;player_name&quot;</span>)</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;  <span class="comment">// 自定义名称</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Level;</span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">string</span>&gt; Inventory;</span><br><span class="line">    </span><br><span class="line">    [<span class="meta">JsonIgnore</span>]</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> SecretCode; <span class="comment">// 不会被序列化</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerData player = <span class="keyword">new</span> PlayerData</span><br><span class="line">        &#123;</span><br><span class="line">            Name = <span class="string">&quot;Alice&quot;</span>,</span><br><span class="line">            Level = <span class="number">10</span>,</span><br><span class="line">            Inventory = <span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Sword&quot;</span>, <span class="string">&quot;Potion&quot;</span> &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">string</span> json = JsonConvert.SerializeObject(player, Formatting.Indented);</span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/player.json&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        json = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/player.json&quot;</span>);</span><br><span class="line">        PlayerData player2 = JsonConvert.DeserializeObject&lt;PlayerData&gt;(json);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>序列化后的json文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;player_name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Alice&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Level&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Inventory&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;Sword&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;Potion&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>数据反序列化为数据集合</strong><br />1.解析 JSON 数组到 <code>List&lt;T&gt;</code> 集合。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Slime&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;HP&quot;</span><span class="punctuation">:</span> <span class="number">50</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="punctuation">&#123;</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Dragon&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;HP&quot;</span><span class="punctuation">:</span> <span class="number">1000</span> <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> HP;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// JSON 数据</span></span><br><span class="line"><span class="built_in">string</span> json = <span class="string">@&quot;[</span></span><br><span class="line"><span class="string">  &#123; &#x27;Name&#x27;: &#x27;Slime&#x27;, &#x27;HP&#x27;: 50 &#125;,</span></span><br><span class="line"><span class="string">  &#123; &#x27;Name&#x27;: &#x27;Dragon&#x27;, &#x27;HP&#x27;: 1000 &#125;</span></span><br><span class="line"><span class="string">]&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接反序列化为 List&lt;Enemy&gt;</span></span><br><span class="line">List&lt;Enemy&gt; enemies = JsonConvert.DeserializeObject&lt;List&lt;Enemy&gt;&gt;(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="keyword">foreach</span> (Enemy enemy <span class="keyword">in</span> enemies) &#123;</span><br><span class="line">    Debug.Log(<span class="string">$&quot;Name: <span class="subst">&#123;enemy.Name&#125;</span>, HP: <span class="subst">&#123;enemy.HP&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.解析 JSON 对象到 <code>Dictionary&lt;string, int&gt;</code>。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> json = <span class="string">@&quot;&#123; &#x27;Sword&#x27;: 10, &#x27;Potion&#x27;: 5, &#x27;Arrow&#x27;: 20 &#125;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化为 Dictionary&lt;string, int&gt;</span></span><br><span class="line">Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; inventory = JsonConvert.DeserializeObject&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;&gt;(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 输出结果</span></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">var</span> item <span class="keyword">in</span> inventory) &#123;</span><br><span class="line">    Debug.Log(<span class="string">$&quot;<span class="subst">&#123;item.Key&#125;</span>: <span class="subst">&#123;item.Value&#125;</span>&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.解析包含不同派生类对象的集合。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Characters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enemy, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Orc&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Damage&quot;</span><span class="punctuation">:</span> <span class="number">20</span> <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span> <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NPC, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Merchant&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;Dialogue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Welcome!&quot;</span> <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Character&gt; Characters; <span class="comment">// 基类集合</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Damage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NPC</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Dialogue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = <span class="string">&quot;...&quot;</span>; <span class="comment">// 上述 JSON 数据</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化时自动识别派生类</span></span><br><span class="line">GameData data = JsonConvert.DeserializeObject&lt;GameData&gt;(json, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto <span class="comment">// 关键设置</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查类型</span></span><br><span class="line">Debug.Log(data.Characters[<span class="number">0</span>].GetType()); <span class="comment">// 输出 Enemy</span></span><br><span class="line">Debug.Log(data.Characters[<span class="number">1</span>].GetType()); <span class="comment">// 输出 NPC</span></span><br></pre></td></tr></table></figure><h1 id="高级用法"><a class="markdownIt-Anchor" href="#高级用法"></a> 高级用法</h1><h2 id="处理默认值和空值"><a class="markdownIt-Anchor" href="#处理默认值和空值"></a> <strong>处理默认值和空值</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerStats</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Health = <span class="number">100</span>;    <span class="comment">// 默认值 100</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Mana = <span class="number">0</span>;        <span class="comment">// 默认值 0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Title = <span class="literal">null</span>; <span class="comment">// 默认值 null</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置序列化设置：忽略默认值和 null</span></span><br><span class="line"><span class="keyword">var</span> settings = <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    DefaultValueHandling = DefaultValueHandling.Ignore, <span class="comment">// 忽略类型的默认值（如 int 的 0）</span></span><br><span class="line">    NullValueHandling = NullValueHandling.Ignore         <span class="comment">// 忽略 null</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">PlayerStats stats = <span class="keyword">new</span> PlayerStats(); </span><br><span class="line">stats.Health = <span class="number">100</span>; <span class="comment">// 使用默认值</span></span><br><span class="line">stats.Mana = <span class="number">0</span>;     <span class="comment">// 使用默认值</span></span><br><span class="line">stats.Title = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(stats, Formatting.Indented, settings);</span><br><span class="line">Console.WriteLine(json);</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="punctuation">&#125;</span> <span class="comment">// 因为所有字段都是默认值或 null，全部被忽略</span></span><br></pre></td></tr></table></figure><p>修改数据后的输出：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stats.Health = <span class="number">80</span>;</span><br><span class="line">stats.Mana = <span class="number">50</span>;</span><br><span class="line">stats.Title = <span class="string">&quot;Hero&quot;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Health&quot;</span><span class="punctuation">:</span> <span class="number">80</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Mana&quot;</span><span class="punctuation">:</span> <span class="number">50</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;Title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Hero&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="多态类型支持"><a class="markdownIt-Anchor" href="#多态类型支持"></a> 多态类型支持</h2><p><strong>场景：序列化一个包含派生类对象的集合时，确保反序列化时能还原为正确的类型。</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"></span><br><span class="line">[<span class="meta">JsonObject(ItemTypeNameHandling = TypeNameHandling.Auto)</span>] <span class="comment">// 关键：为集合中的元素添加类型信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;Character&gt; Characters;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Enemy</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> Damage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NPC</span> : <span class="title">Character</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> Dialogue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 创建包含派生类对象的集合</span></span><br><span class="line"><span class="keyword">var</span> gameData = <span class="keyword">new</span> GameData &#123;</span><br><span class="line">    Characters = <span class="keyword">new</span> List&lt;Character&gt; &#123;</span><br><span class="line">        <span class="keyword">new</span> Enemy &#123; Name = <span class="string">&quot;Orc&quot;</span>, Damage = <span class="number">20</span> &#125;,</span><br><span class="line">        <span class="keyword">new</span> NPC &#123; Name = <span class="string">&quot;Merchant&quot;</span>, Dialogue = <span class="string">&quot;Welcome!&quot;</span> &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 序列化时保留类型信息</span></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(gameData, Formatting.Indented, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto <span class="comment">// 自动添加类型信息</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化时自动识别类型</span></span><br><span class="line">GameData loadedData = JsonConvert.DeserializeObject&lt;GameData&gt;(json, <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    TypeNameHandling = TypeNameHandling.Auto</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Console.WriteLine(loadedData.Characters[<span class="number">0</span>].GetType().Name); <span class="comment">// 输出 &quot;Enemy&quot;</span></span><br><span class="line">Console.WriteLine(loadedData.Characters[<span class="number">1</span>].GetType().Name); <span class="comment">// 输出 &quot;NPC&quot;</span></span><br></pre></td></tr></table></figure><p>生成的 JSON：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Characters&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Enemy, Assembly-CSharp&quot;</span><span class="punctuation">,</span> <span class="comment">// 类型信息</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Orc&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Damage&quot;</span><span class="punctuation">:</span> <span class="number">20</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;$type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NPC, Assembly-CSharp&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Merchant&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;Dialogue&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Welcome!&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="自定义转换器"><a class="markdownIt-Anchor" href="#自定义转换器"></a> 自定义转换器</h2><p>以 Unity 的 Vector3 为例<br /><strong>场景：<a href="http://Json.NET">Json.NET</a> 默认无法序列化 Unity 的 Vector3，需要自定义转换逻辑。</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> Newtonsoft.Json.Linq;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 编写自定义转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Vector3Converter</span> : <span class="title">JsonConverter</span>&lt;<span class="title">Vector3</span>&gt; &#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WriteJson</span>(<span class="params">JsonWriter writer, Vector3 <span class="keyword">value</span>, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 将 Vector3 序列化为字符串 &quot;x,y,z&quot;</span></span><br><span class="line">        writer.WriteValue(<span class="string">$&quot;<span class="subst">&#123;<span class="keyword">value</span>.x&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.y&#125;</span>,<span class="subst">&#123;<span class="keyword">value</span>.z&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> Vector3 <span class="title">ReadJson</span>(<span class="params">JsonReader reader, Type objectType, Vector3 existingValue, <span class="built_in">bool</span> hasExistingValue, JsonSerializer serializer</span>)</span> &#123;</span><br><span class="line">        <span class="comment">// 从字符串解析回 Vector3</span></span><br><span class="line">        <span class="built_in">string</span> str = (<span class="built_in">string</span>)reader.Value;</span><br><span class="line">        <span class="built_in">string</span>[] parts = str.Split(<span class="string">&#x27;,&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Vector3(</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">0</span>]),</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">1</span>]),</span><br><span class="line">            <span class="built_in">float</span>.Parse(parts[<span class="number">2</span>])</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 使用转换器</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransformData</span> &#123;</span><br><span class="line">    [<span class="meta">JsonConverter(typeof(Vector3Converter))</span>] <span class="comment">// 标记使用自定义转换器</span></span><br><span class="line">    <span class="keyword">public</span> Vector3 Position;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> Vector3 Rotation; <span class="comment">// 未标记，会尝试默认序列化（可能失败）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 测试</span></span><br><span class="line">TransformData data = <span class="keyword">new</span> TransformData &#123;</span><br><span class="line">    Position = <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>),</span><br><span class="line">    Rotation = <span class="keyword">new</span> Vector3(<span class="number">90</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局注册转换器（避免每个字段标记）</span></span><br><span class="line">JsonConvert.DefaultSettings = () =&gt; <span class="keyword">new</span> JsonSerializerSettings &#123;</span><br><span class="line">    Converters = &#123; <span class="keyword">new</span> Vector3Converter() &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> json = JsonConvert.SerializeObject(data, Formatting.Indented);</span><br><span class="line">Console.WriteLine(json);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 反序列化</span></span><br><span class="line">TransformData loadedData = JsonConvert.DeserializeObject&lt;TransformData&gt;(json);</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;Position&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1,2,3&quot;</span><span class="punctuation">,</span> <span class="comment">// 自定义转换器生效</span></span><br><span class="line">  <span class="attr">&quot;Rotation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span>         <span class="comment">// 未使用转换器，Json.NET 尝试默认序列化（可能抛出错误！）</span></span><br><span class="line">    <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">90.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;z&quot;</span><span class="punctuation">:</span> <span class="number">0.0</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h1 id="在-unity-中的注意事项"><a class="markdownIt-Anchor" href="#在-unity-中的注意事项"></a> 在 Unity 中的注意事项</h1><p><strong>性能问题</strong><br />Newtonsoft Json 比 JsonUtility 慢，尤其在移动设备上。<br />优化建议：<br />避免频繁序列化大型对象（如每帧调用）。<br />使用 StringBuilder 或缓存减少 GC 压力。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是-newtonsoft-json&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是-newtonsoft-json&quot;&gt;&lt;/a&gt; 什么是 Newtonsoft Json&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;http://Json.</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>5.LitJson</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/</id>
    <published>2025-03-27T08:53:20.000Z</published>
    <updated>2025-03-27T11:19:35.144Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>特性</th><th>JsonUtility</th><th>Newtonsoft</th><th>LitJSON</th></tr></thead><tbody><tr><td>安装方式</td><td>内置</td><td>Package</td><td>手动DLL</td></tr><tr><td>序列化速度</td><td>中等</td><td>较慢</td><td>最快</td></tr><tr><td>复杂类型支持</td><td>有限</td><td>完善</td><td>中等</td></tr><tr><td>移动端适用性</td><td>优秀</td><td>较重</td><td>最佳</td></tr><tr><td>自定义格式化</td><td>基础</td><td>强大</td><td>中等</td></tr><tr><td>Unity类型原生支持</td><td>优秀</td><td>需扩展</td><td>需转换</td></tr></tbody></table><h1 id="litjson是什么"><a class="markdownIt-Anchor" href="#litjson是什么"></a> LitJson是什么</h1><p>LitJson 是一个第三方库，用于处理Json的序列化和反序列化。它是C#编写的，体积小、速度快、易于使用。可以很容易地嵌入到我们的代码中，只需要将LitJson代码拷贝到工程中即可。</p><h1 id="获取litjson"><a class="markdownIt-Anchor" href="#获取litjson"></a> 获取LitJson</h1><p>导入方式<br />前往LitJson官网 <a href="https://litjson.net/">LitJSON - Home</a>下载LitJSON源码<br />将LitJSON文件夹放入Assets/Plugins<br />添加命名空间：<code>using LitJson;</code></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327165804148.png" alt="" /><br />只要代码 其他图片什么的都可以删掉<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327165906956.png" alt="" /></p><h1 id="使用litjson"><a class="markdownIt-Anchor" href="#使用litjson"></a> 使用LitJson</h1><p>相对JsonUtlity不需要加特性。<br />不能序列化私有变量。<br />支持字典类型，字典的键 建议都是字符串，因为Json的特点 Json中的键会加上双引号。<br />需要引用LitJson命名空间。<br />LitJson可以准确的保存null类型。<br />类结构需要无参构造函数，否则反序列化时报错。<br />字典虽然支持，但是键在使用为数值时会有问题，需要使用字符串类型。<br />LitJson可以直接读取数据集合<br />文本编码格式需要是UTF-8，否则无法加载</p><p>序列化</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 数据类定义</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Weapon</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> attack;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换为JSON</span></span><br><span class="line">Weapon sword = <span class="keyword">new</span> Weapon &#123; name = <span class="string">&quot;龙焰剑&quot;</span>, attack = <span class="number">150</span> &#125;;</span><br><span class="line"><span class="built_in">string</span> jsonStr = JsonMapper.ToJson(sword);     <span class="comment">// 这里也可以用JsonData来接受</span></span><br><span class="line">Debug.Log(jsonStr); <span class="comment">// 输出：&#123;&quot;name&quot;:&quot;龙焰剑&quot;,&quot;attack&quot;:150&#125;</span></span><br><span class="line"></span><br><span class="line">File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>, jsonStr);</span><br></pre></td></tr></table></figure><p>反序列化</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonStr = <span class="string">&quot;&#123;\&quot;name\&quot;:\&quot;治疗药剂\&quot;,\&quot;count\&quot;:3&#125;&quot;</span>;</span><br><span class="line"><span class="comment">// string jsonStr = File.ReadAllText(Application.persistentDataPath + &quot;/Test.json&quot;);</span></span><br><span class="line">JsonData data = JsonMapper.ToObject(jsonStr); </span><br><span class="line"><span class="comment">//通过泛型转换 更加的方便 建议使用这种方式 </span></span><br><span class="line">Weapon w = JsonMapper.ToObject&lt;Weapon&gt;(jsonStr);</span><br><span class="line"></span><br><span class="line">Item potion = <span class="keyword">new</span> Item &#123;</span><br><span class="line">    itemName = (<span class="built_in">string</span>)data[<span class="string">&quot;name&quot;</span>],</span><br><span class="line">    quantity = (<span class="built_in">int</span>)data[<span class="string">&quot;count&quot;</span>]</span><br><span class="line">&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>LitJson可以直接读取数据集合</strong><br />文本编码格式需要是UTF-8，否则无法加载</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> jsonStr = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">RoleInfo[] arr = JsonMapper.ToObject&lt;RoleInfo[]&gt;(jsonStr);</span><br><span class="line">List&lt;RoleInfo&gt; list = JsonMapper.ToObject&lt;List&lt;RoleInfo&gt;&gt;(jsonStr);</span><br></pre></td></tr></table></figure><p>可以直接读字典对象</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Dic.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name2&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name3&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name4&quot;</span><span class="punctuation">:</span><span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> jsonStr = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/Dic.json&quot;</span>);</span><br><span class="line">Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt; dic = JsonMapper.ToObject&lt;Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">int</span>&gt;&gt;(jsonStr);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>有一个玩家数据类,请为该类写一个方法结合LitJson知识点,完成对象的序列化和反序列化<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/5.LitJson/file-20250327191538288.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> LitJson;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id;   <span class="comment">// 物品ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> num;  <span class="comment">// 物品数量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item2</span>()</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item2</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInfo2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;                  <span class="comment">// 玩家姓名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> atk;                      <span class="comment">// 攻击力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> def;                      <span class="comment">// 防御力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;              <span class="comment">// 移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> roundSpeed;            <span class="comment">// 回合速度</span></span><br><span class="line">    <span class="keyword">public</span> Item weapon;                   <span class="comment">// 武器</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; listInt;            <span class="comment">// 整型列表</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Item2&gt; itemList;         <span class="comment">// 物品列表</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, Item2&gt; itemDic2;  <span class="comment">// 字典</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 无参构造方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PlayerInfo2</span>()</span> &#123; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson05_</span>练习题 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 创建玩家信息对象</span></span><br><span class="line">        PlayerInfo2 player = <span class="keyword">new</span> PlayerInfo2();</span><br><span class="line">        player.name = <span class="string">&quot;唐老狮&quot;</span>;</span><br><span class="line">        player.atk = <span class="number">11</span>;</span><br><span class="line">        player.def = <span class="number">5</span>;</span><br><span class="line">        player.moveSpeed = <span class="number">20.5f</span>;</span><br><span class="line">        player.roundSpeed = <span class="number">21.4</span>;</span><br><span class="line">        player.weapon = <span class="literal">null</span>;</span><br><span class="line">        player.listInt = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line">        player.itemList = <span class="keyword">new</span> List&lt;Item2&gt;() &#123; <span class="keyword">new</span> Item2(<span class="number">1</span>, <span class="number">99</span>), <span class="keyword">new</span> Item2(<span class="number">2</span>, <span class="number">44</span>) &#125;;</span><br><span class="line">        player.itemDic2 = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, Item2&gt;() &#123; &#123; <span class="string">&quot;1&quot;</span>, <span class="keyword">new</span> Item2(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="string">&quot;2&quot;</span>, <span class="keyword">new</span> Item2(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        SaveData(player, <span class="string">&quot;PlayerInfo2&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        PlayerInfo2 p = LoadData(<span class="string">&quot;PlayerInfo2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params">PlayerInfo2 data, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = JsonMapper.ToJson(data);</span><br><span class="line"></span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将JSON字符串写入指定路径的文件中</span></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>, jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlayerInfo2 <span class="title">LoadData</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 读取JSON文件内容</span></span><br><span class="line">        <span class="built_in">string</span> jsonStr = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将JSON字符串反序列化为对象</span></span><br><span class="line">        <span class="keyword">return</span> JsonMapper.ToObject&lt;PlayerInfo2&gt;(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;特性&lt;/th&gt;
&lt;th&gt;JsonUtility&lt;/th&gt;
&lt;th&gt;Newtonsoft&lt;/th&gt;
&lt;th&gt;LitJSON&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;安装方式&lt;/td&gt;
&lt;td&gt;内置&lt;</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>4.JsonUtility</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/</id>
    <published>2025-03-27T07:44:07.000Z</published>
    <updated>2025-03-27T11:02:18.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="jsonutlity是什么"><a class="markdownIt-Anchor" href="#jsonutlity是什么"></a> JsonUtlity是什么</h1><p>JsonUtlity 是Unity自带的用于解析Json的公共类。<br />Unity内置了<code>JsonUtility</code>，虽然功能相对简单，但对于大多数基本需求已经足够。如果需要更强大的功能，可以使用第三方库如<code>Newtonsoft.Json</code>。</p><p>JsonUtlity可以:<br />将内存中对象序列化为Json格式的字符串。<br />将Json字符串反序列化为类对象。</p><h1 id="在文件中存读字符串"><a class="markdownIt-Anchor" href="#在文件中存读字符串"></a> 在文件中存读字符串</h1><p>File.WriteAllText方法 存储字符串到指定路径文件中</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//File类中的WriteAllText方法 存储字符串到指定路径文件中</span></span><br><span class="line"><span class="comment">//第一个参数 填写的是 存储的路径</span></span><br><span class="line"><span class="comment">//第二个参数 填写的是 存储的字符串内容</span></span><br><span class="line"><span class="comment">//注意：第一个参数 必须是存在的文件路径 如果没有对应文件夹 会报错</span></span><br><span class="line">File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>, <span class="string">&quot;存储的json文件&quot;</span>);</span><br><span class="line">print(Application.persistentDataPath);</span><br></pre></td></tr></table></figure><p>File.ReadAllText方法 在指定路径文件中读取字符串</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//File类中的ReadAllText方法 在指定路径文件中读取字符串</span></span><br><span class="line"><span class="built_in">string</span> str = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/Test.json&quot;</span>);</span><br><span class="line">print(str);</span><br></pre></td></tr></table></figure><h1 id="使用jsonutility序列化"><a class="markdownIt-Anchor" href="#使用jsonutility序列化"></a> 使用JsonUtility序列化</h1><p><strong>注意</strong><br />float序列化时看起来会有一些误差。<br />自定义类需要加上序列化特性<code>[System.Serializable]</code>。<br />想要序列化私有变量，需要加上特性<code>[SerializeField]</code>。<br />JsonUtility不支持字典。<br />JsonUtlity存储null对象不会是null，而是默认值的数据。<br />如果Json中数据少了，读取到内存中类对象中时不会报错。<br />JsonUtlity不能直接将数据反序列化为数据集合。<br />Json文档编码格式必须是UTF-8。</p><p>File存读字符串的方法ReadAllText和WriteAllText。<br />JsonUtlity提供的序列化反序列化方法ToJson和FromJson。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GameData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> playerName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> level;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> health;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 序列化</span></span><br><span class="line">        GameData data = <span class="keyword">new</span> GameData();</span><br><span class="line">        data.playerName = <span class="string">&quot;Player1&quot;</span>;</span><br><span class="line">        data.level = <span class="number">5</span>;</span><br><span class="line">        data.health = <span class="number">100.0f</span>;</span><br><span class="line">        <span class="built_in">string</span> json = JsonUtility.ToJson(data);</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/savefile.json&quot;</span>, json);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 反序列化</span></span><br><span class="line">        <span class="built_in">string</span> path = Application.persistentDataPath + <span class="string">&quot;/savefile.json&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (File.Exists(path))</span><br><span class="line">        &#123;</span><br><span class="line">            json = File.ReadAllText(path);</span><br><span class="line">            GameData loadedData = JsonUtility.FromJson&lt;GameData&gt;(json);</span><br><span class="line">            Debug.Log(loadedData.playerName);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JsonUtlity无法直接读取数据集合，比如直接读取List或数组会报错。</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//JsonUtlity无法直接读取数据集合 比如直接读取List或数组 会报错</span></span><br><span class="line"><span class="built_in">string</span> jsonStr1 = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">List&lt;RoleInfo&gt; roleInfoList = JsonUtility.FromJson&lt;List&lt;RoleInfo&gt;&gt;(jsonStr1);<span class="comment">//报错</span></span><br></pre></td></tr></table></figure><p>可以外层套<code>&#123;&#125;</code>来做就不会报错</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// RoleInfo2.json</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane3&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">15</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane4&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;hp&quot;</span><span class="punctuation">:</span><span class="number">6</span><span class="punctuation">,</span><span class="attr">&quot;speed&quot;</span><span class="punctuation">:</span><span class="number">5</span><span class="punctuation">,</span><span class="attr">&quot;volume&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span><span class="attr">&quot;resName&quot;</span><span class="punctuation">:</span><span class="string">&quot;Airplane/Airplane5&quot;</span><span class="punctuation">,</span><span class="attr">&quot;scale&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> speed;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> volume;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> resName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> scale;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RoleData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> List&lt;RoleInfo&gt; list;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">string</span> jsonStr2 = File.ReadAllText(Application.streamingAssetsPath + <span class="string">&quot;/RoleInfo2.json&quot;</span>);</span><br><span class="line">print(jsonStr2);</span><br><span class="line">RoleData data = JsonUtility.FromJson&lt;RoleData&gt;(jsonStr2);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>有一个玩家数据类,为该类写一个方法结合JsonUtility知识点,完成对象的序列化和反序列化<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/4.JsonUtility/file-20250327164829008.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 物品类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">[<span class="meta">System.Serializable</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Item</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> id;       <span class="comment">// 物品ID</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> num;      <span class="comment">// 物品数量</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Item</span>(<span class="params"><span class="built_in">int</span> id, <span class="built_in">int</span> num</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.num = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 玩家信息类</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerInfo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> name;                      <span class="comment">// 玩家姓名</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> atk;                          <span class="comment">// 玩家攻击力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> def;                          <span class="comment">// 玩家防御力</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed;                  <span class="comment">// 玩家移动速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">double</span> roundSpeed;                <span class="comment">// 玩家旋转速度</span></span><br><span class="line">    <span class="keyword">public</span> Item weapon;                      <span class="comment">// 玩家武器信息</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;<span class="built_in">int</span>&gt; listInt;                <span class="comment">// 整型列表</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Item&gt; itemList;              <span class="comment">// 物品列表</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">int</span>, Item&gt; itemDic;    <span class="comment">// 物品字典，以物品ID作为键</span></span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, Item&gt; itemDic2;<span class="comment">// 物品字典，以字符串型的物品ID作为键</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> privateI = <span class="number">1</span>;                <span class="comment">// 私有整数字段</span></span><br><span class="line">    [<span class="meta">SerializeField</span>]</span><br><span class="line">    <span class="keyword">protected</span> <span class="built_in">int</span> protectedI = <span class="number">2</span>;            <span class="comment">// 受保护整数字段</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson04_</span>练习题 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        PlayerInfo player = <span class="keyword">new</span> PlayerInfo();</span><br><span class="line">        player.name = <span class="string">&quot;老狮&quot;</span>;</span><br><span class="line">        player.atk = <span class="number">11</span>;</span><br><span class="line">        player.def = <span class="number">5</span>;</span><br><span class="line">        player.moveSpeed = <span class="number">20.5f</span>;</span><br><span class="line">        player.roundSpeed = <span class="number">21.4f</span>;</span><br><span class="line"></span><br><span class="line">        player.weapon = <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        player.listInt = <span class="keyword">new</span> List&lt;<span class="built_in">int</span>&gt;() &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span> &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemList = <span class="keyword">new</span> List&lt;Item&gt;() &#123; <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">99</span>), <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">44</span>) &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemDic = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">int</span>, Item&gt;() &#123; &#123; <span class="number">1</span>, <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="number">2</span>, <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        player.itemDic2 = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, Item&gt;() &#123; &#123; <span class="string">&quot;1&quot;</span>, <span class="keyword">new</span> Item(<span class="number">1</span>, <span class="number">12</span>) &#125;, &#123; <span class="string">&quot;2&quot;</span>, <span class="keyword">new</span> Item(<span class="number">2</span>, <span class="number">22</span>) &#125; &#125;;</span><br><span class="line"></span><br><span class="line">        SaveData(player, <span class="string">&quot;PlayerInfo&quot;</span>);</span><br><span class="line"></span><br><span class="line">        PlayerInfo player2 = LoadData(<span class="string">&quot;PlayerInfo&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveData</span>(<span class="params">PlayerInfo player, <span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = JsonUtility.ToJson(player);</span><br><span class="line"></span><br><span class="line">        print(Application.persistentDataPath);</span><br><span class="line"></span><br><span class="line">        File.WriteAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>, jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PlayerInfo <span class="title">LoadData</span>(<span class="params"><span class="built_in">string</span> fileName</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> jsonStr = File.ReadAllText(Application.persistentDataPath + <span class="string">&quot;/&quot;</span> + fileName + <span class="string">&quot;.json&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> JsonUtility.FromJson&lt;PlayerInfo&gt;(jsonStr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;jsonutlity是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#jsonutlity是什么&quot;&gt;&lt;/a&gt; JsonUtlity是什么&lt;/h1&gt;
&lt;p&gt;JsonUtlity 是Unity自带的用于解析Json的公共类。&lt;br /&gt;</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>3.Excel转Json</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/</id>
    <published>2025-03-27T07:25:57.000Z</published>
    <updated>2025-03-27T07:35:09.697Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152651887.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152704790.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152918741.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152943694.png" alt="" /><br /><a href="https://www.bejson.com/json/col2json/">在线Excel、CSV转JSON格式-BeJSON.com</a></p><p>直接复制excel表到网页上，点击转换<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153426394.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153306000.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327153506162.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/3.Excel%E8%BD%ACJson/file-20250327152651887.p</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>2.Json基本语法</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</id>
    <published>2025-03-27T07:06:35.000Z</published>
    <updated>2025-03-27T07:24:13.969Z</updated>
    
    <content type="html"><![CDATA[<p><strong>数据类型</strong><br />JSON支持以下几种数据类型：</p><ul><li><strong>字符串</strong>：<code>&quot;name&quot;: &quot;Unity&quot;</code></li><li><strong>数字</strong>：<code>&quot;version&quot;: 2021.3</code></li><li><strong>布尔值</strong>：<code>&quot;isActive&quot;: true</code></li><li><strong>数组</strong>：<code>&quot;features&quot;: [&quot;2D&quot;, &quot;3D&quot;, &quot;VR&quot;]</code></li><li><strong>对象</strong>：<code>&quot;settings&quot;: &#123;&quot;resolution&quot;: &quot;1920x1080&quot;, &quot;fullscreen&quot;: true&#125;</code></li><li><strong>null</strong>：<code>&quot;error&quot;: null</code><br /><strong>JSON对象</strong><br />JSON对象由大括号 <code>&#123;&#125;</code> 包裹，键值对用逗号分隔。键名必须用双引号括起来，值可以是任意JSON数据类型。</li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unity&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">2021.3</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><strong>JSON数组</strong><br />JSON数组由中括号 <code>[]</code> 包裹，元素用逗号分隔。数组中的元素可以是任意JSON数据类型。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">[</span><span class="string">&quot;2D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;3D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VR&quot;</span><span class="punctuation">]</span></span><br></pre></td></tr></table></figure><p><strong>嵌套结构</strong><br />JSON支持对象和数组的嵌套，可以在对象中嵌套数组，数组中也可以嵌套对象。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Unity&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;features&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;2D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;3D&quot;</span><span class="punctuation">,</span> <span class="string">&quot;VR&quot;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;settings&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;resolution&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1920x1080&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;fullscreen&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p>Json格式是一种键值对结构<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151901992.png" alt="" /></p><p>语法规则<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151846824.png" alt="" /></p><p>Json数据和类对象的对应关系<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327151830820.png" alt="" /></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//大括号包裹的代表一个对象</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">//冒号 代表的是 键值对的对应关系</span></span><br><span class="line">    <span class="comment">//逗号 就是分割成员变量的间隔符</span></span><br><span class="line">    <span class="comment">//Json当中的键一定要用 双引号包裹</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;nihao&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//用于测试的 浮点类型 是支持浮点数的</span></span><br><span class="line">    <span class="attr">&quot;testF&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//中括号代表数组</span></span><br><span class="line">    <span class="attr">&quot;ids&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;students&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小红&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">false</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小明&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">8</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;小强&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span><span class="number">7</span><span class="punctuation">,</span> <span class="attr">&quot;sex&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;home&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;address&quot;</span><span class="punctuation">:</span><span class="string">&quot;成都&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;street&quot;</span><span class="punctuation">:</span><span class="string">&quot;春熙路&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;son&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">null</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">//字典的话 键会变成双引号 以后转换时要注意！！！</span></span><br><span class="line">    <span class="attr">&quot;dic&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;1&quot;</span><span class="punctuation">:</span><span class="string">&quot;123&quot;</span><span class="punctuation">,</span> <span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="string">&quot;234&quot;</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327152009320.png" alt="" /></p><p>请用Json语法描述一个玩家对象类，结构如下图<br /><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/2.Json%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/file-20250327152350050.png" alt="" /></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span><span class="string">&quot;黄先生&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;atk&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;def&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;moveSpeed&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;roundSpeed&quot;</span><span class="punctuation">:</span><span class="number">1.4</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;weapon&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="comment">//如果没有武器 可以直接值为null</span></span><br><span class="line">    <span class="attr">&quot;listInt&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">2</span><span class="punctuation">,</span><span class="number">3</span><span class="punctuation">,</span><span class="number">4</span><span class="punctuation">,</span><span class="number">5</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemList&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">99</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">4</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">55</span><span class="punctuation">&#125;</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemDic&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span> <span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;3&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">3</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">10</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;itemDic2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;2&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;id&quot;</span><span class="punctuation">:</span><span class="number">2</span><span class="punctuation">,</span> <span class="attr">&quot;num&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">&#125;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;privateI&quot;</span><span class="punctuation">:</span><span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;protectedI&quot;</span><span class="punctuation">:</span><span class="number">99</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;数据类型&lt;/strong&gt;&lt;br /&gt;
JSON支持以下几种数据类型：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;字符串&lt;/strong&gt;：&lt;code&gt;&amp;quot;name&amp;quot;: &amp;quot;Unity&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>1.Json基础知识概述</title>
    <link href="http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-27T06:50:35.000Z</published>
    <updated>2025-03-27T12:41:50.441Z</updated>
    
    <content type="html"><![CDATA[<ul><li><strong>什么是JSON？</strong><ul><li>JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。</li><li>易于人阅读和编写，同时也易于机器解析和生成。</li></ul></li><li><strong>JSON的用途</strong><ul><li>数据交换、配置文件、API通信等。</li></ul></li><li><strong>JSON的基本结构</strong><ul><li>键值对、数组、嵌套对象。</li></ul></li></ul><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145109995.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145121243.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145136272.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145149573.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145203555.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145241866.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145257070.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327145303913.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204106017.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204113552.png" alt="" /></p><p><img src="/2025/03/27/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/1.Json%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E6%A6%82%E8%BF%B0/file-20250327204140111.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;什么是JSON？&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;JSON（JavaScript Object Notation）是一种轻量级的数据交换格式。&lt;/li&gt;
&lt;li&gt;易于人阅读和编写，同时也易于机器解析和生成。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
</summary>
      
    
    
    
    <category term="数据" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/Json/"/>
    
    
    <category term="数据" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE/"/>
    
    <category term="数据持久化" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96/"/>
    
    <category term="Json" scheme="http://example.com/tags/Json/"/>
    
  </entry>
  
  <entry>
    <title>68.unity核心总结</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/</id>
    <published>2025-03-23T15:26:43.000Z</published>
    <updated>2025-03-24T13:17:09.471Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232646095.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232759993.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/file-20250323232818871.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/68.unity%E6%A0%B8%E5%BF%83%E6%80%BB%E7%BB%93/fil</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>67.导航网格动态障碍组件</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-23T15:05:25.000Z</published>
    <updated>2025-03-23T15:25:41.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导航网格动态障碍组件用来干啥"><a class="markdownIt-Anchor" href="#导航网格动态障碍组件用来干啥"></a> 导航网格动态障碍组件用来干啥</h1><p>在游戏中常常会有这样的一个功能，场景中有一道门，如果这道门没有被破坏是不能自动导航到门后场景的。<br />只有当这道门被破坏了，才可以通过此处前往下一场景。<br />而类似这样的物体本身是不需要进行寻路的，所以没有必要为它添加NavMeshAgent脚本。<br />这时就会使用<strong>动态障碍</strong>组件实现该功能。</p><h1 id="导航动态障碍物组件的使用"><a class="markdownIt-Anchor" href="#导航动态障碍物组件的使用"></a> 导航动态障碍物组件的使用</h1><p>先创建地形环境<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323230726709.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323230744722.png" alt="" /></p><p><strong>为需要进行动态阻挡的对象添加NavMeshObstacle组件</strong><br />创建一个立方体作为障碍物，目标是障碍物被销毁才能通过桥。立方体添加NavMeshObstacle组件<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323231002314.png" alt="" /></p><p><strong>设置相关参数</strong></p><p><strong>代码逻辑控制其的移动或者显隐</strong>，让代理对象看看要不要通过某些区域或者不然通过某些区域</p><h1 id="导航网格动态障碍物组件参数"><a class="markdownIt-Anchor" href="#导航网格动态障碍物组件参数"></a> 导航网格动态障碍物组件参数</h1><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%89%A9%E7%BB%84%E4%BB%B6.png" alt="" /></p><h2 id="shape-动态障碍的形状"><a class="markdownIt-Anchor" href="#shape-动态障碍的形状"></a> Shape 动态障碍的形状</h2><p>Capsule：胶囊<br />Box：盒装</p><h2 id="carve是否开启雕刻功能"><a class="markdownIt-Anchor" href="#carve是否开启雕刻功能"></a> Carve：是否开启雕刻功能</h2><p>开启后，障碍物会在导航网格中挖一个孔，所谓挖孔就是会生成对应的网格信息，认为这篇区域无法前往<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323231505682.png" alt="" /></p><p>取消Carve后<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323231538389.png" alt="" /></p><p>如果动态障碍物是固定不动的，建议开启，比如阻碍物门木桶栅栏等等<br />如果动态障碍物是频繁移动的，建议不开启该功能，比如汽车和玩家</p><h3 id="move-threshold移动阈值"><a class="markdownIt-Anchor" href="#move-threshold移动阈值"></a> Move Threshold：移动阈值</h3><p>当障碍物移动超过该距离时，会认为其为移动状态，会更新移动的孔</p><h3 id="time-to-stationary-静止时间"><a class="markdownIt-Anchor" href="#time-to-stationary-静止时间"></a> Time To Stationary 静止时间</h3><p>障碍物作为静止状态需要等待的时间<br />单位为秒 当静止时间超过该值会认为真正静止了</p><h3 id="carve-only-stationary仅在静止时切割"><a class="markdownIt-Anchor" href="#carve-only-stationary仅在静止时切割"></a> Carve Only Stationary：仅在静止时切割</h3><p>只有在静止状态时才会计算孔</p><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在场景上加入一个阻碍玩家前进的动态障碍物，玩家摧毁它才可以前往下一个区域</p><p>创建两个地形，中间的桥。桥上添加一个立方体作为障碍物，障碍物添加NavMeshObstacle组件。注意要打开雕刻功能。打开后因为中间寻路网格断开了，玩家会自动停止不播跑步动画了。假如是移动的怪物就不应该打开雕刻功能，注意玩家可以绕开怪物走。<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323231951540.png" alt="" /></p><p>给障碍物立方体修改成Wall层级，在脚本中添加鼠标右键销毁障碍物的代码<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/67.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%8A%A8%E6%80%81%E9%9A%9C%E7%A2%8D%E7%BB%84%E4%BB%B6/file-20250323232420547.png" alt="" /></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( Input.GetMouseButtonDown(<span class="number">0</span>) )</span><br><span class="line">&#123;</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    <span class="keyword">if</span>(Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit))</span><br><span class="line">    &#123;</span><br><span class="line">        navMeshAgent.SetDestination(hit.point);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">    RaycastHit hit;</span><br><span class="line">    <span class="keyword">if</span> (Physics.Raycast(</span><br><span class="line">            Camera.main.ScreenPointToRay(Input.mousePosition), </span><br><span class="line">            <span class="keyword">out</span> hit, </span><br><span class="line">            <span class="number">1000</span>, </span><br><span class="line">            <span class="number">1</span> &lt;&lt; LayerMask.NameToLayer(<span class="string">&quot;Wall&quot;</span>)</span><br><span class="line">        ) <span class="comment">// 从主摄像机的鼠标位置发出一条射线，并在1000米内检测到属于Wall层的碰撞体</span></span><br><span class="line">    ) </span><br><span class="line">    &#123;</span><br><span class="line">        hit.collider.gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导航网格动态障碍组件用来干啥&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导航网格动态障碍组件用来干啥&quot;&gt;&lt;/a&gt; 导航网格动态障碍组件用来干啥&lt;/h1&gt;
&lt;p&gt;在游戏中常常会有这样的一个功能，场景中有一道门，如果这道门没有被破坏是不</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="导航系统" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>66.导航网格外连接组件</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-23T14:47:32.000Z</published>
    <updated>2025-03-23T15:11:50.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="offmeshlink网格外连接是什么"><a class="markdownIt-Anchor" href="#offmeshlink网格外连接是什么"></a> OffMeshLink网格外连接是什么</h1><p>我们在烘焙地形数据的时候，可以生成网格外连接，但是它是满足条件的都会生成，而且是要在编辑模式下生成。</p><p>如果我们只希望两个未连接的平面之间只有有限条连接路径可以跳跃过去，并且运行时可以动态添加，就可以使用网格外连接组件，达到“指哪打哪”的效果。</p><h1 id="网格外连接组件使用"><a class="markdownIt-Anchor" href="#网格外连接组件使用"></a> 网格外连接组件使用</h1><p>使用两个对象作为两个平面之间的连接点（起点和终点）创建两个对象作为起点和终点</p><p>先搭建环境<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/file-20250323225027967.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/file-20250323225047026.png" alt="" /></p><p><strong>使用两个对象作为两个平面之间的连接点（起点和终点）创建两个对象作为起点和终点</strong><br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/file-20250323225244729.png" alt="" /></p><p><strong>添加Off Mesh Link脚本进行关联</strong><br />这个脚本添加到<strong>哪个对象上都可以</strong>，可以添加到新建空对象，也可以是起点或终点对象<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/file-20250323225344801.png" alt="" /></p><p><strong>设置Off Mesh Link脚本参数</strong></p><h1 id="网格外连接组件参数"><a class="markdownIt-Anchor" href="#网格外连接组件参数"></a> 网格外连接组件参数</h1><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/66.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6/%E7%BD%91%E6%A0%BC%E5%A4%96%E8%BF%9E%E6%8E%A5%E7%BB%84%E4%BB%B6.png" alt="" /></p><h2 id="start-起始点"><a class="markdownIt-Anchor" href="#start-起始点"></a> Start 起始点</h2><h2 id="end-结束点"><a class="markdownIt-Anchor" href="#end-结束点"></a> End 结束点</h2><h2 id="cost-override-覆盖消耗值"><a class="markdownIt-Anchor" href="#cost-override-覆盖消耗值"></a> Cost Override* 覆盖消耗值</h2><p>负数或0则使用所属Area区域中的寻路消耗值<br />如果为正数，则使用Area区域寻路消耗值 * 正数代表该连接点的寻路消耗<br />相当于我们可以自定义连接点的寻路消耗<br />主要用来解决当有&quot;步行&quot;和连接点都可以到达某一个目标时，希望优先选择步行区域，但是步行路径明显更远时修改该值</p><h2 id="bi-directional-是否开启双向连接点"><a class="markdownIt-Anchor" href="#bi-directional-是否开启双向连接点"></a> Bi Directional 是否开启双向连接点</h2><p>开启后可以从Start到End，反之也可以<br />如果关闭，则只能Start到End</p><h2 id="activated-是否启用该连接点"><a class="markdownIt-Anchor" href="#activated-是否启用该连接点"></a> Activated 是否启用该连接点</h2><p>如果关闭，则自动寻路时相当于失效</p><h2 id="auto-update-positions-是否自动更新位置"><a class="markdownIt-Anchor" href="#auto-update-positions-是否自动更新位置"></a> Auto Update Positions 是否自动更新位置</h2><p>如果启用 当<strong>开始和结束</strong>位置改变时，导航网格也将更新<br />如果不启用，即使改变了开始结束位置，也会按照刚开始的位置进行计算</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( Input.GetMouseButtonDown(<span class="number">0</span>) )</span><br><span class="line">        &#123;</span><br><span class="line">            RaycastHit hit;</span><br><span class="line">            <span class="keyword">if</span>(Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit))</span><br><span class="line">            &#123;</span><br><span class="line">                navMeshAgent.SetDestination(hit.point);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;offmeshlink网格外连接是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#offmeshlink网格外连接是什么&quot;&gt;&lt;/a&gt; OffMeshLink网格外连接是什么&lt;/h1&gt;
&lt;p&gt;我们在烘焙地形数据的时候，可以生成网格外连</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="导航系统" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>65.导航网格寻路组件</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/</id>
    <published>2025-03-23T12:57:21.000Z</published>
    <updated>2025-03-23T14:46:10.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导航网格寻路组件是用来干什么的"><a class="markdownIt-Anchor" href="#导航网格寻路组件是用来干什么的"></a> 导航网格寻路组件是用来干什么的</h1><p>NavMeshAgent<br />通过上节课导航网格生成知识点的学习，我们已经准备好了地形相关的数据，知道地形上哪些地方可以到达，哪些不能。那么寻路组件的作用就是帮助我们让角色可以在地形上准确的移动起来。</p><p>寻路组件的本质就是根据烘焙出的寻路网格信息，通过基于A星寻路的算法计算出行进路径让我们在该路径上移动起来。</p><h1 id="导航网格寻路组件参数"><a class="markdownIt-Anchor" href="#导航网格寻路组件参数"></a> 导航网格寻路组件参数</h1><p>先准备一个玩家，然后添加Nav Mesh Agent导航网格寻路组件<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323210118185.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323210438027.png" alt="" /></p><h2 id="agent-type-代理类型"><a class="markdownIt-Anchor" href="#agent-type-代理类型"></a> Agent Type 代理类型</h2><p>配合Agents页签使用</p><h2 id="base-offset-基础偏移值"><a class="markdownIt-Anchor" href="#base-offset-基础偏移值"></a> Base Offset 基础偏移值</h2><p>相对对象轴心点的高度偏移<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323210639807.png" alt="" /></p><h2 id="steering-移动设置"><a class="markdownIt-Anchor" href="#steering-移动设置"></a> Steering 移动设置</h2><p>Speed 寻路时的最大移动速度（世界单位/秒）</p><p>Angular Speed 寻路时转身的最大旋转速度（度/秒）</p><p>Acceleration 最大加速度（世界单位/平方秒）</p><p>Stopping Distance 当靠近目标点多少距离时，停止运动</p><p>Auto Braking 自动制动（减速） 启用后，当到达目标时将减速，如果存在连续移动（比如巡逻移动）建议不要开启该选项</p><h2 id="obstacle-avoidance-避障设置"><a class="markdownIt-Anchor" href="#obstacle-avoidance-避障设置"></a> Obstacle Avoidance 避障设置</h2><h3 id="radius-半径"><a class="markdownIt-Anchor" href="#radius-半径"></a> Radius 半径</h3><p>用于计算障碍物和其它寻路对象之间的碰撞<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323211121146.png" alt="" /></p><h3 id="height-高度"><a class="markdownIt-Anchor" href="#height-高度"></a> Height 高度</h3><p>通过头顶障碍物时用于计算高度间隙使用</p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323211204648.png" alt="" /></p><h3 id="quality-障碍躲避品质"><a class="markdownIt-Anchor" href="#quality-障碍躲避品质"></a> Quality 障碍躲避品质</h3><p>越高躲避障碍越准确，但是性能消耗较大，如果不想主动避开其它动态障碍，可以设置为无，则只会解析碰撞</p><h3 id="priority-优先级"><a class="markdownIt-Anchor" href="#priority-优先级"></a> Priority 优先级</h3><p>0~99， 避障时，数字较小的障碍物表示较高的优先级 优先级低的会忽略避障</p><h2 id="path-finding-路径寻找规则"><a class="markdownIt-Anchor" href="#path-finding-路径寻找规则"></a> Path Finding 路径寻找规则</h2><h3 id="auto-traverse-offmesh-link-自动通过分离网格链接"><a class="markdownIt-Anchor" href="#auto-traverse-offmesh-link-自动通过分离网格链接"></a> Auto Traverse OffMesh Link 自动通过分离网格链接</h3><p>是否开启自动遍历网格外的其它网格连接<br />如果要自定义判断，则关闭此功能</p><h3 id="auto-repath-自动重新寻路"><a class="markdownIt-Anchor" href="#auto-repath-自动重新寻路"></a> Auto Repath 自动重新寻路</h3><p>如果开启，当到达路径后段时会再次尝试寻路，当没有到达目标的路径时，会生成一条到达与目标位置最近的可达点</p><h3 id="area-mask-区域遮罩"><a class="markdownIt-Anchor" href="#area-mask-区域遮罩"></a> Area Mask 区域遮罩</h3><p>寻路时，考虑的区域 如果寻路时不想考虑某些区域，则取消选中<br />塔防游戏中常见的功能</p><h1 id="代码设置"><a class="markdownIt-Anchor" href="#代码设置"></a> 代码设置</h1><p>使用网格相关脚本需要引用命名 <a href="http://UnityEngine.AI">UnityEngine.AI</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> NavMeshAgent navMeshAgent;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    navMeshAgent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用内容"><a class="markdownIt-Anchor" href="#常用内容"></a> 常用内容</h2><p><strong>NavMeshAgent.SetDestination方法 自动寻路设置目标点传入Vector3变量</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navMeshAgent.SetDestination()</span><br></pre></td></tr></table></figure><p><strong>NavMeshAgent.isStopped变量 停止寻路</strong></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">navMeshAgent.isStopped = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        RaycastHit hit; <span class="comment">// 存储射线检测的结果</span></span><br><span class="line">        <span class="keyword">if</span> (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit)) <span class="comment">// 如果从主摄像机的鼠标位置发出一条射线，并检测到碰撞体</span></span><br><span class="line">        &#123;</span><br><span class="line">            print(hit.collider.name);</span><br><span class="line">            navMeshAgent.isStopped = <span class="literal">false</span>;  <span class="comment">// 开启寻路</span></span><br><span class="line">            <span class="comment">//让对象朝目标点移动 先生成行进路径 然后再移动</span></span><br><span class="line">            navMeshAgent.SetDestination(hit.point); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Input.GetKeyDown(KeyCode.Space)) <span class="comment">// 如果按下空格键</span></span><br><span class="line">    &#123;</span><br><span class="line">        navMeshAgent.isStopped = <span class="literal">true</span>; <span class="comment">// 设置导航代理的isStopped属性为true，表示停止移动</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>假如发现跳跃的地方跳不过去，需要检查两岸的生成寻路网格连接的选项有没有勾选，要勾选了才能从一边跳到另一边，要两边都能跳的话两边都要勾选<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323212607898.png" alt="" /></p><p>遇到消耗更高的区域会绕着走，遇到不能走的区域也会绕过去<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323212831498.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323212649237.png" alt="" /></p><h2 id="不常用"><a class="markdownIt-Anchor" href="#不常用"></a> 不常用</h2><h3 id="属性"><a class="markdownIt-Anchor" href="#属性"></a> 属性</h3><p>1 面板参数相关 速度，加速度，旋转速度</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//遵循路径时的最大移动速度。</span></span><br><span class="line">print(navMeshAgent.speed);</span><br><span class="line"></span><br><span class="line"><span class="comment">//代理遵循某一路径时的最大加速度，以单位/秒^2 表示。</span></span><br><span class="line">print(navMeshAgent.acceleration);</span><br><span class="line"></span><br><span class="line"><span class="comment">//遵循路径时的最大回转速度（以 deg/ s 为单位）。</span></span><br><span class="line">print(navMeshAgent.angularSpeed);</span><br></pre></td></tr></table></figure><p>2 其它重要属性<br />2.1 当前是否有路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//NavMeshAgent中的hasPath变量 当前是否有路径</span></span><br><span class="line"><span class="keyword">if</span> ( navMeshAgent.hasPath )</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.2 代理目标点 可以设置 也可以得到</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取代理在世界坐标系单位中的目标或尝试设置代理在其中的目标。</span></span><br><span class="line">print(navMeshAgent.destination);</span><br></pre></td></tr></table></figure><p>2.3 代理目标点</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取代理在世界坐标系单位中的目标或尝试设置代理在其中的目标。</span></span><br><span class="line">print(navMeshAgent.destination);</span><br></pre></td></tr></table></figure><p>2.4 当前路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取和设置当前路径的属性。</span></span><br><span class="line">print(navMeshAgent.path);</span><br></pre></td></tr></table></figure><p>2.5 路径是否在计算中</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//是正在计算过程中而尚未就绪的路径吗？（只读）</span></span><br><span class="line"><span class="keyword">if</span> ( navMeshAgent.pathPending )</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.6 路径状态</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//当前路径的状态（完整、部分或无效）。</span></span><br><span class="line">print(navMeshAgent.pathStatus);</span><br></pre></td></tr></table></figure><p>2.7 是否更新位置</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取或设置变换位置是否与模拟的代理位置同步。默认值为 true。</span></span><br><span class="line">navMeshAgent.updatePosition = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>2.8 是否更新角度</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代理是否应该更新变换方向？</span></span><br><span class="line">navMeshAgent.updateRotation = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>2.9 代理速度</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取 NavMeshAgent 组件的当前速度，或者设置一个速度来手动控制代理。</span></span><br><span class="line">print(navMeshAgent.velocity);</span><br></pre></td></tr></table></figure><p>2.10 计算生成路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算到指定点的路径并存储生成的路径。</span></span><br><span class="line">NavMeshPath navMeshPath = <span class="keyword">new</span> NavMeshPath();</span><br><span class="line"><span class="keyword">if</span>( navMeshAgent.CalculatePath(Vector3.zero, navMeshPath) )</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="方法"><a class="markdownIt-Anchor" href="#方法"></a> 方法</h3><p>计算生成路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算到指定点的路径并存储生成的路径。</span></span><br><span class="line">NavMeshPath navMeshPath = <span class="keyword">new</span> NavMeshPath();</span><br><span class="line"><span class="keyword">if</span>( navMeshAgent.CalculatePath(Vector3.zero, navMeshPath) )</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置新路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为此代理分配一条新路径。</span></span><br><span class="line"><span class="keyword">if</span> (navMeshAgent.SetPath(navMeshPath))</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清除路径</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//清除当前路径。</span></span><br><span class="line">navMeshAgent.ResetPath();</span><br></pre></td></tr></table></figure><p>调整到指定点位置</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将代理调整至指定的位置。</span></span><br><span class="line">navMeshAgent.Warp(Vector3.zero);</span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在场景上加入一个角色，可以通过鼠标右键点击控制场景上角色的移动，要切换动画</p><p>先搭建场景<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323224324321.png" alt="" /></p><p>角色动作只有待机和移动<br />设置角色的Animator状态机<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323224413837.png" alt="" /></p><p>通过导航寻路系统来移动，取消通过动画来移动<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/65.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E5%AF%BB%E8%B7%AF%E7%BB%84%E4%BB%B6/file-20250323224430295.png" alt="" /></p><p>添加脚本挂载到角色上，脚本中判断鼠标点击移动角色并播放动画</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        RaycastHit hit;</span><br><span class="line">        <span class="keyword">if</span> (Physics.Raycast(Camera.main.ScreenPointToRay(Input.mousePosition), <span class="keyword">out</span> hit)) </span><br><span class="line">        &#123;</span><br><span class="line">            navMeshAgent.SetDestination(hit.point);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (navMeshAgent.velocity == Vector3.zero) <span class="comment">// 如果导航代理的速度为零，表示没有移动</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;Speed&quot;</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="comment">// 否则，表示正在移动</span></span><br><span class="line">        animator.SetInteger(<span class="string">&quot;Speed&quot;</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导航网格寻路组件是用来干什么的&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导航网格寻路组件是用来干什么的&quot;&gt;&lt;/a&gt; 导航网格寻路组件是用来干什么的&lt;/h1&gt;
&lt;p&gt;NavMeshAgent&lt;br /&gt;
通过上节课导航网格生成知识点</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="导航系统" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>64.导航网格生成</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/</id>
    <published>2025-03-23T12:00:02.000Z</published>
    <updated>2025-03-23T12:55:28.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="准备地形"><a class="markdownIt-Anchor" href="#准备地形"></a> 准备地形</h1><p>在进行导航寻路网格生成时<br />第一步是需要有地形<br />地形由美术同学制作模型<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323200302258.png" alt="" /></p><h1 id="打开导航网格窗口"><a class="markdownIt-Anchor" href="#打开导航网格窗口"></a> 打开导航网格窗口</h1><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323201320284.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323201534374.png" alt="" /></p><h1 id="参数相关-旧版"><a class="markdownIt-Anchor" href="#参数相关-旧版"></a> 参数相关 旧版</h1><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/%E5%AF%BC%E8%88%AA%E5%8F%82%E6%95%B0%E7%9B%B8%E5%85%B3.png" alt="" /></p><h2 id="ojbect-场景对象设置页签"><a class="markdownIt-Anchor" href="#ojbect-场景对象设置页签"></a> Ojbect 场景对象设置页签</h2><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323201940346.png" alt="" /></p><h3 id="sceme-filter"><a class="markdownIt-Anchor" href="#sceme-filter"></a> Sceme Filter：</h3><p>场景过滤器，配合Hierarchy窗口使用<br />All：显示场景上所有对象<br />MeshRenderers：显示挂载的网格渲染器的对象<br />Terrains：显示挂载了地形脚本的对象</p><h3 id="navigation-static-导航静态物体开关"><a class="markdownIt-Anchor" href="#navigation-static-导航静态物体开关"></a> Navigation Static 导航静态物体开关</h3><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202212586.png" alt="" /></p><p>相当于在<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202244659.png" alt="" /></p><h3 id="generate-offmeshlinks-生成网格连接点开关"><a class="markdownIt-Anchor" href="#generate-offmeshlinks-生成网格连接点开关"></a> Generate OffMeshLinks 生成网格连接点开关</h3><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202428514.png" alt="" /></p><h3 id="navigation-area"><a class="markdownIt-Anchor" href="#navigation-area"></a> Navigation Area</h3><p>导航区域选择，配合Areas页签使用</p><h2 id="bake-导航数据烘焙页签"><a class="markdownIt-Anchor" href="#bake-导航数据烘焙页签"></a> Bake 导航数据烘焙页签</h2><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202907610.png" alt="" /></p><p>先把导航静态物体开关给打开再点下面烘焙<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202940989.png" alt="" /><br />点击烘焙，场景中生成的蓝色部分就是可行走的区域。注意要设置成有对象是导航静态才能烘焙成功<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323202855634.png" alt="" /></p><h3 id="agent-radius-代理半径"><a class="markdownIt-Anchor" href="#agent-radius-代理半径"></a> Agent Radius 代理半径</h3><p>决定了烘焙边缘精确度<br />控制平台可行走区域和边缘可行走区域</p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203124027.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203144585.png" alt="" /></p><h3 id="agent-height-代理高度"><a class="markdownIt-Anchor" href="#agent-height-代理高度"></a> Agent Height 代理高度</h3><p>决定了烘焙高度精确度<br />控制拱桥是否可以穿越</p><p>拱桥不可以过<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203255536.png" alt="" /></p><p>把代理高度调小就可以过<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203336407.png" alt="" /></p><h3 id="max-slope-最大坡度"><a class="markdownIt-Anchor" href="#max-slope-最大坡度"></a> Max Slope 最大坡度</h3><p>斜坡度数<br />决定了斜坡是否可以行走</p><p>不能走，只能0~14.5<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203508836.png" alt="" /></p><p>可以走，有0~60<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203446109.png" alt="" /></p><h3 id="step-height-最小楼梯高度"><a class="markdownIt-Anchor" href="#step-height-最小楼梯高度"></a> Step Height 最小楼梯高度</h3><p>决定了台阶是否可以行走</p><p>上面不能走，下面能走，上面 - 下面的高度差 &gt; 0.1所以不能走<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203712718.png" alt="" /></p><p>两个台阶都可以走<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203646016.png" alt="" /></p><h3 id="generated-off-mesh-links-生成非网格连接"><a class="markdownIt-Anchor" href="#generated-off-mesh-links-生成非网格连接"></a> Generated off mesh Links 生成非网格连接</h3><p>两个分开的网格之间连接相关设置<br />记得要先把两平面之间的生成网格连接点开关给打开<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323203923054.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204139049.png" alt="" /></p><ul><li>Drop Height<br />掉落高度<br />可以从这个高度掉下来</li><li>Jump Distance<br />跳跃距离<br />决定不同平面上的跳跃距离</li></ul><h3 id="advanced"><a class="markdownIt-Anchor" href="#advanced"></a> Advanced</h3><p>一般很少设置高级设置，耗性能</p><ul><li><p>Manual Voxel Size<br />手动设置立体像素大小<br />立体像素大小描述了生成的导航网格表示场景几何体的准确程度<br />注意：立体像素大小减半会使内存使用量增加4倍，构建时间也增加4倍一般情况下不需要修改这个值<br />除非想要极其准确的导航网格</p><ul><li>Voxel Size<br />开启前者后可以在这里设置立体像素大小可以控制烘焙的准确度</li></ul></li><li><p>Min Region Area<br />最小区域面积<br />当面积小于此处值的导航网格区域会被移除</p></li><li><p>Height Mesh<br />高度网格构建开关<br />主要用来解决楼梯烘焙为斜坡时希望在楼梯表面的位置准确的放置在楼梯平面上而不是斜坡上<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204613197.png" alt="" /><br />启用它会增加烘焙时间</p></li></ul><h2 id="areas-导航地区页签"><a class="markdownIt-Anchor" href="#areas-导航地区页签"></a> Areas 导航地区页签</h2><p>配合Object页签使用<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204702595.png" alt="" /></p><p>可以自己新加一个导航区域（Plane（4）），去Object页签选择<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204825238.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204858473.png" alt="" /></p><p>烘焙后<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323204918668.png" alt="" /></p><h3 id="name-区域名字"><a class="markdownIt-Anchor" href="#name-区域名字"></a> Name 区域名字</h3><h3 id="cost-寻路消耗"><a class="markdownIt-Anchor" href="#cost-寻路消耗"></a> Cost 寻路消耗</h3><p>寻路消耗越大，越不会从这边走</p><h2 id="agents-代理页签"><a class="markdownIt-Anchor" href="#agents-代理页签"></a> Agents 代理页签</h2><p>用于配置寻路代理信息</p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/64.%E5%AF%BC%E8%88%AA%E7%BD%91%E6%A0%BC%E7%94%9F%E6%88%90/file-20250323205100567.png" alt="" /></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;准备地形&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#准备地形&quot;&gt;&lt;/a&gt; 准备地形&lt;/h1&gt;
&lt;p&gt;在进行导航寻路网格生成时&lt;br /&gt;
第一步是需要有地形&lt;br /&gt;
地形由美术同学制作模型&lt;br /&gt;
&lt;img src=&quot;/20</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="导航系统" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>63.导航寻路系统概述</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/63.%E5%AF%BC%E8%88%AA%E5%AF%BB%E8%B7%AF%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/63.%E5%AF%BC%E8%88%AA%E5%AF%BB%E8%B7%AF%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0/</id>
    <published>2025-03-23T11:56:42.000Z</published>
    <updated>2025-03-23T12:00:26.628Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是导航寻路系统"><a class="markdownIt-Anchor" href="#什么是导航寻路系统"></a> 什么是导航寻路系统</h1><p>Unity中的导航寻路系统是能够让我们在游戏世界当中让角色能够从一个起点准确的到达另一个终点，并且能够自动避开两个点之间的障碍物选择最近最合理的路径进行前往。导航寻路系统的本质就是在A星寻路算法的基础上进行了拓展和优化。</p><h1 id="导航寻路系统要学习哪些内容"><a class="markdownIt-Anchor" href="#导航寻路系统要学习哪些内容"></a> 导航寻路系统要学习哪些内容</h1><p>导航网格(NavMesh)的生成<br />要想角色能够在场景中自动寻路产生行进路径，那么必须得先有场景地形数据，导航网格生成就是生成用于寻路的地形数据。</p><p>导航网格寻路组件(NavMesh Agent)<br />寻路组件就是帮助我们根据地形数据计算路径让角色动起来的关键。</p><p>导航网格连接组件(Off-Mesh Link)<br />当地形中间有断层，想让角色能从一个平面跳向另一个平面，网格连接组件时关键。</p><p>导航网格动态障碍物组件(NavMesh Obstacle)<br />地形中可能存在的可以移动或动态销毁的障碍物需要挂载的组件。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是导航寻路系统&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#什么是导航寻路系统&quot;&gt;&lt;/a&gt; 什么是导航寻路系统&lt;/h1&gt;
&lt;p&gt;Unity中的导航寻路系统是能够让我们在游戏世界当中让角色能够从一个起点准确的到达另一个终点，并且能够</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
    <category term="导航系统" scheme="http://example.com/tags/%E5%AF%BC%E8%88%AA%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>62.角色控制器</title>
    <link href="http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/"/>
    <id>http://example.com/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/</id>
    <published>2025-03-23T09:03:14.000Z</published>
    <updated>2025-03-23T09:38:20.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="charactercontroller角色控制器是什么"><a class="markdownIt-Anchor" href="#charactercontroller角色控制器是什么"></a> CharacterController角色控制器是什么</h1><p>角色控制器是让角色可以受制于碰撞，但是不会被刚体所牵制。<br />如果我们对角色使用刚体判断碰撞，可能会出现一些奇怪的表现，比如在斜坡上往下滑动，不加约束的情况碰撞可能让自己被撞飞等等。<br />而角色控制器会让角色表现得更加稳定。<br />Unity提供了角色控制器组件专门用于控制角色。</p><p>注意：</p><ul><li>添加角色控制器后，不用再添加刚体。</li><li>能检测碰撞函数。</li><li>能检测触发器函数。</li><li>能被射线检测到。</li></ul><h1 id="角色控制器的使用"><a class="markdownIt-Anchor" href="#角色控制器的使用"></a> 角色控制器的使用</h1><p>使用角色控制器建议取消Animator组件上的根运动<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323170622406.png" alt="" /></p><p>给角色添加CharacterController<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323170738884.png" alt="" /></p><h2 id="角色控制器参数"><a class="markdownIt-Anchor" href="#角色控制器参数"></a> 角色控制器参数</h2><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323170849798.png" alt="" /></p><p><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323171303785.png" alt="" /><br />Slope Limit（斜度限制）：坡度度数限制，大于该值的斜坡上不去<br />Step Offset（每步偏移量）：台阶偏移值，单位为米，低于这个值的台阶才能上去，该值不能大于角色控制器的高度<br />Skin Width（蒙皮宽度）：皮肤的宽度，两个碰撞体可以穿透彼此最大的皮肤宽度，较大的值可以减少抖动，较小的值可能导致角色卡住，建议设置为半径的10%。通俗来说就是角色可以和刚体穿模多少。<br />MinMoveDistance（最小移动距离）：大多数情况下为0，可以用来减少抖动</p><h2 id="代码相关"><a class="markdownIt-Anchor" href="#代码相关"></a> 代码相关</h2><p>CharacterController.isGrounded变量 是否接触了地面</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在上次移动期间 CharacterController 是否接触地面？</span></span><br><span class="line"><span class="keyword">if</span> (characterController.isGrounded)</span><br><span class="line">&#123;</span><br><span class="line">    print(<span class="string">&quot;接触地面了&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CharacterController.SimpleMove方法 受重力作用的移动</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">characterController.SimpleMove(Vector3.forward * <span class="number">10</span> * Time.deltaTime);</span><br></pre></td></tr></table></figure><p>CharacterController.Move方法 不受重力作用的移动</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">characterController.Move(Vector3.forward * <span class="number">10</span> * Time.deltaTime);</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson66_3D</span>动画_角色控制器 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CharacterController characterController;</span><br><span class="line">    <span class="keyword">private</span> Animator animator;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        characterController = <span class="keyword">this</span>.GetComponent&lt;CharacterController&gt;();</span><br><span class="line">        animator = <span class="keyword">this</span>.GetComponent&lt;Animator&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( characterController.isGrounded )</span><br><span class="line">        &#123;</span><br><span class="line">            print(<span class="string">&quot;接触地面了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        animator.SetInteger(<span class="string">&quot;Speed&quot;</span>, (<span class="built_in">int</span>)Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//CharacterController中的Move方法 不受重力作用的移动</span></span><br><span class="line">        <span class="comment">//始终朝人物前面移动</span></span><br><span class="line">        characterController.SimpleMove(<span class="keyword">this</span>.transform.forward * <span class="number">80</span> * Time.deltaTime * Input.GetAxisRaw(<span class="string">&quot;Vertical&quot;</span>));</span><br><span class="line">        <span class="comment">//characterController.Move(this.transform.forward * 80 * Time.deltaTime * Input.GetAxisRaw(&quot;Vertical&quot;));</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//角色控制器判断是否和别的碰撞器产生碰撞时</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnControllerColliderHit</span>(<span class="params">ControllerColliderHit hit</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">&quot;角色碰撞器发生碰撞&quot;</span>+hit.collider.gameObject.name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//OnCollisionEnter方法对角色控制器没用 </span></span><br><span class="line">    <span class="comment">//private void OnCollisionEnter(Collision collision)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    print(&quot;碰撞触发&quot;);</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//角色控制器可以检测触发器 OnTriggerEnter方法有用</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        print(<span class="string">&quot;触发器触发&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="练习"><a class="markdownIt-Anchor" href="#练习"></a> 练习</h1><p>在之前的练习题基础上，加入角色控制器控制角色的移动</p><p>给模型添加角色控制器组件，取消Animator组件的根运动<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323173206127.png" alt="" /></p><p>创建平面光源立方体等<br /><img src="/2025/03/23/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/62.%E8%A7%92%E8%89%B2%E6%8E%A7%E5%88%B6%E5%99%A8/file-20250323173239044.png" alt="" /></p><p>代码中得到角色控制器组件，写移动和选择逻辑</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Lesson66_</span>练习题 : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CharacterController characterController; </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> speed = <span class="number">10</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> roundSpeed = <span class="number">20</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        characterController = <span class="keyword">this</span>.GetComponent&lt;CharacterController&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        characterController.SimpleMove(<span class="keyword">this</span>.transform.forward * speed * Time.deltaTime * Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>)); </span><br><span class="line">        </span><br><span class="line">        <span class="keyword">this</span>.transform.Rotate(Vector3.up, roundSpeed * Time.deltaTime * Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;charactercontroller角色控制器是什么&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#charactercontroller角色控制器是什么&quot;&gt;&lt;/a&gt; CharacterController角色控制器是什么&lt;/h1&gt;
</summary>
      
    
    
    
    <category term="游戏引擎" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/categories/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/"/>
    
    
    <category term="游戏引擎" scheme="http://example.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"/>
    
    <category term="unity" scheme="http://example.com/tags/unity/"/>
    
    <category term="unity核心" scheme="http://example.com/tags/unity%E6%A0%B8%E5%BF%83/"/>
    
  </entry>
  
</feed>
