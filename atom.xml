<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>akiraの博客思密达</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2025-04-06T14:04:21.275Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>akira23369</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>7.注册面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T11:50:34.000Z</published>
    <updated>2025-04-06T14:04:21.275Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/file-20250406200658788.png" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/注册面板测试动画.gif" alt=""></p><p>登录面板和注册面板之间的交互<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnRe;    <span class="comment">// 注册按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnSure;  <span class="comment">// 确定登录按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;      <span class="comment">// 输入的账号</span></span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;     <span class="comment">// 输入的密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记住密码和自动登录</span></span><br><span class="line">    <span class="keyword">public</span> Toggle togPw;</span><br><span class="line">    <span class="keyword">public</span> Toggle togAuto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnRe.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 显示注册面板，隐藏自己</span></span><br><span class="line">            UIManager.Instance.ShowPanel&lt;RegisterPanel&gt;();</span><br><span class="line">            UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 验证用户名</span></span><br><span class="line">            <span class="comment">// 判断用户密码是否合理</span></span><br><span class="line">            <span class="keyword">if</span> (inputPwd.text.Length &lt;= <span class="number">6</span> || inputUN.text.Length &lt;= <span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;用户名和mima不合法&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 通过LoginMgr来向持久化数据验证</span></span><br><span class="line">            <span class="keyword">if</span> (LoginMgr.Instance.CheckUser(inputUN.text, inputPwd.text))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 记录数据</span></span><br><span class="line">                LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">                loginData.autoLogin = togAuto.isOn;</span><br><span class="line">                loginData.rememberPw = togPw.isOn;</span><br><span class="line">                loginData.userName = inputUN.text;</span><br><span class="line">                loginData.passWord = inputPwd.text;</span><br><span class="line">                LoginMgr.Instance.SaveLoginData();</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 根据服务器信息来判断显示哪个面板， 如果之前选过某服务器就自动选那个</span></span><br><span class="line"></span><br><span class="line">                <span class="comment">// 登陆成功后隐藏自己</span></span><br><span class="line">                UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                UIManager.Instance.ShowPanel&lt;TipPanel&gt;().ChangeTextTip(<span class="string">&quot;账号密码错误&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togPw.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果没有选记住密码，就把自动登录取消</span></span><br><span class="line">            <span class="keyword">if</span> (!isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togAuto.isOn = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togAuto.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击自动登录，如果记住密码没被选中，就要将记住密码给选中</span></span><br><span class="line">            <span class="keyword">if</span> (isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togPw.isOn = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示面板前，根据上次数据更新面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.ShowMe();</span><br><span class="line">        <span class="comment">// 得到数据</span></span><br><span class="line">        LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">        togPw.isOn = loginData.rememberPw;</span><br><span class="line">        togAuto.isOn = loginData.autoLogin;</span><br><span class="line"></span><br><span class="line">        inputUN.text = loginData.userName;</span><br><span class="line">        <span class="comment">// 密码看上一次是否勾选了记住密码</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.rememberPw)</span><br><span class="line">            inputPwd.text = loginData.passWord;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果上次勾选了自动登录</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.autoLogin)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 自动验证账号密码相关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 给外部设置用户名和密码的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SetInfo</span>(<span class="params"><span class="built_in">string</span> username, <span class="built_in">string</span> password</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        inputUN.text = username;</span><br><span class="line">        inputPwd.text = password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>注册的账号密码数据<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RegisterData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt; registerInfo = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, <span class="built_in">string</span>&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>RegisterPanel<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RegisterPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnSure;</span><br><span class="line">    <span class="keyword">public</span> Button btnCancel;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;</span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnCancel.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 隐藏自己，显示登录面板</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;RegisterPanel&gt;();</span><br><span class="line">            UIManager.Instance.ShowPanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// </span></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 判断用户密码是否合理</span></span><br><span class="line">            <span class="keyword">if</span> (inputPwd.text.Length &lt;= <span class="number">6</span> || inputUN.text.Length &lt;= <span class="number">6</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                </span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;用户名和mima不合法&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 如果合法，用LoginMgr去和数据做持久化</span></span><br><span class="line">            <span class="built_in">bool</span> isRegisterOK = LoginMgr.Instance.RegisterUser(inputUN.text, inputPwd.text);</span><br><span class="line">            <span class="keyword">if</span> (isRegisterOK)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 隐藏自己，显示登录面板，还要更新登录面板内容</span></span><br><span class="line">                UIManager.Instance.HidePanel&lt;RegisterPanel&gt;();</span><br><span class="line">                LoginPanel loginPanel = UIManager.Instance.ShowPanel&lt;LoginPanel&gt;();</span><br><span class="line">                loginPanel.SetInfo(inputUN.text, inputPwd.text);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 提示别人用户名已存在</span></span><br><span class="line">                TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">                tipPanel.ChangeTextTip(<span class="string">&quot;该用户已经注册过了&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/7.%E6%B3%A8%E5%86%8C%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>6.登录面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T10:20:17.000Z</published>
    <updated>2025-04-06T11:49:01.179Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194600403.png" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194755704.png" alt=""><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 登录界面需要记住的玩家操作</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginData</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> userName;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">string</span> passWord;</span><br><span class="line">    <span class="comment">// 是否记住密码</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> rememberPw;</span><br><span class="line">    <span class="comment">// 是否自动登录</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">bool</span> autoLogin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194740362.png" alt=""><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginMgr</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> LoginMgr instance = <span class="keyword">new</span> LoginMgr();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> LoginMgr Instance =&gt; instance;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">LoginMgr</span>()</span> </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 加载持久化数据，第一次没有就是其默认</span></span><br><span class="line">        loginData = JsonMgr.Instance.LoadData&lt;LoginData&gt;(<span class="string">&quot;LoginData&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LoginData loginData;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> LoginData LoginData =&gt; loginData;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">SaveLoginData</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        JsonMgr.Instance.SaveData(loginData, <span class="string">&quot;LoginData&quot;</span>, JsonType.LitJson);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/file-20250406194640226.png" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/记住密码和自动登录测试动画.gif" alt=""><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LoginPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnRe;    <span class="comment">// 注册按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnSure;  <span class="comment">// 确定登录按钮</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InputField inputUN;      <span class="comment">// 输入的账号</span></span><br><span class="line">    <span class="keyword">public</span> InputField inputPwd;     <span class="comment">// 输入的密码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记住密码和自动登录</span></span><br><span class="line">    <span class="keyword">public</span> Toggle togPw;</span><br><span class="line">    <span class="keyword">public</span> Toggle togAuto;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnRe.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 显示注册面板，隐藏自己</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;LoginPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 验证用户名</span></span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togPw.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 如果没有选记住密码，就把自动登录取消</span></span><br><span class="line">            <span class="keyword">if</span> (!isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togAuto.isOn = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        togAuto.onValueChanged.AddListener((isSel) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 点击自动登录，如果记住密码没被选中，就要将记住密码给选中</span></span><br><span class="line">            <span class="keyword">if</span> (isSel)</span><br><span class="line">            &#123;</span><br><span class="line">                togPw.isOn = <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示面板前，根据数据更新面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">base</span>.ShowMe();</span><br><span class="line">        <span class="comment">// 得到数据</span></span><br><span class="line">        LoginData loginData = LoginMgr.Instance.LoginData;</span><br><span class="line">        togPw.isOn = loginData.rememberPw;</span><br><span class="line">        togAuto.isOn = loginData.autoLogin;</span><br><span class="line"></span><br><span class="line">        inputUN.text = loginData.userName;</span><br><span class="line">        <span class="comment">// 密码看上一次是否勾选了记住密码</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.rememberPw)</span><br><span class="line">            inputPwd.text = loginData.passWord;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果上次勾选了自动登录</span></span><br><span class="line">        <span class="keyword">if</span> (loginData.autoLogin)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 自动验证账号密码相关</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/6.%E7%99%BB%E5%BD%95%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>5.提示面板</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/</id>
    <published>2025-04-06T09:05:32.000Z</published>
    <updated>2025-04-06T11:49:36.374Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/file-20250406172656558.png" alt=""></p><p>注意这里的Resources/UI文件夹，还有TipPanel预设体名字和TipPanel脚本的名字要一样</p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/TipPanel测试动画.gif" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/file-20250406194934348.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TipPanel</span> : <span class="title">BasePanel</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Button btnSure;</span><br><span class="line">    <span class="comment">// 提示文字</span></span><br><span class="line">    <span class="keyword">public</span> Text txtTip;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Init</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        btnSure.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 统一通过UI管理器</span></span><br><span class="line">            UIManager.Instance.HidePanel&lt;TipPanel&gt;();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 更改提示内容</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ChangeTextTip</span>(<span class="params"><span class="built_in">string</span> tip</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        txtTip.text = tip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试脚本Main<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Main</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        TipPanel tipPanel = UIManager.Instance.ShowPanel&lt;TipPanel&gt;();</span><br><span class="line">        tipPanel.ChangeTextTip(<span class="string">&quot;这是一个测试&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/5.%E6%8F%90%E7%A4%BA%E9%9D%A2%E6%9D%BF/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>4.UI管理器</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/4.UI%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/4.UI%E7%AE%A1%E7%90%86%E5%99%A8/</id>
    <published>2025-04-06T08:13:28.000Z</published>
    <updated>2025-04-06T13:48:00.467Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/4.UI%E7%AE%A1%E7%90%86%E5%99%A8/file-20250406161324593.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UIManager</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> UIManager instance = <span class="keyword">new</span> UIManager();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> UIManager Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 存储面板容器</span></span><br><span class="line">    <span class="keyword">private</span> Dictionary&lt;<span class="built_in">string</span>, BasePanel&gt; panelDic = <span class="keyword">new</span> Dictionary&lt;<span class="built_in">string</span>, BasePanel&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Transform canvasTrans;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">UIManager</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        canvasTrans = GameObject.Find(<span class="string">&quot;Canvas&quot;</span>).transform;</span><br><span class="line">        <span class="comment">// 将EventSystem和UICamera作为Canvas子对象，让Canvas过场景不被删掉</span></span><br><span class="line">        GameObject.DontDestroyOnLoad(canvasTrans.gameObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 显示面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">ShowPanel</span>&lt;<span class="title">T</span>&gt;() <span class="keyword">where</span> T : BasePanel</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 自定义规则，键名 = 面板类名</span></span><br><span class="line">        <span class="built_in">string</span> panelNameKey = <span class="keyword">typeof</span>(T).Name;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (panelDic.ContainsKey(panelNameKey)) <span class="keyword">return</span> panelDic[panelNameKey] <span class="keyword">as</span> T;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态创建面板对象, 设置为Canvas子对象</span></span><br><span class="line">        GameObject panelObj = GameObject.Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">$&quot;UI/<span class="subst">&#123;panelNameKey&#125;</span>&quot;</span>));</span><br><span class="line">        panelObj.transform.SetParent(canvasTrans, <span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存储到容器中</span></span><br><span class="line">        T res = panelObj.GetComponent&lt;T&gt;();</span><br><span class="line">        panelDic[panelNameKey] = res;</span><br><span class="line">        <span class="comment">//panelDic.Add(panelNameKey, res);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 显示面板</span></span><br><span class="line">        res.ShowMe();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 隐藏面板，这里可以通过默认参数来选择是淡出还是整个删除</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">HidePanel</span>&lt;<span class="title">T</span>&gt;(<span class="params"><span class="built_in">bool</span> isFade = <span class="literal">true</span></span>) <span class="keyword">where</span> T : BasePanel</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> panelNameKey = <span class="keyword">typeof</span>(T).Name;</span><br><span class="line">        <span class="keyword">if</span> (panelDic.ContainsKey(panelNameKey))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (isFade)</span><br><span class="line">            &#123;</span><br><span class="line">                panelDic[panelNameKey].HideMe(() =&gt;</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 删除面板，移除dic</span></span><br><span class="line">                    GameObject.Destroy(panelDic[panelNameKey].gameObject);</span><br><span class="line">                    <span class="comment">// 绝对不能像下面这样写！！！！！！！！！！！</span></span><br><span class="line">                    <span class="comment">//panelDic[panelNameKey] = null;</span></span><br><span class="line">                    panelDic.Remove(panelNameKey);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 删除面板，移除dic</span></span><br><span class="line">                GameObject.Destroy(panelDic[panelNameKey].gameObject);</span><br><span class="line">                <span class="comment">// 绝对不能像下面这样写！！！！！！！！！！！</span></span><br><span class="line">                <span class="comment">//panelDic[panelNameKey] = null;</span></span><br><span class="line">                panelDic.Remove(panelNameKey);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获得面板</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">GetPanel</span>&lt;<span class="title">T</span>&gt;() <span class="keyword">where</span> T : BasePanel</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> panelNameKey = <span class="keyword">typeof</span>(T).Name;</span><br><span class="line">        <span class="keyword">return</span> panelDic[panelNameKey] <span class="keyword">as</span> T ?? <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/4.UI%E7%AE%A1%E7%90%86%E5%99%A8/file-20</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>3.面板基类</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/3.%E9%9D%A2%E6%9D%BF%E5%9F%BA%E7%B1%BB/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/3.%E9%9D%A2%E6%9D%BF%E5%9F%BA%E7%B1%BB/</id>
    <published>2025-04-06T07:10:08.000Z</published>
    <updated>2025-04-06T08:11:34.312Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/3.%E9%9D%A2%E6%9D%BF%E5%9F%BA%E7%B1%BB/file-20250406161132550.png" alt=""><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">BasePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CanvasGroup canvasGroup;</span><br><span class="line">    <span class="comment">// 淡入淡出速度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> alphaSpeed = <span class="number">10f</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isShow = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 当淡出时的委托</span></span><br><span class="line">    <span class="keyword">public</span> UnityAction hideCallBack;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        canvasGroup = <span class="keyword">this</span>.GetComponent&lt;CanvasGroup&gt;();</span><br><span class="line">        <span class="keyword">if</span> (canvasGroup == <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup = <span class="keyword">this</span>.gameObject.AddComponent&lt;CanvasGroup&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 初始化按钮事件监听</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">Init</span>()</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">ShowMe</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isShow = <span class="literal">true</span>;</span><br><span class="line">        canvasGroup.alpha = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">HideMe</span>(<span class="params">UnityAction callBack</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        isShow = <span class="literal">false</span>;</span><br><span class="line">        canvasGroup.alpha = <span class="number">1</span>;</span><br><span class="line">        hideCallBack = callBack;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 淡入</span></span><br><span class="line">        <span class="keyword">if</span> (isShow &amp;&amp; canvasGroup.alpha != <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup.alpha += alphaSpeed * Time.deltaTime;</span><br><span class="line">            <span class="keyword">if</span> (canvasGroup.alpha &gt;= <span class="number">1</span>)</span><br><span class="line">                canvasGroup.alpha = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 淡出</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (!isShow)</span><br><span class="line">        &#123;</span><br><span class="line">            canvasGroup.alpha -= alphaSpeed * Time.deltaTime;</span><br><span class="line">            <span class="keyword">if</span> (canvasGroup.alpha &lt;= <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                canvasGroup.alpha = <span class="number">0</span>;</span><br><span class="line">                hideCallBack?.Invoke();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/3.%E9%9D%A2%E6%9D%BF%E5%9F%BA%E7%B1%BB/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>2.准备工作</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/2.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/2.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/</id>
    <published>2025-04-06T06:57:01.000Z</published>
    <updated>2025-04-06T07:09:35.715Z</updated>
    
    <content type="html"><![CDATA[<p>新建工程<br>导入Json数据管理器相关脚本<br>导入资源<br>创建重要文件夹<br>Resources<br>Scripts<br>StreamingAssets<br>ArtRes</p><p>创建UGUI关键对象，设置Canvas<br>修改Canvas为摄像机模式</p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/2.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/file-20250406150831665.png" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/2.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/file-20250406150753470.png" alt=""></p><p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/2.%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C/file-20250406150931065.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;新建工程&lt;br&gt;导入Json数据管理器相关脚本&lt;br&gt;导入资源&lt;br&gt;创建重要文件夹&lt;br&gt;Resources&lt;br&gt;Scripts&lt;br&gt;StreamingAssets&lt;br&gt;ArtRes&lt;/p&gt;
&lt;p&gt;创建UGUI关键对象，设置Canvas&lt;br&gt;修改Canvas为摄像</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>1.需求分析</title>
    <link href="http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/1.%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/1.%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</id>
    <published>2025-04-06T06:56:14.000Z</published>
    <updated>2025-04-06T08:09:09.483Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/1.%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/实践类图.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/06/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/1.%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI实践小项目" scheme="http://example.com/tags/UGUI%E5%AE%9E%E8%B7%B5%E5%B0%8F%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>VisualStudio</title>
    <link href="http://example.com/2025/04/05/%E5%B7%A5%E5%85%B7/VisualStudio/"/>
    <id>http://example.com/2025/04/05/%E5%B7%A5%E5%85%B7/VisualStudio/</id>
    <published>2025-04-05T03:06:21.000Z</published>
    <updated>2025-04-05T03:06:58.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="设置vs仅限Tab补全"><a href="#设置vs仅限Tab补全" class="headerlink" title="设置vs仅限Tab补全"></a>设置vs仅限Tab补全</h1><p><img src="/2025/04/05/%E5%B7%A5%E5%85%B7/VisualStudio/file-20250405110623589.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;设置vs仅限Tab补全&quot;&gt;&lt;a href=&quot;#设置vs仅限Tab补全&quot; class=&quot;headerlink&quot; title=&quot;设置vs仅限Tab补全&quot;&gt;&lt;/a&gt;设置vs仅限Tab补全&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2025/04/05/%E5%B7%A5%E5</summary>
      
    
    
    
    <category term="工具" scheme="http://example.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="工具" scheme="http://example.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>27.UGUI总结</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/</id>
    <published>2025-04-04T14:59:43.000Z</published>
    <updated>2025-04-04T14:59:00.886Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/file-20250404224547157.png" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/file-20250404224609574.png" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/file-20250404224713589.png" alt=""></p><p><a href="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/UGUI总结.svg">UGUI总结.svh</a><br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/UGUI总结.png" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/27.UGUI%E6%80%BB%E7%BB%93/file-20250404224547157.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2025/04/0</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>26.CanvasGroup画布组</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/26.CanvasGroup%E7%94%BB%E5%B8%83%E7%BB%84/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/26.CanvasGroup%E7%94%BB%E5%B8%83%E7%BB%84/</id>
    <published>2025-04-04T14:57:35.000Z</published>
    <updated>2025-04-04T15:00:16.085Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何整体控制一个面板的淡入淡出"><a href="#如何整体控制一个面板的淡入淡出" class="headerlink" title="如何整体控制一个面板的淡入淡出"></a>如何整体控制一个面板的淡入淡出</h1><p>如果我们想要整体控制一个面板的淡入淡出或者整体禁用，使用目前学习的知识点是无法方便快捷的设置的。</p><h1 id="Canvas-Group画布组"><a href="#Canvas-Group画布组" class="headerlink" title="Canvas Group画布组"></a>Canvas Group画布组</h1><p>为面板父对象添加CanvasGroup组件即可整体控制。</p><p>Alpha：整体透明度控制<br>Interactable: 整体启用禁用设置<br>Blocks Raycasts：整体射线检测设置<br>Ignore Parent Groups：是否忽略父级CanvasGroup的作用</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/26.CanvasGroup%E7%94%BB%E5%B8%83%E7%BB%84/Canvas%20Group组件动画.gif" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;如何整体控制一个面板的淡入淡出&quot;&gt;&lt;a href=&quot;#如何整体控制一个面板的淡入淡出&quot; class=&quot;headerlink&quot; title=&quot;如何整体控制一个面板的淡入淡出&quot;&gt;&lt;/a&gt;如何整体控制一个面板的淡入淡出&lt;/h1&gt;&lt;p&gt;如果我们想要整体控制一个面板的淡入淡</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>25.自动布局组件</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/</id>
    <published>2025-04-04T12:45:05.000Z</published>
    <updated>2025-04-04T14:23:32.870Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动布局是什么"><a href="#自动布局是什么" class="headerlink" title="自动布局是什么"></a>自动布局是什么</h1><p>虽然UGUI的RectTransform已经非常方便的可以帮助我们快速布局，但UGUI中还提供了很多可以帮助我们对UI控件进行自动布局的组件。他们可以帮助我们自动的设置UI控件的位置和大小等。</p><p>自动布局的工作方式一般是：自动布局控制组件 + 布局元素 = 自动布局<br>自动布局控制组件：Unity提供了很多用于自动布局的管理性质的组件用于布局。<br>布局元素：具备布局属性的对象们，这里主要是指具备RectTransform的UI组件。</p><h1 id="布局元素的布局属性"><a href="#布局元素的布局属性" class="headerlink" title="布局元素的布局属性"></a>布局元素的布局属性</h1><p>要参与自动布局的布局元素必须包含布局属性。布局属性主要有以下几条：</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/file-20250404205032633.png" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/file-20250404205105887.png" alt=""></p><p>Minmum width：该布局元素应具有的最小宽度。<br>Minmum height：该布局元素应具有的最小高度。<br>Preferred width：在分配额外可用宽度之前，此布局元素应具有的宽度。<br>Preferred height：在分配额外可用高度之前，此布局元素应具有的高度。<br>Flexible width：此布局元素应相对于其同级而填充的额外可用宽度的相对量。<br>Flexible height：此布局元素应相对于其同级而填充的额外可用高度的相对量。</p><p>在进行自动布局时，会通过计算布局元素中的这6个属性来确定控件的大小和位置。</p><p>在布局时，布局元素的大小设置遵循以下基本规则：</p><ol><li>首先分配最小大小（Minmum width 和 Minmum height）。</li><li>如果父容器中有足够的可用空间，则分配 Preferred width 和 Preferred height。</li><li>如果上述两条规则分配完成后仍有额外空间，则分配 Flexible width 和 Flexible height。</li></ol><p>一般情况下，布局元素的这些属性都是0。但是特定的UI组件依附的对象的布局属性可能会被改变，例如 Image 和 Text。<br>通常情况下，我们不会手动修改这些属性，但是如果有需要，可以手动添加一个 LayoutElement 组件来修改这些布局属性。</p><p>eg:<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/file-20250404211302759.png" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip%20Element参数更改动画.gif" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip%20Element其它参数更改动画.gif" alt=""></p><h1 id="Horizontal-Layout-Group水平垂直布局组件"><a href="#Horizontal-Layout-Group水平垂直布局组件" class="headerlink" title="Horizontal Layout Group水平垂直布局组件"></a>Horizontal Layout Group水平垂直布局组件</h1><p>布局组件一般都是在父对象基础上布局子对象<br>然后给父对象添加布局组件就能自动对子对象进行布局</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip动画.gif" alt=""></p><p>VerticalLayoutGroup组件类似<br>参数相关<br>Padding：左右上下边缘的偏移位置。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip填充参数动画.gif" alt=""><br>Spacing：子对象之间的间距。<br>ChildAlignment：九宫格对齐方式。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip对齐参数动画.gif" alt=""></p><p>Control Child Size：是否控制子对象的宽高。<br>Use Child Scale：在设置子对象大小和布局时，是否考虑子对象的缩放。<br>Child Force Expand：是否强制子对象扩展以填充额外可用空间。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Horizontal%20Layout%20Grouip最后三参数动画.gif" alt=""></p><h1 id="Grid-Layout-Group-网格布局组件"><a href="#Grid-Layout-Group-网格布局组件" class="headerlink" title="Grid Layout Group 网格布局组件"></a>Grid Layout Group 网格布局组件</h1><p>布局组件一般都是在父对象基础上布局子对象<br>然后给父对象添加布局组件就能自动对子对象进行布局<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/file-20250404212846020.png" alt=""></p><p>下面是参数相关</p><p>Padding：左右上下边缘的偏移位置。<br>Cell Size：每个格子的大小。<br>Spacing：格子之间的间隔。</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Grid%20Layout%20Group参数更改动画.gif" alt=""></p><p>Start Corner：第一个元素所在的位置（四个角）。<br>Start Axis：沿着哪个轴放置元素；Horizontal 水平放置并换行，Vertical 竖直放置并换列。<br>Child Alignment：格子的对齐方式（九宫格）。<br>Constraint：行列约束。<br>Flexible：灵活模式，根据容器大小自动适应。<br>Fixed Column Count：固定列数。<br>Fixed Row Count：固定行数。</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Grid%20Layout%20Group更多参数更改动画.gif" alt=""></p><h1 id="Content-Size-Fitter-内容大小适配器"><a href="#Content-Size-Fitter-内容大小适配器" class="headerlink" title="Content Size Fitter 内容大小适配器"></a>Content Size Fitter 内容大小适配器</h1><p>内容大小适配器（Content Size Fitter）可以自动调整 RectTransform 的宽度和高度，以使组件自动设置大小。通常在 Text 组件上使用，或与其他布局组件一起使用。</p><p>Horizontal Fit：控制宽度的方式。<br>Vertical Fit：控制高度的方式。<br>可选参数包括：<br>Unconstrained：不根据布局元素伸展宽度或高度。<br>Min Size：根据布局元素的最小宽度或高度伸展。<br>Preferred Size：根据布局元素的首选宽度或高度伸展宽度。</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Content%20SizeFitter%20动画.gif" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Content%20Size%20Fitter与其它布局组件动画.gif" alt=""></p><p>和滚动视图<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Content%20Size%20Fitter与ScrollView组件动画.gif" alt=""></p><h1 id="Aspect-Ratio-Fitter-宽高比适配器"><a href="#Aspect-Ratio-Fitter-宽高比适配器" class="headerlink" title="Aspect Ratio Fitter 宽高比适配器"></a>Aspect Ratio Fitter 宽高比适配器</h1><p>可以让布局元素按照一定的比例调整自身的大小，并在父对象内部根据父对象的大小进行适配。</p><ul><li>Aspect Mode：适配模式，用于调整矩形大小以实现宽高比。<ul><li>None：不对矩形进行宽高比适配。</li><li>Width Controls Height：根据宽度自动调整高度。</li><li>Height Controls Width：根据高度自动调整宽度。</li><li>Fit In Parent：自动调整宽度、高度、位置和锚点，使矩形适应父项的矩形，同时保持宽高比，可能会出现“黑边”。</li><li>Envelope Parent：自动调整宽度、高度、位置和锚点，使矩形覆盖父项的整个区域，同时保持宽高比，可能会出现“裁剪”。</li></ul></li><li>Aspect Ratio：宽度除以高度的比值，即宽高比。</li></ul><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/25.%E8%87%AA%E5%8A%A8%E5%B8%83%E5%B1%80%E7%BB%84%E4%BB%B6/Aspect%20Ratio%20Fitter组件动画%201.gif" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;自动布局是什么&quot;&gt;&lt;a href=&quot;#自动布局是什么&quot; class=&quot;headerlink&quot; title=&quot;自动布局是什么&quot;&gt;&lt;/a&gt;自动布局是什么&lt;/h1&gt;&lt;p&gt;虽然UGUI的RectTransform已经非常方便的可以帮助我们快速布局，但UGUI中还提供了很多</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>24.异性按钮</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/</id>
    <published>2025-04-04T09:28:41.000Z</published>
    <updated>2025-04-04T12:44:39.876Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是异形按钮"><a href="#什么是异形按钮" class="headerlink" title="什么是异形按钮"></a>什么是异形按钮</h1><p>异形按钮是指形状不是传统矩形的按钮。举例来说，一个异形按钮可能只有独角兽的区域能够被点击响应，而不是整个矩形。</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/file-20250404172940474.png" alt=""></p><h1 id="如何让异性按钮准确的被点击"><a href="#如何让异性按钮准确的被点击" class="headerlink" title="如何让异性按钮准确的被点击"></a>如何让异性按钮准确的被点击</h1><h2 id="方法一：自下而上拼凑"><a href="#方法一：自下而上拼凑" class="headerlink" title="方法一：自下而上拼凑"></a>方法一：自下而上拼凑</h2><p>按钮之所以能够响应点击，主要是根据图片矩形范围进行判断的。其范围判断是自下而上的，也就是说如果有子对象图片，子对象图片的范围也会算为可点击范围。</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/子对象也能影响动画.gif" alt=""></p><p>可以通过这种方式来拼凑多个矩形<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/file-20250404203744320.png" alt=""></p><h2 id="方法二：-透明度命中最小阈值"><a href="#方法二：-透明度命中最小阈值" class="headerlink" title="方法二： 透明度命中最小阈值"></a>方法二： 透明度命中最小阈值</h2><p>先开启读取写入<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/24.%E5%BC%82%E6%80%A7%E6%8C%89%E9%92%AE/file-20250404204018863.png" alt=""></p><p>代码设置Alpha 透明度命中测试的最小阈值<br>当设置了 alphaHitTestMinimumThreshold 后，只有当物体的不透明度大于等于该阈值时，才会进行命中测试。<br>换句话说，只有当物体的不透明度超过设定的最小阈值时，用户的点击事件或射线检测才会被认为是有效的。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异形图片</span></span><br><span class="line"><span class="keyword">public</span> Image image;</span><br><span class="line"></span><br><span class="line">image.alphaHitTestMinimumThreshold = <span class="number">0.1f</span>;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是异形按钮&quot;&gt;&lt;a href=&quot;#什么是异形按钮&quot; class=&quot;headerlink&quot; title=&quot;什么是异形按钮&quot;&gt;&lt;/a&gt;什么是异形按钮&lt;/h1&gt;&lt;p&gt;异形按钮是指形状不是传统矩形的按钮。举例来说，一个异形按钮可能只有独角兽的区域能够被点击响应，而不是</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>23.模型和粒子特效显示在UI之前</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/</id>
    <published>2025-04-04T08:52:40.000Z</published>
    <updated>2025-04-04T09:27:50.062Z</updated>
    
    <content type="html"><![CDATA[<h1 id="模型显示在UI之前"><a href="#模型显示在UI之前" class="headerlink" title="模型显示在UI之前"></a>模型显示在UI之前</h1><h2 id="直接用摄像机渲染3D物体（多个）"><a href="#直接用摄像机渲染3D物体（多个）" class="headerlink" title="直接用摄像机渲染3D物体（多个）"></a>直接用摄像机渲染3D物体（多个）</h2><a href="/2025/03/28/UI%E7%B3%BB%E7%BB%9F/UGUI/3.Canvas%E7%94%BB%E5%B8%83%E7%BB%84%E4%BB%B6/#eg%EF%BC%9A" title="3.Canvas画布组件">3.Canvas画布组件</a><p>Canvas的渲染模式只要不是覆盖模式。摄像机模式和世界（3D）模式都可以让模型显示在UI之前（Z轴在UI元素之前即可）。</p><p>注意：<br>建议使用专门的摄像机渲染UI相关内容。<br>UI面板上的3D物体建议也用UI摄像机进行渲染。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/file-20250404170451833.png" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/模型显示在UI前动画.gif" alt=""></p><h2 id="将3D物体渲染在图片上，通过图片显示（单个）"><a href="#将3D物体渲染在图片上，通过图片显示（单个）" class="headerlink" title="将3D物体渲染在图片上，通过图片显示（单个）"></a>将3D物体渲染在图片上，通过图片显示（单个）</h2><p>专门使用一个摄像机渲染3D模型，将其渲染内容输出到 Render Texture 上，然后再将渲染的图显示在UI上。<br>这种方式不管Canvas的渲染模式是哪种都可以使用。</p><p>创建一个摄像机，设置如下<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/file-20250404171046470.png" alt=""></p><p>添加想要渲染的模型，更改图层<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/file-20250404171146191.png" alt=""></p><p>创建渲染器纹理，然后将摄像机关联摄像机的目标纹理</p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/file-20250404171352235.png" alt=""></p><p>然后可以通过UGUI中的RawImage来渲染出来，模型改变其渲染的图片也会改变<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/file-20250404171630975.png" alt=""></p><h1 id="粒子特效显示在UI之前"><a href="#粒子特效显示在UI之前" class="headerlink" title="粒子特效显示在UI之前"></a>粒子特效显示在UI之前</h1><p>粒子特效的显示和3D物体类似。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/粒子特效显示在UI前动画.gif" alt=""></p><p>注意：在摄像机模式下时，可以在粒子组件的Renderer相关参数中改变排序层 让粒子特效始终显示在其之前不受Z轴影响<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/23.%E6%A8%A1%E5%9E%8B%E5%92%8C%E7%B2%92%E5%AD%90%E7%89%B9%E6%95%88%E6%98%BE%E7%A4%BA%E5%9C%A8UI%E4%B9%8B%E5%89%8D/粒子特效显示在UI前排序层动画.gif" alt=""></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;模型显示在UI之前&quot;&gt;&lt;a href=&quot;#模型显示在UI之前&quot; class=&quot;headerlink&quot; title=&quot;模型显示在UI之前&quot;&gt;&lt;/a&gt;模型显示在UI之前&lt;/h1&gt;&lt;h2 id=&quot;直接用摄像机渲染3D物体（多个）&quot;&gt;&lt;a href=&quot;#直接用摄像机渲染3</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>22.Mask遮罩</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/</id>
    <published>2025-04-04T08:35:31.000Z</published>
    <updated>2025-04-04T08:51:24.517Z</updated>
    
    <content type="html"><![CDATA[<h1 id="遮罩是什么"><a href="#遮罩是什么" class="headerlink" title="遮罩是什么"></a>遮罩是什么</h1><p>遮罩是一种在不改变图片的情况下，让图片在游戏中只显示其中的一部分的组件。<br>比如：ScrollView滚动视图中的ViewPort就包含遮罩组件，这导致在滚动视图中只有在可见范围内才能看到组件。<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/file-20250404163733537.png" alt=""><br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/file-20250404163614861.png" alt=""></p><h1 id="使用遮罩"><a href="#使用遮罩" class="headerlink" title="使用遮罩"></a>使用遮罩</h1><p>遮罩的关键组件是Mask组件，通过在父对象上添加Mask组件即可遮罩其子对象。<br>父物体：添加了Mask组件的UI元素。<br>子物体：需要被遮罩的UI元素。</p><p><strong>创建一个父物体，给父物体添加Mask组件，然后将想被遮罩影响的添加到其子物体中</strong></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/遮罩动画.gif" alt=""></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/22.Mask%E9%81%AE%E7%BD%A9/file-20250404164916890.png" alt=""></p><p>注意：<br>想要被遮罩的Image需要勾选Maskable。<br>只要父对象添加了Mask组件，那么所有的UI子对象都会被遮罩。<br>遮罩父对象图片的制作，不透明的地方显示，透明的地方被遮罩。</p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;遮罩是什么&quot;&gt;&lt;a href=&quot;#遮罩是什么&quot; class=&quot;headerlink&quot; title=&quot;遮罩是什么&quot;&gt;&lt;/a&gt;遮罩是什么&lt;/h1&gt;&lt;p&gt;遮罩是一种在不改变图片的情况下，让图片在游戏中只显示其中的一部分的组件。&lt;br&gt;比如：ScrollView滚动视图中</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>21.屏幕坐标转UI相对坐标</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/21.%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E8%BD%ACUI%E7%9B%B8%E5%AF%B9%E5%9D%90%E6%A0%87/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/21.%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E8%BD%ACUI%E7%9B%B8%E5%AF%B9%E5%9D%90%E6%A0%87/</id>
    <published>2025-04-04T06:18:21.000Z</published>
    <updated>2025-04-04T08:10:49.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id="RectTransformUtility类"><a href="#RectTransformUtility类" class="headerlink" title="RectTransformUtility类"></a>RectTransformUtility类</h1><p>RectTransformUtility 是 Unity 中的一个静态类，专门用于处理与 RectTransform 相关的计算和操作主，比如一些坐标的转换等操作。RectTransformUtility 提供了一些非常实用的方法，比如将屏幕空间坐标转换为 UI 空间的坐标，或者判断一个点是否在某个 RectTransform 的范围内。</p><h1 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h1><p>ScreenPointToLocalPointInRectangle<br><strong>将屏幕坐标点转换为RectTransform 的局部空间中的点</strong><br><strong>rect</strong>：目标局部空间 RectTransform。<br> 这里一般是其xxx父对象</p><p><strong>screenPoint</strong>： 屏幕空间中的点（通常是鼠标点击的位置）。</p><p><strong>cam</strong>：<br>用于渲染 UI 的摄像机。如果 UI 是在世界空间中渲染的，这里需要传入摄像机；如果是在屏幕空间中渲染的，可以传入 null。<br>这里是根据Canvas的渲染模式来的，当Canvas的渲染模式为<strong>摄像机模式</strong>或者<strong>世界空间模式</strong>时不为空，<br>这里可以使用<br><code>eventData.enterEventCamera</code>：当射线从摄像机发射出去并与 UI 元素交互时，此属性会记录下这一过程中使用的摄像机。<br><code>Canvas.worldCamera</code>：与 Canvas 关联的摄像机</p><p><strong>localPoint</strong>： 转换后的局部空间中的点。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">ScreenPointToLocalPointInRectangle</span>(<span class="params"></span></span></span><br><span class="line"><span class="params"><span class="function">    RectTransform rect, </span></span></span><br><span class="line"><span class="params"><span class="function">    Vector2 screenPoint, </span></span></span><br><span class="line"><span class="params"><span class="function">    Camera cam, </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="keyword">out</span> Vector2 localPoint</span></span></span><br><span class="line"><span class="params"><span class="function"></span>)</span>;</span><br></pre></td></tr></table></figure></p><p>eg:<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/21.%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E8%BD%ACUI%E7%9B%B8%E5%AF%B9%E5%9D%90%E6%A0%87/UI局部坐标转换动画.gif" alt=""><br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScreenPointToLocalPointInRectangleTest</span> : <span class="title">MonoBehaviour</span>, <span class="title">IDragHandler</span>, <span class="title">IBeginDragHandler</span>, <span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> RectTransform rectTransform;</span><br><span class="line">    <span class="keyword">private</span> Canvas canvas;</span><br><span class="line">    <span class="keyword">private</span> Vector2 offset; <span class="comment">// 记录鼠标点击点与 UI 元素中心点的偏移</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        canvas = GetComponentInParent&lt;Canvas&gt;(); <span class="comment">// 获取 UI 所在的 Canvas</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeginDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 将鼠标点击的屏幕坐标转换为 UI 元素的局部坐标</span></span><br><span class="line">        RectTransformUtility.ScreenPointToLocalPointInRectangle(</span><br><span class="line">            rectTransform.parent.transform <span class="keyword">as</span> RectTransform,</span><br><span class="line">            eventData.position,</span><br><span class="line">            <span class="comment">//eventData.enterEventCamera, // 这样也行</span></span><br><span class="line">            canvas.worldCamera,</span><br><span class="line">            <span class="keyword">out</span> Vector2 localPoint</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算偏移量（鼠标点击点与 UI 元素中心点的差值）</span></span><br><span class="line">        offset = rectTransform.anchoredPosition - localPoint;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 将鼠标的屏幕坐标转换为 UI 元素的局部坐标</span></span><br><span class="line">        RectTransformUtility.ScreenPointToLocalPointInRectangle(</span><br><span class="line">            rectTransform.parent.transform <span class="keyword">as</span> RectTransform,</span><br><span class="line">            eventData.position,</span><br><span class="line">            <span class="comment">//eventData.enterEventCamera, // 这样也行</span></span><br><span class="line">            canvas.worldCamera,</span><br><span class="line">            <span class="keyword">out</span> Vector2 localPoint</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新 UI 元素的位置，保持与鼠标的偏移</span></span><br><span class="line">        rectTransform.anchoredPosition = localPoint + offset;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这样也行</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEndDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;拖拽结束&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/21.%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E8%BD%ACUI%E7%9B%B8%E5%AF%B9%E5%9D%90%E6%A0%87/UI局部坐标转换3动画.gif" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScreenPointToLocalPointInRectangleTest</span> : <span class="title">MonoBehaviour</span>, <span class="title">IDragHandler</span>, <span class="title">IBeginDragHandler</span>, <span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> RectTransform rectTransform;</span><br><span class="line">    <span class="keyword">private</span> Canvas canvas;</span><br><span class="line">    <span class="keyword">private</span> Vector2 offset; <span class="comment">// 记录鼠标点击点与 UI 元素中心点的偏移</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        rectTransform = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        canvas = GetComponentInParent&lt;Canvas&gt;(); <span class="comment">// 获取 UI 所在的 Canvas</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 将鼠标的屏幕坐标转换为 UI 元素的局部坐标</span></span><br><span class="line">        RectTransformUtility.ScreenPointToLocalPointInRectangle(</span><br><span class="line">            rectTransform.parent.transform <span class="keyword">as</span> RectTransform,</span><br><span class="line">            eventData.position,</span><br><span class="line">            <span class="comment">//eventData.enterEventCamera, // 这样也行</span></span><br><span class="line">            canvas.worldCamera,</span><br><span class="line">            <span class="keyword">out</span> Vector2 localPoint</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 更新 UI 元素的位置，保持与鼠标的偏移</span></span><br><span class="line">        <span class="comment">//rectTransform.anchoredPosition = localPoint + offset;</span></span><br><span class="line">        <span class="keyword">this</span>.transform.localPosition = localPoint;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>用本章的知识改<a href="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/20.EventTigger%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%99%A8/#%E7%BB%83%E4%B9%A0" title="20.EventTigger事件触发器">之前的代码</a></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 摇杆位置</span></span><br><span class="line">    <span class="keyword">public</span> RectTransform imgJoystick;</span><br><span class="line">    <span class="comment">// 摇杆事件</span></span><br><span class="line">    <span class="keyword">public</span> EventTrigger et;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 摇杆事件</span></span><br><span class="line">        EventTrigger.Entry entry = <span class="keyword">new</span> EventTrigger.Entry();    <span class="comment">// 拖动中</span></span><br><span class="line">        entry.eventID = EventTriggerType.Drag;</span><br><span class="line">        entry.callback.AddListener((data) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            PointerEventData eventData = data <span class="keyword">as</span> PointerEventData;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 这是之前的版本</span></span><br><span class="line">            <span class="comment">//imgJoystick.position += new Vector3(eventData.delta.x, eventData.delta.y, 0); // 直接拖动摇杆</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// 这是新的版本</span></span><br><span class="line">            <span class="comment">// 将鼠标的屏幕坐标转换为 UI 元素的局部坐标</span></span><br><span class="line">            Vector2 localPoint;</span><br><span class="line">            RectTransformUtility.ScreenPointToLocalPointInRectangle(</span><br><span class="line">                imgJoystick.parent <span class="keyword">as</span> RectTransform,</span><br><span class="line">                eventData.position,</span><br><span class="line">                eventData.enterEventCamera,</span><br><span class="line">                <span class="keyword">out</span> localPoint</span><br><span class="line">            );</span><br><span class="line">            imgJoystick.localPosition = localPoint; <span class="comment">// 更新摇杆位置</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="comment">// anchoredPosition相对于锚点位置</span></span><br><span class="line">            <span class="keyword">if</span> (imgJoystick.anchoredPosition.magnitude &gt; <span class="number">180</span>) <span class="comment">// 限制摇杆范围</span></span><br><span class="line">            &#123;</span><br><span class="line">                imgJoystick.anchoredPosition = imgJoystick.anchoredPosition.normalized * <span class="number">180</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 玩家移动</span></span><br><span class="line">            player.Move(imgJoystick.anchoredPosition);</span><br><span class="line">        &#125;);</span><br><span class="line">        et.triggers.Add(entry);</span><br><span class="line"></span><br><span class="line">        entry = <span class="keyword">new</span> EventTrigger.Entry();    <span class="comment">// 拖动结束</span></span><br><span class="line">        entry.eventID = EventTriggerType.EndDrag;</span><br><span class="line">        entry.callback.AddListener((data) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 拖动结束，摇杆回到原点</span></span><br><span class="line">            imgJoystick.anchoredPosition = Vector2.zero;</span><br><span class="line">            <span class="comment">// 停止移动</span></span><br><span class="line">            player.Move(Vector2.zero);</span><br><span class="line">        &#125;);</span><br><span class="line">        et.triggers.Add(entry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;RectTransformUtility类&quot;&gt;&lt;a href=&quot;#RectTransformUtility类&quot; class=&quot;headerlink&quot; title=&quot;RectTransformUtility类&quot;&gt;&lt;/a&gt;RectTransformUtility类&lt;/</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>20.EventTigger事件触发器</title>
    <link href="http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/20.EventTigger%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%99%A8/"/>
    <id>http://example.com/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/20.EventTigger%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%99%A8/</id>
    <published>2025-04-04T02:20:37.000Z</published>
    <updated>2025-04-04T04:06:18.777Z</updated>
    
    <content type="html"><![CDATA[<h1 id="EventTrigger事件触发器"><a href="#EventTrigger事件触发器" class="headerlink" title="EventTrigger事件触发器"></a>EventTrigger事件触发器</h1><p>EventTrigger是事件触发器组件，继承了<a href="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/19.UI%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3/" title="19.UI事件监听接口">上节课</a>中学习的所有事件接口的脚本。它可以让我们更方便地为控件添加事件监听。</p><h1 id="使用EventTrigger"><a href="#使用EventTrigger" class="headerlink" title="使用EventTrigger"></a>使用EventTrigger</h1><p>一·、拖曳脚本<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventTriggerExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerEnter</span>(<span class="params">BaseEventData data</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        PointerEventData pointerEventData = data <span class="keyword">as</span> PointerEventData;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;鼠标进入<span class="subst">&#123;pointerEventData.position&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/20.EventTigger%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%99%A8/file-20250404103419646.png" alt=""></p><p>二、代码添加</p><p><strong>什么是 EventTrigger.Entry？</strong><br>EventTrigger.Entry 是 Unity 中 EventTrigger 组件的一个核心部分。它表示一个事件类型（如鼠标点击、鼠标悬停等）及其对应的回调函数列表。简单来说，EventTrigger.Entry 是一个“事件条目”，它定义了：</p><p><strong>事件类型（eventID）</strong>：比如 PointerClick、PointerEnter 等。EventTriggerType 枚举值<br><strong>回调函数列表（callback）</strong>：当事件发生时，这些函数会被调用。</p><p>举个例子：<br>你希望一个按钮在被点击时改变颜色，同时在被悬停时显示提示信息，这时就需要两个 EventTrigger.Entry，一个用于 PointerClick，另一个用于 PointerEnter。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EventTriggerExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取按钮的 EventTrigger 组件</span></span><br><span class="line">        EventTrigger eventTrigger = gameObject.AddComponent&lt;EventTrigger&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 PointerClick 事件条目</span></span><br><span class="line">        EventTrigger.Entry clickEntry = <span class="keyword">new</span> EventTrigger.Entry();</span><br><span class="line">        clickEntry.eventID = EventTriggerType.PointerClick; <span class="comment">// 事件类型</span></span><br><span class="line">        clickEntry.callback.AddListener((data) =&gt; &#123; OnPointerClick((PointerEventData)data); &#125;); <span class="comment">// 回调函数</span></span><br><span class="line">        eventTrigger.triggers.Add(clickEntry); <span class="comment">// 添加到 EventTrigger</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建 PointerEnter 事件条目</span></span><br><span class="line">        EventTrigger.Entry enterEntry = <span class="keyword">new</span> EventTrigger.Entry();</span><br><span class="line">        enterEntry.eventID = EventTriggerType.PointerEnter; <span class="comment">// 事件类型</span></span><br><span class="line">        enterEntry.callback.AddListener((data) =&gt; &#123; OnPointerEnter((PointerEventData)data); &#125;); <span class="comment">// 回调函数</span></span><br><span class="line">        eventTrigger.triggers.Add(enterEntry); <span class="comment">// 添加到 EventTrigger</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnPointerClick</span>(<span class="params">PointerEventData data</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;按钮被点击了！&quot;</span>);</span><br><span class="line">        GetComponent&lt;Image&gt;().color = Color.green; <span class="comment">// 改变按钮颜色</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnPointerEnter</span>(<span class="params">PointerEventData data</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标进入了按钮！&quot;</span>);</span><br><span class="line">        GetComponent&lt;Image&gt;().color = Color.yellow; <span class="comment">// 改变按钮颜色</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>在UI事件监听接口上节课的练习题基础上，请用现在所学知识，<br>制作一个这样的功能：制作一个UGUI摇杆可以控制场景上的对象移动</p><p>先拼好摇杆，然后添加EventTrigger<br><img src="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/20.EventTigger%E4%BA%8B%E4%BB%B6%E8%A7%A6%E5%8F%91%E5%99%A8/file-20250404120056427.png" alt=""></p><p>关联好GamePanel<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 摇杆位置</span></span><br><span class="line">    <span class="keyword">public</span> RectTransform imgJoystick;</span><br><span class="line">    <span class="comment">// 摇杆事件</span></span><br><span class="line">    <span class="keyword">public</span> EventTrigger et;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 摇杆事件</span></span><br><span class="line">        EventTrigger.Entry entry = <span class="keyword">new</span> EventTrigger.Entry();    <span class="comment">// 拖动中</span></span><br><span class="line">        entry.eventID = EventTriggerType.Drag;</span><br><span class="line">        entry.callback.AddListener((data) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            PointerEventData eventData = data <span class="keyword">as</span> PointerEventData;</span><br><span class="line">            imgJoystick.position += <span class="keyword">new</span> Vector3(eventData.delta.x, eventData.delta.y, <span class="number">0</span>); <span class="comment">// 直接拖动摇杆</span></span><br><span class="line">            <span class="comment">// anchoredPosition相对于锚点位置</span></span><br><span class="line">            <span class="keyword">if</span> (imgJoystick.anchoredPosition.magnitude &gt; <span class="number">180</span>) <span class="comment">// 限制摇杆范围</span></span><br><span class="line">            &#123;</span><br><span class="line">                imgJoystick.anchoredPosition = imgJoystick.anchoredPosition.normalized * <span class="number">180</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 玩家移动</span></span><br><span class="line">            player.Move(imgJoystick.anchoredPosition);</span><br><span class="line">        &#125;);</span><br><span class="line">        et.triggers.Add(entry);</span><br><span class="line"></span><br><span class="line">        entry = <span class="keyword">new</span> EventTrigger.Entry();    <span class="comment">// 拖动结束</span></span><br><span class="line">        entry.eventID = EventTriggerType.EndDrag;</span><br><span class="line">        entry.callback.AddListener((data) =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 拖动结束，摇杆回到原点</span></span><br><span class="line">            imgJoystick.anchoredPosition = Vector2.zero;</span><br><span class="line">            <span class="comment">// 停止移动</span></span><br><span class="line">            player.Move(Vector2.zero);</span><br><span class="line">        &#125;);</span><br><span class="line">        et.triggers.Add(entry);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>通过摇杆方向设置玩家移动<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerObj</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> AudioClip audioClip;</span><br><span class="line">    <span class="keyword">private</span> Vector3 nowMoveDir = Vector3.zero;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> roundSpeed = <span class="number">10f</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> moveSpeed = <span class="number">5f</span>;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nowMoveDir != Vector3.zero)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 移动</span></span><br><span class="line">            <span class="keyword">this</span>.transform.Translate(transform.forward * Time.deltaTime * moveSpeed, Space.World);</span><br><span class="line">            <span class="comment">// 旋转</span></span><br><span class="line">            Quaternion targetRotation = Quaternion.LookRotation(nowMoveDir);</span><br><span class="line">            <span class="keyword">this</span>.transform.rotation = Quaternion.Slerp(<span class="keyword">this</span>.transform.rotation, targetRotation, Time.deltaTime * roundSpeed);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 传入摇杆移动方向</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Move</span>(<span class="params">Vector2 dir</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        nowMoveDir.x = dir.x;</span><br><span class="line">        nowMoveDir.y = <span class="number">0</span>;</span><br><span class="line">        nowMoveDir.z = dir.y;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Fire</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (MusicData.SoundIsOpen)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 播放音效</span></span><br><span class="line">            AudioSource audioSource = <span class="keyword">this</span>.gameObject.AddComponent&lt;AudioSource&gt;();</span><br><span class="line">            audioSource.clip = audioClip;</span><br><span class="line">            audioSource.volume = MusicData.SoundVolume;</span><br><span class="line">            audioSource.Play();</span><br><span class="line">            Destroy(audioSource, <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        Instantiate(Resources.Load&lt;GameObject&gt;(<span class="string">&quot;Bullet&quot;</span>), <span class="keyword">this</span>.transform.position, <span class="keyword">this</span>.transform.rotation);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;EventTrigger事件触发器&quot;&gt;&lt;a href=&quot;#EventTrigger事件触发器&quot; class=&quot;headerlink&quot; title=&quot;EventTrigger事件触发器&quot;&gt;&lt;/a&gt;EventTrigger事件触发器&lt;/h1&gt;&lt;p&gt;EventTrigg</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>19.UI事件监听接口</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/19.UI%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/19.UI%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3/</id>
    <published>2025-04-02T13:19:29.000Z</published>
    <updated>2025-04-04T06:48:09.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="UGUI事件接口"><a href="#UGUI事件接口" class="headerlink" title="UGUI事件接口"></a>UGUI事件接口</h1><p>UGUI事件接口用于解决控件所提供的常规事件监听列表无法满足的需求，例如长按、双击、拖拽等功能，以及让基础控件如Image、Text、RawImage响应玩家输入的情况。<br>而事件接口就是用来处理类似问题,让所有控件都能够添加更多的事件监听来处理对应的逻辑。</p><h1 id="常用事件接口"><a href="#常用事件接口" class="headerlink" title="常用事件接口"></a>常用事件接口</h1><h2 id="IPointerClickHandler-鼠标点击"><a href="#IPointerClickHandler-鼠标点击" class="headerlink" title="IPointerClickHandler 鼠标点击"></a>IPointerClickHandler 鼠标点击</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ClickHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IPointerClickHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerClick</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标点击&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IPointerEnterHandler-和-IPointerExitHandler-鼠标进入和离开"><a href="#IPointerEnterHandler-和-IPointerExitHandler-鼠标进入和离开" class="headerlink" title="IPointerEnterHandler 和 IPointerExitHandler 鼠标进入和离开"></a>IPointerEnterHandler 和 IPointerExitHandler 鼠标进入和离开</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">HoverHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IPointerEnterHandler</span>, <span class="title">IPointerExitHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerEnter</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标进入&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerExit</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标退出&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IPointerDownHandler-和-IPointerUpHandler-鼠标按下和释放"><a href="#IPointerDownHandler-和-IPointerUpHandler-鼠标按下和释放" class="headerlink" title="IPointerDownHandler 和 IPointerUpHandler 鼠标按下和释放"></a>IPointerDownHandler 和 IPointerUpHandler 鼠标按下和释放</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MouseDownUpHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IPointerDownHandler</span>, <span class="title">IPointerUpHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerDown</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标按下&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerUp</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;鼠标释放&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IBeginDragHandler-IDragHandler-IEndDragHandler-鼠标拖曳"><a href="#IBeginDragHandler-IDragHandler-IEndDragHandler-鼠标拖曳" class="headerlink" title="IBeginDragHandler, IDragHandler, IEndDragHandler 鼠标拖曳"></a>IBeginDragHandler, IDragHandler, IEndDragHandler 鼠标拖曳</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DragHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IBeginDragHandler</span>, <span class="title">IDragHandler</span>, <span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeginDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;开始拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;正在拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEndDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;结束拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="不常用"><a href="#不常用" class="headerlink" title="不常用"></a>不常用</h1><h2 id="IInitializePotentialDragHandler-初始化拖曳"><a href="#IInitializePotentialDragHandler-初始化拖曳" class="headerlink" title="IInitializePotentialDragHandler 初始化拖曳"></a>IInitializePotentialDragHandler 初始化拖曳</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DragHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IInitializePotentialDragHandler</span>, <span class="title">IBeginDragHandler</span>, <span class="title">IDragHandler</span>, <span class="title">IEndDragHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnInitializePotentialDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;初始化拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnBeginDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;开始拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;正在拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnEndDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;结束拖曳&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="UpdateSelectedHandler-选中时每帧执行"><a href="#UpdateSelectedHandler-选中时每帧执行" class="headerlink" title="UpdateSelectedHandler 选中时每帧执行"></a>UpdateSelectedHandler 选中时每帧执行</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UpdateSelectedHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IUpdateSelectedHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnUpdateSelected</span>(<span class="params">BaseEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;每次勾选时在选定对象时调用&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="IScrollHandler-鼠标滚轮滚动"><a href="#IScrollHandler-鼠标滚轮滚动" class="headerlink" title="IScrollHandler 鼠标滚轮滚动"></a>IScrollHandler 鼠标滚轮滚动</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IScrollHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnScroll</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Mouse Scroll Wheel Used!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ISelectHandler-和-IDeselectHandler-UI元素获得和失去焦点"><a href="#ISelectHandler-和-IDeselectHandler-UI元素获得和失去焦点" class="headerlink" title="ISelectHandler 和 IDeselectHandler UI元素获得和失去焦点"></a>ISelectHandler 和 IDeselectHandler UI元素获得和失去焦点</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SelectHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">ISelectHandler</span>, <span class="title">IDeselectHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnSelect</span>(<span class="params">BaseEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;UI Element Selected!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDeselect</span>(<span class="params">BaseEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;UI Element Deselected!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ISubmitHandler和-ICancelHandler-提交和取消"><a href="#ISubmitHandler和-ICancelHandler-提交和取消" class="headerlink" title="ISubmitHandler和 ICancelHandler 提交和取消"></a>ISubmitHandler和 ICancelHandler 提交和取消</h2><p>提交（如按下回车键）和取消（如按下ESC键）的事件。<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SubmitCancelHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">ISubmitHandler</span>, <span class="title">ICancelHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnSubmit</span>(<span class="params">BaseEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Submit Event Triggered!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnCancel</span>(<span class="params">BaseEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Cancel Event Triggered!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="IMoveHandler-导航"><a href="#IMoveHandler-导航" class="headerlink" title="IMoveHandler 导航"></a>IMoveHandler 导航</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">MoveHandler</span> : <span class="title">MonoBehaviour</span>, <span class="title">IMoveHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnMove</span>(<span class="params">AxisEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Move Event Triggered!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="使用UGUI事件接口"><a href="#使用UGUI事件接口" class="headerlink" title="使用UGUI事件接口"></a>使用UGUI事件接口</h1><p>将该脚本挂载到想要监听自定义事件的UI控件上就行<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/19.UI%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3/file-20250402221417212.png" alt=""></p><h1 id="PointerEventData"><a href="#PointerEventData" class="headerlink" title="PointerEventData"></a>PointerEventData</h1><p>PointerEventData 是 Unity 中 EventSystem 的一部分，专门用于处理与指针（如鼠标、触摸屏）相关的事件。它是一个数据结构，包含了与指针事件相关的详细信息，例如指针的位置、点击的物体、拖拽的状态等。PointerEventData 被广泛用于 Unity 的 UI 事件系统中，尤其是在实现 IPointerClickHandler、IDragHandler 等接口时。</p><p>以下是对 PointerEventData 的详细说明，包括它的常用属性和方法：</p><h2 id="position"><a href="#position" class="headerlink" title="position"></a><strong><code>position</code></strong></h2><p> 类型：<code>Vector2</code><br>说明：指针<strong>事件发生</strong>时的屏幕坐标（以像素为单位）。<br>示例：<code>eventData.position</code> 可以获取鼠标点击时的屏幕位置。</p><h2 id="pressPosition"><a href="#pressPosition" class="headerlink" title="pressPosition"></a><strong><code>pressPosition</code></strong></h2><p>类型：<code>Vector2</code><br>说明：指针按下时的屏幕坐标。<br>示例：可以用于计算拖拽的距离。</p><h2 id="pointerPress"><a href="#pointerPress" class="headerlink" title="pointerPress"></a><strong><code>pointerPress</code></strong></h2><p>类型：<code>GameObject</code><br>说明：当前被指针按下的游戏对象。<br>示例：<code>eventData.pointerPress</code> 可以获取当前点击的 UI 元素。</p><h2 id="pointerCurrentRaycast"><a href="#pointerCurrentRaycast" class="headerlink" title="pointerCurrentRaycast"></a><strong><code>pointerCurrentRaycast</code></strong></h2><p>类型：<code>RaycastResult</code><br>说明：指针当前射线检测的结果，包含被检测到的对象及其相关信息。<br>示例：<code>eventData.pointerCurrentRaycast.gameObject</code> 获取当前指针指向的对象。</p><h2 id="pointerDrag"><a href="#pointerDrag" class="headerlink" title="pointerDrag"></a><strong><code>pointerDrag</code></strong></h2><p>类型：<code>GameObject</code><br>说明：当前被拖拽的游戏对象。<br>示例：在 <code>IDragHandler</code> 中，<code>eventData.pointerDrag</code> 是正在被拖拽的对象。</p><h2 id="button"><a href="#button" class="headerlink" title="button"></a><strong><code>button</code></strong></h2><p>类型：<code>PointerEventData.InputButton</code><br>说明：触发事件的鼠标按钮（左键、右键、中键）。<br>示例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (eventData.button == PointerEventData.InputButton.Left)</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;Left Mouse Button Clicked!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="clickCount"><a href="#clickCount" class="headerlink" title="clickCount"></a><strong><code>clickCount</code></strong></h2><p>类型：<code>int</code><br>说明：连击次数（例如双击事件）。<br>示例：<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (eventData.clickCount == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;Double Clicked!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="delta"><a href="#delta" class="headerlink" title="delta"></a><strong><code>delta</code></strong></h2><p>类型：<code>Vector2</code><br>说明：指针的移动距离（以像素为单位）。<br>示例：在 IDragHandler 中，eventData.delta 可以获取拖拽的偏移量。</p><h2 id="scrollDelta"><a href="#scrollDelta" class="headerlink" title="scrollDelta"></a><strong><code>scrollDelta</code></strong></h2><p>类型：<code>Vector2</code><br>说明：滚轮的滚动量。<br>示例：在 IScrollHandler 中，eventData.scrollDelta 可以获取滚轮的滚动方向。</p><h2 id="IsPointerMoving-判断指针是否在移动。"><a href="#IsPointerMoving-判断指针是否在移动。" class="headerlink" title="IsPointerMoving() 判断指针是否在移动。"></a><strong><code>IsPointerMoving()</code></strong> 判断指针是否在移动。</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (eventData.IsPointerMoving())</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;Pointer is moving!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="IsScrolling-判断是否正在滚动。"><a href="#IsScrolling-判断是否正在滚动。" class="headerlink" title="IsScrolling() 判断是否正在滚动。"></a><strong><code>IsScrolling()</code></strong> 判断是否正在滚动。</h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (eventData.IsScrolling())</span><br><span class="line">&#123;</span><br><span class="line">    Debug.Log(<span class="string">&quot;Scrolling detected!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="pressEventCamera-按下时所在的相机"><a href="#pressEventCamera-按下时所在的相机" class="headerlink" title="pressEventCamera    按下时所在的相机"></a>pressEventCamera    按下时所在的相机</h2><p>处理不同相机下的坐标转换（如 UI 相机与世界相机）<br><a href="/2025/04/04/UI%E7%B3%BB%E7%BB%9F/UGUI/21.%E5%B1%8F%E5%B9%95%E5%9D%90%E6%A0%87%E8%BD%ACUI%E7%9B%B8%E5%AF%B9%E5%9D%90%E6%A0%87/" title="21.屏幕坐标转UI相对坐标">21.屏幕坐标转UI相对坐标</a></p><h2 id="enterEventCamera-进入-UI-元素时的相机"><a href="#enterEventCamera-进入-UI-元素时的相机" class="headerlink" title="enterEventCamera    进入 UI 元素时的相机"></a>enterEventCamera    进入 UI 元素时的相机</h2><p>多相机界面中事件归属判断</p><h2 id="eg："><a href="#eg：" class="headerlink" title="eg："></a><strong>eg：</strong></h2><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.EventSystems;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PointerEventExample</span> : <span class="title">MonoBehaviour</span>, </span><br><span class="line">    <span class="title">IPointerDownHandler</span>, </span><br><span class="line">    <span class="title">IPointerUpHandler</span>, </span><br><span class="line">    <span class="title">IDragHandler</span>,</span><br><span class="line">    <span class="title">IPointerClickHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 记录按下时的信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> pointerID;</span><br><span class="line">    <span class="keyword">private</span> Vector2 pressPos;</span><br><span class="line">    <span class="keyword">private</span> Camera pressCam;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> pressTime;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 拖拽相关</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isDragging;</span><br><span class="line">    <span class="keyword">private</span> Vector2 startDragPos;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 双击检测</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> lastClickTime;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> clickCount;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerDown</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        pointerID = eventData.pointerId;  <span class="comment">// 记录触摸 ID（多指区分）</span></span><br><span class="line">        pressPos = eventData.position;    <span class="comment">// 按下时的屏幕坐标</span></span><br><span class="line">        pressCam = eventData.pressEventCamera;  <span class="comment">// 按下时的相机</span></span><br><span class="line">        pressTime = Time.time;            <span class="comment">// 记录按下时间</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 初始化拖拽起点</span></span><br><span class="line">        startDragPos = eventData.position;</span><br><span class="line">        isDragging = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerUp</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        isDragging = <span class="literal">false</span>;</span><br><span class="line">        CheckClick(eventData);  <span class="comment">// 抬起时检查点击行为</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnDrag</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!isDragging) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算拖拽距离（delta：当前帧移动量）</span></span><br><span class="line">        Vector2 delta = eventData.delta;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;Drag Delta: <span class="subst">&#123;delta&#125;</span>&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 移动自身（示例：将 UI 元素位置增加拖拽量）</span></span><br><span class="line">        RectTransform rect = GetComponent&lt;RectTransform&gt;();</span><br><span class="line">        rect.anchoredPosition += delta;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerClick</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 处理点击事件</span></span><br><span class="line">        clickCount++;</span><br><span class="line">        lastClickTime = Time.time;</span><br><span class="line">        Debug.Log(<span class="string">$&quot;Click Count: <span class="subst">&#123;clickCount&#125;</span>&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CheckClick</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 双击检测：两次点击时间间隔小于 0.3 秒</span></span><br><span class="line">        <span class="keyword">if</span> (clickCount &gt;= <span class="number">2</span> &amp;&amp; (Time.time - lastClickTime) &lt; <span class="number">0.3f</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;Double Click Detected!&quot;</span>);</span><br><span class="line">            clickCount = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 单点击但未满足双击条件</span></span><br><span class="line">            <span class="built_in">float</span> clickDuration = Time.time - pressTime;</span><br><span class="line">            <span class="keyword">if</span> (clickDuration &lt; <span class="number">0.5f</span>)  <span class="comment">// 点击时间短于 0.5 秒视为有效点击</span></span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(<span class="string">&quot;Single Click!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 其他实时逻辑（例如根据 pressEventCamera 转换坐标）</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Vector3 worldPos = pressCam.ScreenToWorldPoint(Input.mousePosition);</span><br><span class="line">            Debug.Log(<span class="string">$&quot;World Position: <span class="subst">&#123;worldPos&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>这里通过宽度来设置进度条</p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/19.UI%E4%BA%8B%E4%BB%B6%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3/通过设置宽度来做进度条动画.gif" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 关联长按事件</span></span><br><span class="line">    <span class="keyword">public</span> LongPress longPress;</span><br><span class="line">    <span class="comment">// 进度条根对象，用来控制显隐</span></span><br><span class="line">    <span class="keyword">public</span> GameObject imgRoot;</span><br><span class="line">    <span class="comment">// 进度条，用于控制进度</span></span><br><span class="line">    <span class="keyword">public</span> RectTransform imgBk;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 长按事件</span></span><br><span class="line">        longPress.downEvent += BtnDown;</span><br><span class="line">        longPress.upEvent += BtnUp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 计时</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">float</span> nowTime = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 是否按下</span></span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">bool</span> isDown = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// 进度条速度</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> addSpeed = <span class="number">1000</span>;</span><br><span class="line">    <span class="comment">// 血量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> hp = <span class="number">10</span>;</span><br><span class="line">    <span class="comment">// 按下</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BtnDown</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isDown = <span class="literal">true</span>;</span><br><span class="line">        nowTime = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 抬起</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BtnUp</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        isDown = <span class="literal">false</span>;</span><br><span class="line">        <span class="comment">// 清空进度条</span></span><br><span class="line">        imgBk.sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">0</span>, imgBk.sizeDelta.y);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isDown)</span><br><span class="line">        &#123;</span><br><span class="line">            nowTime += Time.deltaTime;</span><br><span class="line">            <span class="keyword">if</span> (nowTime &gt;= <span class="number">0.2f</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                imgRoot.SetActive(<span class="literal">true</span>);</span><br><span class="line">                imgBk.sizeDelta = <span class="keyword">new</span> Vector2(imgBk.sizeDelta.x + addSpeed * Time.deltaTime, imgBk.sizeDelta.y);</span><br><span class="line">                <span class="keyword">if</span> (imgBk.sizeDelta.x &gt;= <span class="number">800</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// 进度条满了, hp+</span></span><br><span class="line">                    imgBk.sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">0</span>, imgBk.sizeDelta.y);</span><br><span class="line">                    hp += <span class="number">10</span>;</span><br><span class="line">                    Debug.Log(<span class="string">$&quot;前血量：<span class="subst">&#123;hp&#125;</span>&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            imgRoot.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 抛出长按事件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">LongPress</span> : <span class="title">MonoBehaviour</span>, <span class="title">IPointerDownHandler</span>, <span class="title">IPointerUpHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Action downEvent;</span><br><span class="line">    <span class="keyword">public</span> Action upEvent;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerDown</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        downEvent?.Invoke();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnPointerUp</span>(<span class="params">PointerEventData eventData</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        upEvent?.Invoke();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;UGUI事件接口&quot;&gt;&lt;a href=&quot;#UGUI事件接口&quot; class=&quot;headerlink&quot; title=&quot;UGUI事件接口&quot;&gt;&lt;/a&gt;UGUI事件接口&lt;/h1&gt;&lt;p&gt;UGUI事件接口用于解决控件所提供的常规事件监听列表无法满足的需求，例如长按、双击、拖拽等功</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
  </entry>
  
  <entry>
    <title>18.图集制作</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/</id>
    <published>2025-04-02T12:11:02.000Z</published>
    <updated>2025-04-02T13:25:19.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么要打图集"><a href="#为什么要打图集" class="headerlink" title="为什么要打图集"></a>为什么要打图集</h1><a href="/2025/03/10/UI%E7%B3%BB%E7%BB%9F/NGUI/NGUI%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/" title="6.图集制作">NGUI里讲过的图集</a><a href="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/" title="16.SpriteAtlas精灵图集">unity核心图集</a><p>UGUI和NGUI使用上最大的不同是 NGUI使用前就要打图集。UGUI可以再之后再打图集。</p><p> <strong>图集的作用</strong></p><ul><li>减少Draw Call：每个独立的纹理都会增加Draw Call，而Draw Call是影响性能的主要因素之一。使用图集可以将多个纹理合并为一个，从而减少Draw Call。</li><li>优化内存：将多个小纹理合并为一个大纹理可以减少内存碎片，提高内存利用率。</li><li>适合UI和2D游戏：在UI元素或2D游戏中，通常需要大量的小纹理（如按钮、图标等），使用图集可以显著提高渲染效率。</li></ul><p>简单回顾DrawCall:<br>DC就是CPU通知GPU进行一次渲染的命令。<br>如果DC次数较多会导致游戏卡顿。<br>我们可以通过打图集，将小图合并成大图，将本应n次的DC变成1次DC来提高性能。</p><h1 id="在Unity中打开自带的打图集功能"><a href="#在Unity中打开自带的打图集功能" class="headerlink" title="在Unity中打开自带的打图集功能"></a>在Unity中打开自带的打图集功能</h1><a href="/2025/03/14/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/unity/unity%E6%A0%B8%E5%BF%83/16.SpriteAtlas%E7%B2%BE%E7%81%B5%E5%9B%BE%E9%9B%86/" title="16.SpriteAtlas精灵图集">16.SpriteAtlas精灵图集</a><p>Unity提供了一个内置的Sprite Atlas系统，可以自动将多个Sprite打包成一张图集。<br>步骤：<br>在Project窗口中右键，选择 Create &gt; Sprite Atlas。<br>将需要打包的Sprite拖入Sprite Atlas的 Objects for Packing 列表中。<br>在Sprite Renderer或Image组件中，直接使用Sprite，Unity会自动从图集中提取。</p><p>优点：自动生成，动态管理，适合动态变化的纹理。<br>缺点：需要了解Unity的Sprite Atlas系统。</p><p>可以通过在工程设置面板中选择Edit -&gt; Project Setting -&gt; Editor来打开Sprite Packer。</p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/file-20250402205008644.png" alt=""><br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/file-20250402205420064.png" alt=""></p><p><strong>Disabled</strong>：<br>完全禁用 Sprite Atlas 功能，项目中不会使用精灵图集相关特性。</p><p><strong>Sprite Atlas V1 - Enabled For Builds：</strong><br>使用 Sprite Atlas V1 版本，仅在项目构建（Build）时启用图集功能。编辑阶段不会处理图集，仅构建输出时生成图集。</p><p><strong>Sprite Atlas V1 - Always Enabled</strong>：<br>使用 Sprite Atlas V1 版本，无论编辑阶段还是构建阶段，始终启用图集功能，实时处理图集相关操作。</p><p><strong>Sprite Atlas V2 - Enabled</strong>：<br>使用 Sprite Atlas V2 版本（Unity 较新的图集方案，功能更灵活），默认全程启用，编辑和构建阶段均生效。</p><p><strong>Sprite Atlas V2 - Enabled For Builds</strong>：<br>使用 Sprite Atlas V2 版本，但仅在项目构建时启用。编辑阶段不处理图集，仅构建时生成最终图集，适合需要减少编辑时资源消耗的场景。</p><p><strong>在创建Sprite Atlas后，可以通过以下设置优化图集：</strong><br>Include in Build：是否将图集包含在构建中。<br>Allow Rotation：是否允许旋转Sprite以优化图集空间。<br>Padding：设置Sprite之间的间距，防止纹理边缘出现混合。<br>Compression：设置图集的压缩格式，以平衡质量和性能。</p><p>做UI的时候一般倾向于把下面两都取消勾选<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/file-20250402210620535.png" alt=""></p><p>直接添加图<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/18.%E5%9B%BE%E9%9B%86%E5%88%B6%E4%BD%9C/file-20250402211428343.png" alt=""></p><h1 id="代码中使用图集"><a href="#代码中使用图集" class="headerlink" title="代码中使用图集"></a>代码中使用图集</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取Sprite Atlas</span></span><br><span class="line">SpriteAtlas spriteAtlas = Resources.Load&lt;SpriteAtlas&gt;(<span class="string">&quot;SpriteAtlasName&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取图集中的特定Sprite</span></span><br><span class="line">Sprite sprite = spriteAtlas.GetSprite(<span class="string">&quot;SpriteName&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 应用到Sprite Renderer</span></span><br><span class="line">SpriteRenderer renderer = GetComponent&lt;SpriteRenderer&gt;();</span><br><span class="line">renderer.sprite = sprite;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="优化建议"><a href="#优化建议" class="headerlink" title="优化建议"></a>优化建议</h1><p>合理规划图集大小：图集过大会占用更多内存，过小会导致频繁切换图集。建议根据设备性能选择合适的图集大小（如2048x2048或1024x1024）。<br>动态加载图集：对于大型游戏，可以使用AssetBundle动态加载图集，减少初始加载时间。<br>避免过度打包：将不相关的Sprite打包到同一个图集中会导致资源浪费，建议按功能或场景分组打包。</p><h1 id="示例场景"><a href="#示例场景" class="headerlink" title="示例场景"></a>示例场景</h1><p>2D游戏中的角色动画<br>将角色的所有动画帧打包到一个图集中。<br>使用Sprite Atlas动态加载帧动画，减少Draw Call。<br>通过脚本控制动画播放：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerAnimation</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> SpriteAtlas playerAtlas;</span><br><span class="line">    <span class="keyword">public</span> SpriteRenderer spriteRenderer;</span><br><span class="line">    <span class="keyword">private</span> Sprite[] animationFrames;</span><br><span class="line">    <span class="keyword">private</span> <span class="built_in">int</span> currentFrame = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 获取动画帧</span></span><br><span class="line">        animationFrames = <span class="keyword">new</span> Sprite[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            animationFrames[i] = playerAtlas.GetSprite(<span class="string">$&quot;Frame_<span class="subst">&#123;i&#125;</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 播放动画</span></span><br><span class="line">        spriteRenderer.sprite = animationFrames[currentFrame];</span><br><span class="line">        currentFrame = (currentFrame + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;为什么要打图集&quot;&gt;&lt;a href=&quot;#为什么要打图集&quot; class=&quot;headerlink&quot; title=&quot;为什么要打图集&quot;&gt;&lt;/a&gt;为什么要打图集&lt;/h1&gt;&lt;a href=&quot;/2025/03/10/UI%E7%B3%BB%E7%BB%9F/NGUI/NGUI%E</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
  </entry>
  
  <entry>
    <title>17.Dropdown下拉列表控件</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-02T09:10:19.000Z</published>
    <updated>2025-04-02T12:10:44.698Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Dropdown是什么"><a href="#Dropdown是什么" class="headerlink" title="Dropdown是什么"></a>Dropdown是什么</h1><p>Dropdown是下拉列表（下拉选单）组件，是UGUI中用于处理下拉列表相关交互的关键组件。<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown开局动画.gif" alt=""></p><p>在Hierarchy视图右键 -&gt; UI -&gt; Dropdown。<br>Unity会自动创建一个Dropdown对象，并附带必要的子对象（Label、Arrow、Template等）。<br>默认创建的Dropdown由4组对象组成：</p><p>父对象<br>Dropdown组件依附的对象，还有一个Image组件作为背景图<br>子对象<br>Label：显示当前选中的选项。<br>Arrow：指示这是一个下拉菜单，通常是一个向下的箭头。<br>Template：下拉菜单的模板，包含一个ScrollView和一个Item模板。<br>Item：下拉菜单中的每一项，通常是一个Toggle控件。</p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172102925.png" alt=""></p><p>注意：Dropdown的Content会在游戏运行的时候自己扩展<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown的Content动画.gif" alt=""></p><h1 id="Dropdown-下拉列表控件参数"><a href="#Dropdown-下拉列表控件参数" class="headerlink" title="Dropdown 下拉列表控件参数"></a>Dropdown 下拉列表控件参数</h1><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown%20下拉列表控件参数.png" alt=""></p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172508961.png" alt=""></p><h2 id="Interactable：是否接受输入"><a href="#Interactable：是否接受输入" class="headerlink" title="Interactable：是否接受输入"></a>Interactable：是否接受输入</h2><h2 id="Transition：过渡效果"><a href="#Transition：过渡效果" class="headerlink" title="Transition：过渡效果"></a>Transition：过渡效果</h2><p>响应用户输入的过渡效果</p><h2 id="Navigation：导航模式"><a href="#Navigation：导航模式" class="headerlink" title="Navigation：导航模式"></a>Navigation：导航模式</h2><p>可以设置UI元素如何在播放模式中控制器导航</p><h2 id="Template：关联下拉列表对象"><a href="#Template：关联下拉列表对象" class="headerlink" title="Template：关联下拉列表对象"></a>Template：关联下拉列表对象</h2><h2 id="Caption-Text：关联显示当前选择内容的文本组件"><a href="#Caption-Text：关联显示当前选择内容的文本组件" class="headerlink" title="Caption Text：关联显示当前选择内容的文本组件"></a>Caption Text：关联显示当前选择内容的文本组件</h2><h2 id="Caption-Image：关联显示当前选择内容的图片组件"><a href="#Caption-Image：关联显示当前选择内容的图片组件" class="headerlink" title="Caption Image：关联显示当前选择内容的图片组件"></a>Caption Image：关联显示当前选择内容的图片组件</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402173448356.png" alt=""></p><h2 id="Item-Text：关联下拉列表选项用的文本控件"><a href="#Item-Text：关联下拉列表选项用的文本控件" class="headerlink" title="Item Text：关联下拉列表选项用的文本控件"></a>Item Text：关联下拉列表选项用的文本控件</h2><h2 id="Item-Image：关联下拉列表选项用的图片控件"><a href="#Item-Image：关联下拉列表选项用的图片控件" class="headerlink" title="Item Image：关联下拉列表选项用的图片控件"></a>Item Image：关联下拉列表选项用的图片控件</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402173521495.png" alt=""></p><h2 id="Value：当前所选选项的索引值"><a href="#Value：当前所选选项的索引值" class="headerlink" title="Value：当前所选选项的索引值"></a>Value：当前所选选项的索引值</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/Dropdown的Value参数动画.gif" alt=""></p><h2 id="Alpha-Fada-Speed：下拉列表窗口淡入淡出的速度"><a href="#Alpha-Fada-Speed：下拉列表窗口淡入淡出的速度" class="headerlink" title="Alpha Fada Speed：下拉列表窗口淡入淡出的速度"></a>Alpha Fada Speed：下拉列表窗口淡入淡出的速度</h2><h2 id="Options：存在的选项列表"><a href="#Options：存在的选项列表" class="headerlink" title="Options：存在的选项列表"></a>Options：存在的选项列表</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402172958115.png" alt=""></p><h1 id="代码控制"><a href="#代码控制" class="headerlink" title="代码控制"></a>代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Dropdown dropdown = GetComponent&lt;Dropdown&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下拉菜单当前选中项的索引</span></span><br><span class="line">print(dropdown.<span class="keyword">value</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 下拉菜单当前选中项的文本内容</span></span><br><span class="line">print(dropdown.options[dropdown.<span class="keyword">value</span>].text);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在下拉菜单的选项列表末尾添加一个新选项，该选项的文本内容为 &quot;123123123&quot;</span></span><br><span class="line">dropdown.options.Add(<span class="keyword">new</span> Dropdown.OptionData(<span class="string">&quot;123123123&quot;</span>));</span><br><span class="line"><span class="comment">// 添加很多新选项 </span></span><br><span class="line">dropdown.AddOptions(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;Option 1&quot;</span>, <span class="string">&quot;Option 2&quot;</span>, <span class="string">&quot;Option 3&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 清空现有选项 </span></span><br><span class="line">dropdown.ClearOptions();</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="监听事件的两种方式"><a href="#监听事件的两种方式" class="headerlink" title="监听事件的两种方式"></a>监听事件的两种方式</h1><p>一、拖脚本<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402174826362.png" alt=""></p><p>二、代码监听<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DropdownTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> Dropdown wifeDropdown;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        wifeDropdown.ClearOptions();</span><br><span class="line">        wifeDropdown.AddOptions(<span class="keyword">new</span> List&lt;<span class="built_in">string</span>&gt; &#123; <span class="string">&quot;鸢一折纸&quot;</span>, <span class="string">&quot;时崎狂三&quot;</span>, <span class="string">&quot;五河琴里&quot;</span> &#125;);</span><br><span class="line"></span><br><span class="line">        wifeDropdown.onValueChanged.AddListener(OnWifeChanged);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">OnWifeChanged</span>(<span class="params"><span class="built_in">int</span> index</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">string</span> wifeName = wifeDropdown.options[index].text;</span><br><span class="line">        Debug.Log(<span class="string">&quot;选择了&quot;</span> + wifeName);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 选择心意老婆</span></span><br><span class="line">        <span class="keyword">switch</span>(wifeName)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;鸢一折纸&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;鸢一折纸是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;时崎狂三&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;时崎狂三是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;五河琴里&quot;</span>:</span><br><span class="line">                Debug.Log(<span class="string">&quot;五河琴里是我的心意老婆&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>在上节课的ScrollView练习题基础上，请用现在所学知识，制作一个这样的功能：场景上有一个下拉列表，可以通过改变下拉列表来改变当前场景是白天还是黑夜</p><p>在游戏面板创建一个下拉列表，添加白天和黑夜选项。<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/17.Dropdown%E4%B8%8B%E6%8B%89%E5%88%97%E8%A1%A8%E6%8E%A7%E4%BB%B6/file-20250402194720116.png" alt=""></p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Light light;  <span class="comment">// 光源对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> Dropdown ddChange;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">&#123;</span><br><span class="line">    ddChange.onValueChanged.AddListener((index) =&gt; &#123;</span><br><span class="line">        <span class="keyword">switch</span> (index)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                light.intensity = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                light.intensity = <span class="number">0.3f</span>; </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Dropdown是什么&quot;&gt;&lt;a href=&quot;#Dropdown是什么&quot; class=&quot;headerlink&quot; title=&quot;Dropdown是什么&quot;&gt;&lt;/a&gt;Dropdown是什么&lt;/h1&gt;&lt;p&gt;Dropdown是下拉列表（下拉选单）组件，是UGUI中用于处理下拉</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>16.ScrollView滚动视图控件</title>
    <link href="http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/"/>
    <id>http://example.com/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/</id>
    <published>2025-04-02T06:53:59.000Z</published>
    <updated>2025-04-02T09:07:56.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ScrollRect是什么"><a href="#ScrollRect是什么" class="headerlink" title="ScrollRect是什么"></a>ScrollRect是什么</h1><p>ScrollRect是滚动视图组件，是UGUI中用于处理滚动视图相关交互的关键组件。<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView演示动画.gif" alt=""></p><p>在Unity编辑器中，右键点击 Hierarchy 面板，选择 UI &gt; ScrollView。<br>Unity会自动创建一个 ScrollView 对象，它包含一个 Viewport 和一个 Content 区域。<br>默认创建的ScrollRect由4组对象组成：</p><p>父对象——ScrollRect组件依附的对象，还有一个Image组件，作为背景图。<br>子对象：<br>Viewport：视口区域，决定了哪些内容可见。<br>Content：内容区域，所有要滚动显示的内容都放在这里。<br>Scrollbar (Horizontal/Vertical)：水平或垂直滚动条，用于控制内容的滚动。<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402145914739.png" alt=""></p><h1 id="ScrollView-滚动视图参数"><a href="#ScrollView-滚动视图参数" class="headerlink" title="ScrollView 滚动视图参数"></a>ScrollView 滚动视图参数</h1><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView%20滚动视图.png" alt=""></p><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402150245030.png" alt=""></p><h2 id="Content：内容区域，所有显示内容父对象"><a href="#Content：内容区域，所有显示内容父对象" class="headerlink" title="Content：内容区域，所有显示内容父对象"></a>Content：内容区域，所有显示内容父对象</h2><p>控制滚动视图显示内容的父对象，它的尺寸有多大<br>滚动视图就能拖多远<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollViewContent演示动画.gif" alt=""></p><h2 id="Horizontal：启用水平滚动"><a href="#Horizontal：启用水平滚动" class="headerlink" title="Horizontal：启用水平滚动"></a>Horizontal：启用水平滚动</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView水平竖直演示动画.gif" alt=""></p><h2 id="Vertical：启用垂直滚动"><a href="#Vertical：启用垂直滚动" class="headerlink" title="Vertical：启用垂直滚动"></a>Vertical：启用垂直滚动</h2><h2 id="Movement-Type：元素的运动类型"><a href="#Movement-Type：元素的运动类型" class="headerlink" title="Movement Type：元素的运动类型"></a>Movement Type：元素的运动类型</h2><p>滚动视图元素的运动类型。主要控制拖动时的反馈效果</p><p>Unrestricted（一般不使用）：不受限制，随便拖动</p><p>Elastic（常用）：回弹效果，当滚出边缘后，会弹回边界<br>Elasticity：回弹系数，控制回弹效果。值越大回弹越慢</p><p>Clamped：夹紧效果，始终限制在范围内，没有回弹效果<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView回弹演示动画.gif" alt=""></p><h2 id="Inertia：移动惯性"><a href="#Inertia：移动惯性" class="headerlink" title="Inertia：移动惯性"></a>Inertia：移动惯性</h2><p>如果开启，松开鼠标后会有一定的移动惯性</p><p>Deceleration Rate：减速率（0~1），0没有惯性，1不会停止</p><h2 id="Scroll-Sensitivity：滚轮敏感度"><a href="#Scroll-Sensitivity：滚轮敏感度" class="headerlink" title="Scroll Sensitivity：滚轮敏感度"></a>Scroll Sensitivity：滚轮敏感度</h2><p>（鼠标中间）和触摸板（笔记本）的滚动事件敏感性</p><h2 id="Viewport：关联滚动视图内容视口对象"><a href="#Viewport：关联滚动视图内容视口对象" class="headerlink" title="Viewport：关联滚动视图内容视口对象"></a>Viewport：关联滚动视图内容视口对象</h2><h2 id="Horizontal-Scrollbar：关联水平滚动条"><a href="#Horizontal-Scrollbar：关联水平滚动条" class="headerlink" title="Horizontal Scrollbar：关联水平滚动条"></a>Horizontal Scrollbar：关联水平滚动条</h2><h2 id="Visibility：是否在不需要时自动隐藏等模式"><a href="#Visibility：是否在不需要时自动隐藏等模式" class="headerlink" title="Visibility：是否在不需要时自动隐藏等模式"></a>Visibility：是否在不需要时自动隐藏等模式</h2><p>Permanent：一直显示滚动条<br>Auto Hide：自动隐藏滚动条<br>Auto Hide And Expand Viewport：自动隐藏滚动条并且自动拓展内容视口</p><h2 id="Spacing：滚动条和视口之间的间隔空间"><a href="#Spacing：滚动条和视口之间的间隔空间" class="headerlink" title="Spacing：滚动条和视口之间的间隔空间"></a>Spacing：滚动条和视口之间的间隔空间</h2><p><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView间距动画.gif" alt=""></p><h2 id="OnValueChanged：滚动视图位置改变时执行的函数列表"><a href="#OnValueChanged：滚动视图位置改变时执行的函数列表" class="headerlink" title="OnValueChanged：滚动视图位置改变时执行的函数列表"></a>OnValueChanged：滚动视图位置改变时执行的函数列表</h2><h1 id="代码控制"><a href="#代码控制" class="headerlink" title="代码控制"></a>代码控制</h1><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">ScrollRect scrollRect = <span class="keyword">this</span>.GetComponent&lt;ScrollRect&gt;();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 改变内容的大小，根据内容尺寸</span></span><br><span class="line">scrollRect.content.sizeDelta = <span class="keyword">new</span> Vector2(<span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置归一化位置 (0, 0.5f)</span></span><br><span class="line"><span class="comment">// 其中 x 表示水平方向的归一化值，范围是 0 到 1，0 表示左边缘，1 表示右边缘</span></span><br><span class="line"><span class="comment">// y 表示垂直方向的归一化值，范围是 0 到 1，0 表示下边缘，1 表示上边缘</span></span><br><span class="line">scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">0.5f</span>);</span><br></pre></td></tr></table></figure><h1 id="监听事件两种方式"><a href="#监听事件两种方式" class="headerlink" title="监听事件两种方式"></a>监听事件两种方式</h1><p>一、拖脚本<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollView</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ScrollViewValueChange</span>(<span class="params">Vector2 position</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;当前滚动位置: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402154412900.png" alt=""></p><p>二、代码监听</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ScrollViewExample</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> ScrollRect scrollRect; <span class="comment">// 绑定 ScrollRect 组件</span></span><br><span class="line">    <span class="keyword">public</span> GameObject itemPrefab; <span class="comment">// 绑定要添加的预制体</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 绑定滚动事件</span></span><br><span class="line">        scrollRect.onValueChanged.AddListener(OnScroll);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态添加 10 个 item 到 Content 中</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject newItem = Instantiate(itemPrefab, scrollRect.content);</span><br><span class="line">            newItem.GetComponentInChildren&lt;Text&gt;().text = <span class="string">&quot;Item &quot;</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 滚动到顶部</span></span><br><span class="line">        scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动到底部</span></span><br><span class="line">        scrollRect.normalizedPosition = <span class="keyword">new</span> Vector2(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 滚动到指定位置（0到1之间）</span></span><br><span class="line">        scrollRect.horizontalNormalizedPosition = <span class="number">0.5f</span>; <span class="comment">// 水平滚动到中间</span></span><br><span class="line">        scrollRect.verticalNormalizedPosition = <span class="number">0.5f</span>;   <span class="comment">// 垂直滚动到中间</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnScroll</span>(<span class="params">Vector2 position</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;当前滚动位置: &quot;</span> + position);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h1><p>在上节课的Slider练习题基础上，请用现在所学知识，制作一个这样的功能：<br>有一个背包按钮，点击后可以打开一个背包面板，面板中有一个滚动视图，滚动视图中动态创建10个道具图标<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/ScrollView练习动画.gif" alt=""></p><p>Content 的子对象的排列方式</p><ol><li>使用 Layout Group 自动排列</li><li>手动设置对象位置</li></ol><p>先创建一个背包按钮<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402165715786.png" alt=""></p><p>拼好背包面板<br>取消掉水平的滚动条，做一个退出按钮<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402165809909.png" alt=""></p><p>拿样例图来对比背包滚动视图的位置，确定物品的起始位置（这里是 （10，-10，0））<br><img src="/2025/04/02/UI%E7%B3%BB%E7%BB%9F/UGUI/16.ScrollView%E6%BB%9A%E5%8A%A8%E8%A7%86%E5%9B%BE%E6%8E%A7%E4%BB%B6/file-20250402170111421.png" alt=""></p><p><strong>手动设置ScrollView 的 Content 的子对象排列</strong><br>BagPanel.cs<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">BagPanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> BagPanel instance;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> BagPanel Instance =&gt; instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ScrollRect svItem;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">int</span> itemCount = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">float</span> spacing = <span class="number">40f</span>; <span class="comment">// 图与图之间的间隔</span></span><br><span class="line">    <span class="keyword">public</span> GameObject itemPrefab;   </span><br><span class="line">    <span class="keyword">public</span> Button btnClose;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        instance = <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">float</span> itemwidth = itemPrefab.GetComponent&lt;RectTransform&gt;().rect.width;        <span class="comment">// 元素的宽度</span></span><br><span class="line">        <span class="built_in">float</span> itemheight = itemPrefab.GetComponent&lt;RectTransform&gt;().rect.height;      <span class="comment">// 元素的高度</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 动态创建itemCount个图，作为滚动视图的子物体</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; itemCount; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            GameObject newItem = Instantiate(itemPrefab, svItem.content);</span><br><span class="line">            newItem.transform.localPosition = <span class="keyword">new</span> Vector3(<span class="number">10</span>, <span class="number">-10</span>, <span class="number">0</span>) + </span><br><span class="line">                <span class="keyword">new</span> Vector3((i % <span class="number">4</span>) * (itemwidth + spacing), -(i / <span class="number">4</span>) * (itemheight + spacing), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 设置content的高度</span></span><br><span class="line">        svItem.content.sizeDelta = <span class="keyword">new</span> Vector2(</span><br><span class="line">            svItem.content.sizeDelta.x,</span><br><span class="line">            (itemheight + spacing) * Mathf.Ceil(itemCount / <span class="number">4f</span>) - spacing</span><br><span class="line">        );</span><br><span class="line"></span><br><span class="line">        gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        btnClose.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            gameObject.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>GamePanel.cs<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">GamePanel</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 背包按钮</span></span><br><span class="line">    <span class="keyword">public</span> Button btnBag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 背包按钮</span></span><br><span class="line">        btnBag.onClick.AddListener(() =&gt;</span><br><span class="line">        &#123;</span><br><span class="line">            BagPanel.Instance.gameObject.SetActive(<span class="literal">true</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><script type="text&#x2F;javascript" src="https://unpkg.com/kity@2.0.4/dist/kity.min.js"></script><script type="text&#x2F;javascript" src="https://unpkg.com/kityminder-core@1.4.50/dist/kityminder.core.min.js"></script><script defer="true" type="text&#x2F;javascript" src="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.js"></script><link rel="stylesheet" type="text&#x2F;css" href="https://unpkg.com/hexo-simple-mindmap@0.8.0/dist/mindmap.min.css">]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ScrollRect是什么&quot;&gt;&lt;a href=&quot;#ScrollRect是什么&quot; class=&quot;headerlink&quot; title=&quot;ScrollRect是什么&quot;&gt;&lt;/a&gt;ScrollRect是什么&lt;/h1&gt;&lt;p&gt;ScrollRect是滚动视图组件，是UGUI中用于</summary>
      
    
    
    
    <category term="UI系统" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/categories/UI%E7%B3%BB%E7%BB%9F/UGUI/"/>
    
    
    <category term="UI系统" scheme="http://example.com/tags/UI%E7%B3%BB%E7%BB%9F/"/>
    
    <category term="UGUI" scheme="http://example.com/tags/UGUI/"/>
    
    <category term="UGUI组合控件" scheme="http://example.com/tags/UGUI%E7%BB%84%E5%90%88%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
</feed>
